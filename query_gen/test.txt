"\nYou are given the following structured information:\n\nDomain: Travel\nTask Type: Find Proper Accommodations\nTask Description: Find proper hotels based on some options.  It requires searching across different platforms, comparing options based on real-time data, and retrieving specific, granular details like policies, recent reviews, or room availability that are crucial for making a booking decision.\n\nTool List:\n[\n  {\n    \"parent tool name\": \"Airbnb listings\",\n    \"parent tool description\": \"Join the over 300 users/customers and access all Airbnb data updated daily.\\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \\\"market\\\". \\nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\\n\\nWhile our data are not...\",\n    \"required_parameters\": [\n      {\n        \"name\": \"offset\",\n        \"type\": \"NUMBER\",\n        \"description\": \"index to start from\",\n        \"default\": \"0\"\n      }\n    ],\n    \"optional_parameters\": [],\n    \"code\": \"import requests\\n\\nurl = \\\"https://airbnb-listings.p.rapidapi.com/v2/markets\\\"\\nquerystring = {\\\"offset\\\": offset}\\n\\nheaders = {\\n    \\\"X-RapidAPI-Key\\\": \\\"SIGN-UP-FOR-KEY\\\",\\n    \\\"X-RapidAPI-Host\\\": \\\"airbnb-listings.p.rapidapi.com\\\"\\n}\\n\\nresponse = requests.get(url, headers=headers, params=querystring)\\n\\nprint(response.json())\\n\",\n    \"category\": \"Airbnb\",\n    \"tool name\": \"Airbnb listings: Markets\",\n    \"tool description\": \"Retrieves market names for the 'Listing by market' endpoint, returning up to 50 results. This is part of a service that provides access to Airbnb's daily-updated data, including listings details, prices, availability, and reviews, enabling users to efficiently query and analyze accommodation information through various parameters like listing IDs, geo-coordinates, or markets. Backed by a platform used by over 300 customers, it ensures timely data access with a 24-hour response guarantee for inquiries.\",\n    \"API name\": \"Markets\",\n    \"domain name\": \"Travel\",\n    \"output_info\": {\n      \"output_info_summary\": \"The tool's output is a list of market names recognized by the Airbnb system. These market names, which can represent cities, regions, or other geographical areas, are intended to be used as parameters for other tools, such as searching for listings within a specific market. Each response includes a unique request identifier and an array of market objects.\",\n      \"output_format\": \"The output is a JSON object containing a 'requestId' string and a 'results' key. The 'results' key holds a JSON array of objects, where each object has a single 'market' key with a string value representing the market's name. The tool description indicates that the results are paginated, returning up to 50 markets per request.\"\n    },\n    \"connected tools\": [\n      {\n        \"tool name\": \"Airbnb listings: Listings by market\",\n        \"connect params\": [\n          {\n            \"name\": \"market\",\n            \"description\": \"The market parameter can use market names from the source tool's output to search for listings in a specific market\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Airbnb listings: Count listings by market\",\n        \"connect params\": [\n          {\n            \"name\": \"market\",\n            \"description\": \"The market parameter can use market names from the source tool's output to count listings in a specific market\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"AI Trip Planner: Get Trip Plan\",\n        \"connect params\": [\n          {\n            \"name\": \"destination\",\n            \"description\": \"The destination parameter can use market names from the source tool's output as travel destinations for trip planning\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"parent tool name\": \"Cities Cost of Living\",\n    \"parent tool description\": \"Get detailed information about the living expenses of 650+ cities around the world.\",\n    \"tool name\": \"Cities Cost of Living: Get Cities Details by Coordinates\",\n    \"tool description\": \"Retrieves detailed information about cities located within a specified radius of given coordinates, with living expenses presented in requested currencies. This endpoint leverages a comprehensive database covering living expenses for over 650 cities worldwide, providing valuable economic insights about cost of living factors in various urban centers. The data allows users to compare financial requirements across different global locations based on geographic proximity to a central point.\",\n    \"required_parameters\": [\n      {\n        \"name\": \"currencies\",\n        \"type\": \"OBJECT\",\n        \"description\": \"JSON object in the format:\\n```[\\\"currency1\\\", \\\"currencyN\\\"]```\",\n        \"default\": \"[\\\"USD\\\",\\\"Euro (example of wrong currency code)\\\",\\\"CHF\\\"]\"\n      },\n      {\n        \"name\": \"longitude\",\n        \"type\": \"NUMBER\",\n        \"description\": \"\",\n        \"default\": \"8.55\"\n      },\n      {\n        \"name\": \"latitude\",\n        \"type\": \"NUMBER\",\n        \"description\": \"\",\n        \"default\": \"47.36667\"\n      }\n    ],\n    \"optional_parameters\": [\n      {\n        \"name\": \"distance_unit\",\n        \"type\": \"STRING\",\n        \"description\": \"Default value is ```kilometers```\\n\\nPossible values are ```km | mi | kilometers | miles | m | meters | feet | ft | nautical | nm```\",\n        \"default\": \"kilometers\"\n      },\n      {\n        \"name\": \"radius\",\n        \"type\": \"NUMBER\",\n        \"description\": \"Default value is ```100```\",\n        \"default\": \"100\"\n      }\n    ],\n    \"code\": \"import requests\\n\\nurl = \\\"https://cities-cost-of-living1.p.rapidapi.com/get_cities_details_by_coordinates\\\"\\nquerystring = {\\\"distance_unit\\\": \\\"kilometers\\\", \\\"currencies\\\": \\\"[\\\\\\\"USD\\\\\\\",\\\\\\\"Euro (example of wrong currency code)\\\\\\\",\\\\\\\"CHF\\\\\\\"]\\\", \\\"longitude\\\": \\\"8.55\\\", \\\"radius\\\": \\\"100\\\", \\\"latitude\\\": \\\"47.36667\\\"}\\n\\nheaders = {\\n            \\\"X-RapidAPI-Key\\\": \\\"SIGN-UP-FOR-KEY\\\",\\n            \\\"X-RapidAPI-Host\\\": \\\"cities-cost-of-living1.p.rapidapi.com\\\"\\n        }\\n\\nresponse = requests.post(url, headers=headers, params=querystring)\\nprint(response.json())\\n\",\n    \"API name\": \"Get Cities Details by Coordinates\",\n    \"domain name\": \"Travel\",\n    \"output_info\": {\n      \"output_info_summary\": \"Based on the tool description, the output should contain detailed cost of living information for cities. However, all the provided examples are HTTP 500 server error messages. This indicates that the tool may fail and return a simple error string instead of the expected city data.\",\n      \"output_format\": \"The provided examples are plain strings representing server errors. The format or structure of a successful response cannot be determined from the given data, but it is likely a string in case of failure.\"\n    },\n    \"connected tools\": [\n      {\n        \"tool name\": \"AI Trip Planner: Get Trip Plan\",\n        \"connect params\": [\n          {\n            \"name\": \"destination\",\n            \"description\": \"If the source tool worked properly, it would provide city names that could be used as destinations for trip planning\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Airbnb listings: Room prices and Availability by lat lng\",\n        \"connect params\": [\n          {\n            \"name\": \"lat\",\n            \"description\": \"If the source tool worked properly, it would provide latitude coordinates of cities\"\n          },\n          {\n            \"name\": \"lng\",\n            \"description\": \"If the source tool worked properly, it would provide longitude coordinates of cities\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Airbnb listings: Listings by lat lng\",\n        \"connect params\": [\n          {\n            \"name\": \"lat\",\n            \"description\": \"If the source tool worked properly, it would provide latitude coordinates of cities\"\n          },\n          {\n            \"name\": \"lng\",\n            \"description\": \"If the source tool worked properly, it would provide longitude coordinates of cities\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Airbnb listings: Count listings by lat lng\",\n        \"connect params\": [\n          {\n            \"name\": \"lat\",\n            \"description\": \"If the source tool worked properly, it would provide latitude coordinates of cities\"\n          },\n          {\n            \"name\": \"lng\",\n            \"description\": \"If the source tool worked properly, it would provide longitude coordinates of cities\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Airbnb listings: Prices and Availability by lat lng\",\n        \"connect params\": [\n          {\n            \"name\": \"lat\",\n            \"description\": \"If the source tool worked properly, it would provide latitude coordinates of cities\"\n          },\n          {\n            \"name\": \"lng\",\n            \"description\": \"If the source tool worked properly, it would provide longitude coordinates of cities\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Airbnb Market Maker: airbnbMarketMaker\",\n        \"connect params\": [\n          {\n            \"name\": \"coordinate\",\n            \"description\": \"If the source tool worked properly, it would provide coordinates that could be formatted as a GEOPOINT\"\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"parent tool name\": \"Gas Price\",\n    \"parent tool description\": \"Reach gasoline and diesel prices in different fuel stations in different cities.\",\n    \"tool name\": \"Gas Price: canada\",\n    \"tool description\": \"Retrieves current gasoline prices across Canada. This service provides access to up-to-date fuel pricing information from various gas stations throughout Canadian cities, allowing users to compare both gasoline and diesel prices between different fuel retailers and locations. The data helps consumers make informed decisions about where to purchase fuel based on current market rates in their area.\",\n    \"required_parameters\": [],\n    \"optional_parameters\": [],\n    \"code\": \"import requests\\n\\nurl = \\\"https://gas-price.p.rapidapi.com/canada\\\"\\n\\nheaders = {\\n    \\\"X-RapidAPI-Key\\\": \\\"SIGN-UP-FOR-KEY\\\",\\n    \\\"X-RapidAPI-Host\\\": \\\"gas-price.p.rapidapi.com\\\"\\n}\\n\\nresponse = requests.get(url, headers=headers)\\n\\nprint(response.json())\\n\",\n    \"API name\": \"canada\",\n    \"domain name\": \"Travel\",\n    \"output_info\": {\n      \"output_info_summary\": \"The tool's output is a list of average gasoline prices for various Canadian provinces. For each province, the output provides the name, the average gasoline price, and the currency in which the price is denominated. This information is intended to allow users to compare fuel costs across different regions of Canada.\",\n      \"output_format\": \"The output is a JSON object with a top-level key 'result' which contains a JSON array of objects. Each object in the array represents a province and its gas price. All values within these objects, including the price, are formatted as strings. There is no evidence of pagination or complex nesting.\"\n    },\n    \"connected tools\": [\n      {\n        \"tool name\": \"AI Trip Planner: Get Trip Plan\",\n        \"connect params\": [\n          {\n            \"name\": \"destination\",\n            \"description\": \"The gas price data for Canadian provinces could inform trip planning to Canadian destinations\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Cost of living and prices: Prices\",\n        \"connect params\": [\n          {\n            \"name\": \"country_name\",\n            \"description\": \"The gas price data for Canada can complement cost of living information for Canadian cities\"\n          },\n          {\n            \"name\": \"city_name\",\n            \"description\": \"The gas price data by province can provide context for city-specific cost analysis in Canada\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Cities Cost of Living: Get Cities Details by Name\",\n        \"connect params\": [\n          {\n            \"name\": \"cities\",\n            \"description\": \"The gas price data can be used to enrich cost of living analysis for Canadian cities\"\n          }\n        ]\n      },\n      {\n        \"tool name\": \"Multimodal trip planner: Route and directions\",\n        \"connect params\": [\n          {\n            \"name\": \"waypoints\",\n            \"description\": \"Gas prices in different provinces can inform route planning decisions for driving in Canada\"\n          }\n        ]\n      }\n    ]\n  }\n]\n\n\nYour task is to:\n1. Design a complex user query that reflects the task description and requires **multiple tools to be invoked in parallel**, where **none of the tools depend on the outputs of others**.\n2. Ensure that the query is **challenging and realistic**, involving rich and precise requirements (e.g., filtering, customization, geographic precision).\n3. Clearly specify the **tool-calling trajectory**: for each tool used to fulfill the query, include its name, description, required parameters (with realistic values), and optional parameters if needed.\n\n\nYour response should be in the following JSON format:\n\n```json\n{\n\"query\": \"<natural language query here>\",\n\"tool list\": [\n{\"tool name\": \"<tool name>\",\n\"tool description\": \"<tool description>\",\n\"required parameters\": [{\"name\": \"<parameter name>\", \"value\": \"<parameter value>\"},...],\n\"optional parameters\": [{\"name\": \"<parameter name>\", \"value\": \"<parameter value>\"},...]\n},\n...]\n}\n```\n"