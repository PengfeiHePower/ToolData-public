[
  {
    "parent tool name": "AI Trip Planner",
    "parent tool description": "The API generates personalized trip plans based on the user's specified number of days and location. Using AI, the system recommends popular tourist attractions, local experiences, and accommodations based on user preferences and past travel behavior. The generated trip plans can be customized and adjusted to suit the user's needs, making it a valuable tool for anyone planning a trip.",
    "required_parameters": [
      {
        "name": "days",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      },
      {
        "name": "destination",
        "type": "STRING",
        "description": "",
        "default": "London,UK"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ai-trip-planner.p.rapidapi.com/\"\nquerystring = {\"days\": days, \"destination\": destination}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-trip-planner.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Trip Planner: Get Trip Plan",
    "tool description": "Generates a trip plan based on the user's specified number of days and destination. This is part of an API that uses AI to recommend popular tourist attractions, local experiences, and accommodations tailored to user preferences and past travel behavior, enabling personalized and customizable trip planning for efficient travel itineraries.",
    "API name": "Get Trip Plan",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a complete travel itinerary for a specified destination and duration. The itinerary is broken down by day, with each day containing a chronological list of activities. Each activity includes a suggested time and a brief description, covering attractions, dining, and local experiences.",
      "output_format": "The output is a string-serialized JSON object. The root object contains an '_id' (unique identifier), a 'key' (representing the query parameters), and a 'plan' array. Each object in the 'plan' array represents a day and contains a 'day' number and a nested 'activities' array. Each object in the 'activities' array represents a single activity and contains a 'time' and 'description'."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "The destination from the trip plan can be used to search for travel options"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The destination from the trip plan can be used to search for hotels"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The destination from the trip plan can be used to search for Airbnb listings"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The destination from the trip plan can be used to search for Airbnb listings"
          }
        ]
      },
      {
        "tool name": "Deutsche Bahn: Autocomplete",
        "connect params": [
          {
            "name": "query",
            "description": "The destination or activity locations from the trip plan can be used to search for train stations"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "If the trip plan includes a US state, this can be used to check gas prices"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "market",
        "type": "STRING",
        "description": "",
        "default": "Tenerife"
      },
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "index to start from",
        "default": "0"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket\"\nquerystring = {\"maxGuestCapacity\": maxguestcapacity, \"market\": market, \"bedrooms\": bedrooms, \"offset\": offset}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Listings by market",
    "tool description": "Retrieves 50 listing IDs and last updated timestamps for prices, availability, and ratings in a specified market, filterable by bedrooms and max guest capacity. This endpoint leverages the parent tool's access to Airbnb's daily-updated database of listings, enabling users to track pricing and availability fluctuations across 300+ client accounts. By focusing on core metadata, it provides a streamlined way to monitor critical updates without retrieving full listing details, supporting data-driven decisions through timely, structured insights.",
    "API name": "Listings by market",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of up to 50 Airbnb listings within a specified market. For each listing, it provides the unique Airbnb ID and the last known timestamps for updates to its price (`last_updated`), availability (`last_avail_check`), and ratings (`last_ratings`). This information is intended for monitoring changes and trends in key listing data without needing to retrieve full, detailed listing information.",
      "output_format": "The output is a JSON object containing a `results` key, which holds a JSON array of listing objects. Each object in the array represents a single listing. The `last_ratings` field within a listing object can be null. The description indicates a fixed return limit of 50 listings per request, and there is no evidence of pagination or cursoring in the examples."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "bedrooms",
            "connection_type": "Can use the same bedroom filter as the source"
          },
          {
            "param_name": "maxGuestCapacity",
            "connection_type": "Can use the same guest capacity filter as the source"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "bedrooms",
            "connection_type": "Can use the same bedroom filter as the source"
          },
          {
            "param_name": "maxGuestCapacity",
            "connection_type": "Can use the same guest capacity filter as the source"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "latitude",
        "default": "28.0852473"
      },
      {
        "name": "lng",
        "type": "NUMBER",
        "description": "longitude",
        "default": "-16.7349705"
      },
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "index to start from",
        "default": "0"
      },
      {
        "name": "range",
        "type": "NUMBER",
        "description": "range in meters from latitude and longitude point",
        "default": "500"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/listingsByLatLng\"\nquerystring = {\"lat\": lat, \"lng\": lng, \"offset\": offset, \"bedrooms\": bedrooms, \"range\": range, \"maxGuestCapacity\": maxguestcapacity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Listings by lat lng",
    "tool description": "Retrieves 50 listing IDs, distances from a starting point, and last updated timestamps for prices, availability, and ratings within a geographical range, with filters for bedrooms and max guest capacity. This endpoint is part of a comprehensive Airbnb data platform accessed by over 300 users, leveraging daily-updated listings and analytics to provide actionable insights into accommodations, ensuring real-time accuracy for decision-making through structured data queries.",
    "API name": "Listings by lat lng",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of up to 50 Airbnb listings within a specified geographical area. For each listing, it provides a unique ID, the distance from the search coordinates, and timestamps indicating the last time its pricing, availability, and ratings data were updated. This allows users to identify nearby properties and gauge the recency of their data for further queries.",
      "output_format": "The output is a JSON object containing a `requestId` and a `results` key. The `results` key holds a JSON array of objects, where each object represents one Airbnb listing. There is no information or mechanism for pagination provided in the examples."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude as the source search"
          },
          {
            "name": "lng",
            "description": "Can use the same longitude as the source search"
          },
          {
            "name": "range",
            "description": "Can use the same range as the source search"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude as the source search"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude as the source search"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "market",
        "type": "STRING",
        "description": "",
        "default": "Tenerife"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "Number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/countByMarket\"\nquerystring = {\"market\": market, \"bedrooms\": bedrooms, \"maxGuestCapacity\": maxguestcapacity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Count listings by market",
    "tool description": "Retrieves the count of Airbnb listings in a specified market, filtered by bedrooms and maximum guest capacity. This endpoint is part of a comprehensive service providing real-time access to Airbnb data, including listing details, future prices, availability, and reviews. By leveraging a database of listings updated daily, it enables users to analyze accommodation trends and make data-driven decisions, supported by 24-hour response times for inquiries and scalability for detailed market insights.",
    "API name": "Count listings by market",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides the total count of Airbnb listings within a specific market, based on filters like the number of bedrooms and guest capacity. This numerical count, along with a unique request ID, allows users to quantify the accommodation supply in a given area. The information is primarily used for market analysis and tracking accommodation trends.",
      "output_format": "The output is a JSON object containing a `requestId` string and a `results` key. The `results` key holds a JSON array that consistently contains a single object. This nested object has one key, `totalListings`, whose value is a string representing the total count."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The count of listings could inform destination selection based on accommodation availability"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The market parameter can use the same market value that generated the count"
          },
          {
            "name": "bedrooms",
            "description": "The bedrooms filter can match what was used in the count query"
          },
          {
            "name": "maxGuestCapacity",
            "description": "The guest capacity filter can match what was used in the count query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "lng",
        "type": "NUMBER",
        "description": "longitude",
        "default": "-16.7349705"
      },
      {
        "name": "range",
        "type": "NUMBER",
        "description": "range in meters from latitude and longitude point",
        "default": "500"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "latitude",
        "default": "28.0852473"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/countByLatLng\"\nquerystring = {\"lng\": lng, \"maxGuestCapacity\": maxguestcapacity, \"range\": range, \"bedrooms\": bedrooms, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Count  listings by lat lng",
    "tool description": "Retrieves the count of Airbnb listings within a specified geographical range, filtered by bedrooms and maximum guest capacity. This endpoint leverages the parent tool's access to real-time Airbnb data, including listings details, pricing, and availability, powered by a database updated daily. It enables users to quickly assess property availability based on location and capacity constraints, complementing the broader suite of analytics and inquiry services offered by the platform.",
    "API name": "Count  listings by lat lng",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides the total count of Airbnb listings that match the specified geographical and capacity criteria. The primary piece of information is the 'totalListings' count, which is nested within a 'results' array. Additionally, a unique 'requestId' is provided at the top level, likely for tracking or debugging the specific API call.",
      "output_format": "The output is a JSON object serialized as a string. It contains a top-level 'requestId' (string) and a 'results' key, which holds an array. This array contains a single object, which in turn has a 'totalListings' key. The value for 'totalListings' is a string representation of the numerical count."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "latitude"
          },
          {
            "name": "lng",
            "description": "longitude"
          },
          {
            "name": "range",
            "description": "range in meters from latitude and longitude point"
          },
          {
            "name": "bedrooms",
            "description": "number of bedrooms"
          },
          {
            "name": "maxGuestCapacity",
            "description": "Max guest the listing can accomodate"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "latitude"
          },
          {
            "name": "lng",
            "description": "longitude"
          },
          {
            "name": "range",
            "description": "range in meters from latitude and longitude point"
          },
          {
            "name": "bedrooms",
            "description": "number of bedrooms"
          },
          {
            "name": "maxGuestCapacity",
            "description": "Max guest the listing can accomodate"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Latitude"
          },
          {
            "name": "longitude",
            "description": "Longitude"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "state",
        "type": "STRING",
        "description": "",
        "default": "IT"
      }
    ],
    "optional_parameters": [
      {
        "name": "admin1",
        "type": "STRING",
        "description": "",
        "default": "Lazio"
      },
      {
        "name": "admin2",
        "type": "STRING",
        "description": "",
        "default": "Citta metropolitana di Roma Capitale"
      },
      {
        "name": "admin3",
        "type": "STRING",
        "description": "",
        "default": "Roma"
      },
      {
        "name": "place",
        "type": "STRING",
        "description": "",
        "default": "Borgo"
      },
      {
        "name": "admin4",
        "type": "STRING",
        "description": "",
        "default": "Municipio Roma I"
      },
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/countByGeoRef\"\nquerystring = {\"admin1\": admin1, \"state\": state, \"admin2\": admin2, \"admin3\": admin3, \"place\": place, \"admin4\": admin4, \"maxGuestCapacity\": maxguestcapacity, \"bedrooms\": bedrooms}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Count Listings by administrative divisions",
    "tool description": "Retrieves the count of Airbnb listings in a specified geographic area using administrative division parameters (admin1, admin2, etc.), with dependencies enforced to ensure accuracy (e.g., admin1 required for admin2). Filters can be applied based on bedrooms and maximum guest capacity. This endpoint is part of a comprehensive service providing access to all Airbnb data updated daily, including listings details, pricing, reviews, and analytics, enabling precise data-driven insights through structured geographic and property-based queries.",
    "API name": "Count Listings by administrative divisions",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides the total count of Airbnb listings that match the specified geographic (administrative divisions) and property-based (bedrooms, guest capacity) filters. The primary information is the 'totalListings' count, which is nested within a results array. Each response is also uniquely identified by a 'requestId' for tracking.",
      "output_format": "The output is a JSON object. It contains a top-level 'requestId' (string) and a 'results' key, which holds a JSON array. This array contains a single JSON object with one key, 'totalListings', whose value is a string-encoded integer."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "year",
        "type": "NUMBER",
        "description": "the year",
        "default": "2024"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "latitude",
        "default": "28.0852473"
      },
      {
        "name": "lng",
        "type": "NUMBER",
        "description": "longitude",
        "default": "-16.7349705"
      },
      {
        "name": "range",
        "type": "NUMBER",
        "description": "range in meters from latitude and longitude point",
        "default": "500"
      },
      {
        "name": "month",
        "type": "STRING",
        "description": "the month",
        "default": "1"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/avgPricesByLatLng\"\nquerystring = {\"year\": year, \"lat\": lat, \"lng\": lng, \"range\": range, \"month\": month, \"bedrooms\": bedrooms, \"maxGuestCapacity\": maxguestcapacity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Prices and Availability by lat lng",
    "tool description": "Retrieves average prices, availability percentages, and processed property counts within a 20,000-meter radius of a geographical point, filterable by bedrooms and guest capacity. This analytics endpoint leverages the parent tool's access to daily-updated Airbnb data, providing insights into property availability and pricing trends to help users make informed decisions about accommodations.",
    "API name": "Prices and Availability by lat lng",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a statistical summary of Airbnb listings within a specified geographical radius. A successful response returns aggregated data, including the total number of properties, median prices for all and for available properties, and the overall availability percentage. This information is intended to help users understand local accommodation market trends. The tool also returns a simple error message object in cases of failure, such as an authentication or subscription issue.",
      "output_format": "The output is a single, flat JSON object. The structure differs for successful and failed requests. A successful response contains a set of keys like `totalProperties`, `mediumPrice`, and `availability`. An error response typically contains a single `message` key with a string value. There is no indication of nesting, arrays, or pagination."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's query"
          },
          {
            "name": "lng",
            "description": "Can use the same longitude from the source tool's query"
          },
          {
            "name": "range",
            "description": "Can use the same or adjusted range based on property density from source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's query"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "index to start from",
        "default": "0"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/amenities\"\nquerystring = {\"offset\": offset}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Amenities",
    "tool description": "Retrieves amenity IDs and descriptions, returning up to 50 results. As part of the Airbnb data platform, which provides access to daily-updated listings, future prices, availability, and reviews via listing IDs, geolocation, or market, this tool leverages the extensive database to offer detailed amenity information, enhancing the ability to analyze and understand accommodation options comprehensively.",
    "API name": "Amenities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of amenities available on the Airbnb platform. Each amenity is defined by a unique integer ID and a corresponding text description. This information serves as a reference, enabling users or other tools to identify and understand the specific features and facilities offered in property listings.",
      "output_format": "The output is a JSON object with a top-level `requestId` (string) and a `results` key. The `results` key contains a JSON array of up to 50 amenity objects. Each object in this array consists of an `amenity_id` (integer) and an `amenity` (string). The limit of 50 results per call implies a pagination system, though the mechanism is not shown in the examples."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Download filter amenities",
        "connect params": [
          {
            "name": "limit",
            "description": "Amenity IDs from the source tool could be used to limit the number of amenities retrieved"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Download amenities",
        "connect params": [
          {
            "name": "limit",
            "description": "Amenity IDs from the source tool could be used to limit the number of amenities retrieved"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "Amenity IDs could be used to filter listings with specific amenities in a market"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Amenity IDs could be used in conjunction with location data to find listings with specific amenities"
          },
          {
            "name": "lng",
            "description": "Amenity IDs could be used in conjunction with location data to find listings with specific amenities"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "index to start from",
        "default": "0"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/markets\"\nquerystring = {\"offset\": offset}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Markets",
    "tool description": "Retrieves market names for the 'Listing by market' endpoint, returning up to 50 results. This is part of a service that provides access to Airbnb's daily-updated data, including listings details, prices, availability, and reviews, enabling users to efficiently query and analyze accommodation information through various parameters like listing IDs, geo-coordinates, or markets. Backed by a platform used by over 300 customers, it ensures timely data access with a 24-hour response guarantee for inquiries.",
    "API name": "Markets",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of market names recognized by the Airbnb system. These market names, which can represent cities, regions, or other geographical areas, are intended to be used as parameters for other tools, such as searching for listings within a specific market. Each response includes a unique request identifier and an array of market objects.",
      "output_format": "The output is a JSON object containing a 'requestId' string and a 'results' key. The 'results' key holds a JSON array of objects, where each object has a single 'market' key with a string value representing the market's name. The tool description indicates that the results are paginated, returning up to 50 markets per request."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "Deutsche Bahn: Autocomplete",
        "connect params": [
          {
            "name": "query",
            "description": "Query parameter",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "Search string that will enable a list of selection to be listed to the traveller.",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "Name",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "Name",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search flights locations",
        "connect params": [
          {
            "name": "name",
            "description": "Name",
            "type": "STRING"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Deutsche Bahn",
    "parent tool description": "Search stations and trips within Deutsche Bahn network. Find a train or public transport stop, search trains, trams, subway, and buses between two stations in the german railway network.. Get journey and fare data, departure and arrival times for any stop in Germany",
    "required_parameters": [
      {
        "name": "query",
        "type": "STRING",
        "description": "Query parameter",
        "default": "berlin"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://deutsche-bahn1.p.rapidapi.com/autocomplete\"\nquerystring = {\"query\": query}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"deutsche-bahn1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Deutsche Bahn: Autocomplete",
    "tool description": "Searches for train and public transport stations in Germany and across Europe, leveraging the Deutsche Bahn network to provide detailed journey and fare data, departure and arrival times, and route options between stops. This endpoint is part of a broader tool that enables users to find transport stops, search trains, trams, subways, and buses between locations, and access real-time information for planning efficient trips within Germany and beyond.",
    "API name": "Autocomplete",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a list of public transport stations and stops that match a given search query. Each item in the list is an object containing a human-readable `name` of the station and a unique station `id`. This output is intended to be used for disambiguating locations and providing a valid station ID for subsequent API calls, such as searching for routes or departure times.",
      "output_format": "The output is a JSON array of objects, where the entire array is serialized as a string. Each object in the array consists of two key-value pairs: 'id' (a string) and 'name' (a string). No nesting is observed within the objects."
    },
    "connected tools": [
      {
        "tool name": "Flixbus: schedule",
        "connect params": [
          {
            "name": "station_id",
            "description": "Station id"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "flnr",
        "type": "STRING",
        "description": "The flight number to request",
        "default": "DL456"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/flight/search\"\nquerystring = {\"flnr\": flnr}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: flightSearch",
    "tool description": "Retrieves a list of flights for a specific flight number, with optional date filters to narrow results, ordered by departure date ascending, and includes the next departure time for pagination. This endpoint is part of Flightera's service, which provides flight status, on-time performance, and statistics. It leverages the parent tool's data to ensure accurate flight information retrieval, enforcing subscription-level date range restrictions to deliver reliable results.",
    "API name": "flightSearch",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output is a JSON object that provides information about flights. In a successful case, it is expected to return a list of flight data, including status and performance statistics, ordered by departure date. In an error case, such as when the requested date is outside the user's subscription limits, it returns a JSON object with an 'Error' key and a descriptive message.",
      "output_format": "The output is a JSON object. The provided examples only illustrate the error format, which consists of a single key 'Error' with a string value. Based on the description, a successful response would likely contain a list of flight objects and a 'next_departure_time' key for pagination."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          },
          {
            "name": "date",
            "description": "The date, if omitted the current flight will be returned"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          },
          {
            "name": "aptFrom",
            "description": "Departure airport ident"
          },
          {
            "name": "aptTo",
            "description": "Arrival airport ident"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Ident of the airport to request"
          },
          {
            "name": "time",
            "description": "Timestamp in UTC"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "iata",
        "type": "STRING",
        "description": "The IATA code of the airline",
        "default": "AA"
      },
      {
        "name": "name",
        "type": "STRING",
        "description": "The name or part of the name of the airline, case insensitive",
        "default": ""
      },
      {
        "name": "icao",
        "type": "STRING",
        "description": "The ICAO code of the airline",
        "default": ""
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "The ISO 3166-1 alpha-2 code country code to request",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airline/search\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airlineSearch",
    "tool description": "Retrieves a list of airlines based on a country, airline identifiers, or a name search pattern, allowing multiple parameters to refine the query. This endpoint leverages Flightera's flight data infrastructure, which aggregates flight status, on-time performance, and statistics, to provide accurate airline information for enhanced travel planning and research.",
    "API name": "airlineSearch",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airline objects matching the search query. Each object contains details for a specific airline, including its common name and various industry-standard identifiers such as IATA and ICAO codes. This data is useful for identifying airlines for flight planning and research.",
      "output_format": "The output is a JSON array of objects. Each object represents an airline and contains string values for its identifiers and name. The 'iata' key and its corresponding value may be absent for some airlines."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request",
            "connection_type": "The airline code from the source tool can be combined with a flight number"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request",
            "connection_type": "The airline code from the source tool can be combined with a flight number"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineStatistics",
        "connect params": [
          {
            "param_name": "ident",
            "description": "The ident of the airline, as returned by /airline/search",
            "connection_type": "Direct use of airline identifier from source tool"
          },
          {
            "param_name": "iata",
            "description": "The IATA code of the airline, must have a length of 3",
            "connection_type": "Direct use of IATA code from source tool"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4",
            "connection_type": "Direct use of ICAO code from source tool"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineInfo",
        "connect params": [
          {
            "param_name": "ident",
            "description": "The ident of the airline, as returned by /airline/search",
            "connection_type": "Direct use of airline identifier from source tool"
          },
          {
            "param_name": "iata",
            "description": "The IATA code of the airline, must have a length of 3",
            "connection_type": "Direct use of IATA code from source tool"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4",
            "connection_type": "Direct use of ICAO code from source tool"
          },
          {
            "param_name": "name",
            "description": "The name of the airline. Not case sensitive",
            "connection_type": "Direct use of airline name from source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "model",
        "type": "STRING",
        "description": "Model ICAO code",
        "default": ""
      },
      {
        "name": "airline_ident",
        "type": "STRING",
        "description": "The ident of the airline, as returned by /airline/search",
        "default": ""
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "Two letter country code",
        "default": "US"
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/aircraft/search\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: aircraftSearch",
    "tool description": "Retrieves a list of currently active aircraft registrations based on search criteria such as airline identifier, country, or aircraft model, with multiple filters chained as AND conditions. This endpoint leverages Flightera's flight data and aircraft databases to provide precise, real-time information, enabling efficient aviation tracking and analysis by combining operational insights with comprehensive registration details.",
    "API name": "aircraftSearch",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of aircraft registration numbers for currently active aircraft that match the specified search criteria. This information can be used to identify specific aircraft for tracking or analysis. In case of an invalid search query, such as a non-existent airline, it provides a descriptive error message instead.",
      "output_format": "The output format is conditional. A successful query returns a JSON array of strings, where each string is an aircraft registration number. An unsuccessful query returns a JSON object containing a single 'Error' key with a descriptive string message. The successful list is a flat array with no nesting."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: aircraftInfo",
        "connect params": [
          {
            "name": "reg",
            "description": "The registration of the aircraft, as returned by /airline/aircraft or /aircraft/search"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "flnr",
        "type": "STRING",
        "description": "The flight number to request",
        "default": "UA901"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/flight/statistics\"\nquerystring = {\"flnr\": flnr}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: flightStatistics",
    "tool description": "Returns flight statistics for a specific route, updated daily, with filtering options by route. This endpoint provides real-time insights into flight performance, leveraging Flightera's comprehensive database of flight data to deliver metrics such as on-time arrival rates and route efficiency. The statistics are current as of today, offering actionable intelligence for itinerary planning or operational analysis, though historical data requires direct inquiry.",
    "API name": "flightStatistics",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "This tool provides daily-updated flight statistics for one or more routes associated with a given flight number. For each route, it returns performance metrics from the last 30 days, including flight counts, delay and cancellation rates, average delay time, and average flight duration. The output also contains route details like distance and the aircraft models used, making it useful for itinerary planning and performance analysis.",
      "output_format": "The tool returns a JSON array of objects, where each object corresponds to a unique flight route (origin-destination pair). A single flight number can map to multiple routes, resulting in multiple objects in the array. In case of an error, such as a flight not found, the output is a single JSON object containing an 'Error' key with a descriptive message."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Ident of the airport to request"
          },
          {
            "name": "counterpart_ident",
            "description": "Ident of the counterpart airport"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": ""
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "icao",
        "type": "STRING",
        "description": "The ICAO code of the airline, must have a length of 4",
        "default": ""
      },
      {
        "name": "ident",
        "type": "STRING",
        "description": "The ident of the airline, as returned by /airline/search",
        "default": "UA"
      },
      {
        "name": "iata",
        "type": "STRING",
        "description": "The IATA code of the airline, must have a length of 3",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airline/statistics\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airlineStatistics",
    "tool description": "Retrieves detailed airline statistics for airlines identified by IATA, ICAO, or ident codes, returning a single entry per identifier unless ambiguity exists. This endpoint leverages Flightera's flight status and on-time performance data to provide overnight-calculated metrics, offering actionable insights into airline operations and reliability for users seeking precise, up-to-date information.",
    "API name": "airlineStatistics",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides comprehensive operational statistics for a specific airline identified by its code. The output includes recent flight volume (7 and 30 days), top airports and countries served, aircraft fleet age details, and on-time performance metrics such as 30-day delay and cancellation percentages. This data is intended for analyzing an airline's operational scale and reliability.",
      "output_format": "The primary output is a JSON array of objects, where each object represents an airline's statistics. Typically, this array contains a single object. The object contains nested JSON objects for 'top_airports_30_days' and 'top_countries_30_days'. In case of invalid input, the tool returns a JSON object with an 'Error' key. The tool can also return a null response if no data is found for a valid identifier."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "name": "flnr",
            "description": "Flight numbers can be derived from the airline's flight volume data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "ident",
            "description": "Airport identifiers can be obtained from the top airports served data"
          },
          {
            "name": "iata",
            "description": "IATA codes can be obtained from the top airports served data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Airport identifiers can be obtained from the top airports served data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportStatistics",
        "connect params": [
          {
            "name": "ident",
            "description": "Airport identifiers can be obtained from the top airports served data"
          },
          {
            "name": "iata",
            "description": "IATA codes can be obtained from the top airports served data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "flnr",
        "type": "STRING",
        "description": "The flight number to request",
        "default": "DL456"
      }
    ],
    "optional_parameters": [
      {
        "name": "date",
        "type": "STRING",
        "description": "The date, if omitted the current flight will be returned",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/flight/info\"\nquerystring = {\"flnr\": flnr}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: flightInfo",
    "tool description": "Retrieves flight information for a specified date or the current flight if no date is provided, returning a 400 error if the requested date exceeds the subscription's allowed range. This endpoint leverages Flightera's flight status, on-time performance, and statistics capabilities to deliver real-time updates and detailed analytics, ensuring accurate and timely data for users tracking flight details.",
    "API name": "flightInfo",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns detailed information for a specific flight on a given date. The output includes scheduled and actual departure/arrival times in both UTC and local timezones, departure/arrival airport details like IATA/ICAO codes, terminals, and gates, and airline information. It also provides the current flight status, and in some cases, aircraft details and a list of codeshare flights. An error is returned if no flight is found.",
      "output_format": "The successful output is a JSON array containing a single object that represents the flight. An error response is a single JSON object with an 'Error' key. Many fields in the successful response are nullable or optional, such as actual arrival times, baggage claim information, aircraft registration, and codeshare flights, depending on data availability."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use the arrival airport city/country from flight info"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "Can use flight number"
          },
          {
            "param_name": "dtFrom",
            "description": "Can use scheduled departure date"
          },
          {
            "param_name": "dtTo",
            "description": "Can use scheduled arrival date"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineSearch",
        "connect params": [
          {
            "param_name": "iata",
            "description": "Can use airline IATA code"
          },
          {
            "param_name": "icao",
            "description": "Can use airline ICAO code"
          },
          {
            "param_name": "name",
            "description": "Can use airline name"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: aircraftSearch",
        "connect params": [
          {
            "param_name": "airline_ident",
            "description": "Can use airline identifier"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "Can use flight number"
          },
          {
            "param_name": "aptFrom",
            "description": "Can use departure airport ident"
          },
          {
            "param_name": "aptTo",
            "description": "Can use arrival airport ident"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineStatistics",
        "connect params": [
          {
            "param_name": "iata",
            "description": "Can use airline IATA code"
          },
          {
            "param_name": "icao",
            "description": "Can use airline ICAO code"
          },
          {
            "param_name": "ident",
            "description": "Can use airline identifier"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "param_name": "ident",
            "description": "Can use departure or arrival airport ident"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "param_name": "ident",
            "description": "Can use departure or arrival airport ident"
          },
          {
            "param_name": "time",
            "description": "Can use scheduled departure or arrival time"
          },
          {
            "param_name": "counterpart_ident",
            "description": "Can use the other airport's ident (arrival if departure is used for ident, or vice versa)"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: aircraftInfo",
        "connect params": [
          {
            "param_name": "reg",
            "description": "Can use aircraft registration if available"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "param_name": "iata",
            "description": "Can use departure or arrival airport IATA code"
          },
          {
            "param_name": "icao",
            "description": "Can use departure or arrival airport ICAO code"
          },
          {
            "param_name": "ident",
            "description": "Can use departure or arrival airport ident"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "ident",
        "type": "STRING",
        "description": "The ident of the airport (e.g. as returned by /airport/search)",
        "default": "KSFO"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airport/metar\"\nquerystring = {\"ident\": ident}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airportMetar",
    "tool description": "Retrieves the latest METAR weather data for a specified airport using its identifier, including a parsed version of the report. This endpoint is part of Flightera's flight status and on-time performance services, providing critical aviation weather insights to support flight planning and decision-making. The METAR data is sourced from real-time aviation weather feeds, offering detailed conditions like visibility, wind, and precipitation to enhance operational accuracy and safety.",
    "API name": "airportMetar",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a detailed meteorological aerodrome report (METAR) for a specific airport. The output includes the raw METAR string as well as a parsed JSON object breaking down the weather conditions. This includes information on wind, visibility, temperature, dew point, cloud cover, and atmospheric pressure, which is critical for flight planning and operational safety.",
      "output_format": "The output is a single JSON object. It contains two nested arrays of objects: `weather_elements` and `clouds`. In the provided examples, the `weather_elements` array is empty, indicating it may be null or empty when no specific weather events are reported. The `clouds` array contains objects detailing cloud coverage and altitude."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "The IATA code of the airport could be extracted from the METAR data source airport identifier"
          },
          {
            "name": "icao",
            "description": "The ICAO code of the airport could be extracted from the METAR data source airport identifier"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Airport identifier from METAR data can be used to retrieve flights for this airport"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Airport location from METAR data can be used as a trip destination"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "direction",
        "type": "STRING",
        "description": "Direction, one of \"arrival\", \"departure\"",
        "default": "arrival"
      },
      {
        "name": "ident",
        "type": "STRING",
        "description": "Ident of the airport to request. Ident is the unique identifier as returned by /airport/search or /airport/info endpoints.",
        "default": "KSFO"
      },
      {
        "name": "time",
        "type": "STRING",
        "description": "Timestamp in UTC. If direction is \"arrival\", show flights with scheduled arrival time prior to this timestamp. If direction is \"departure\", show flights with scheduled departure time after this timestamp. Expected in any valid format, such as 2022-01-01T12:00:00.000Z. Maximum range of flights returned is 30 days.",
        "default": "2025-09-01T12:00:00.000Z"
      }
    ],
    "optional_parameters": [
      {
        "name": "counterpart_ident",
        "type": "STRING",
        "description": "Ident of the counterpart airport (destination if direction=arrival, otherwise arrival). Used to query connections on a defined route. Ident is the unique identifier as returned by /airport/search or /airport/info endpoints.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airport/flights\"\nquerystring = {\"direction\": direction, \"ident\": ident, \"time\": time}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airportFlights",
    "tool description": "Retrieves a sorted list of flights for a specific airport, direction, and time, sorted ascending by scheduled departure time for departures and descending by scheduled arrival time for arrivals, with the next departure/arrival time provided for pagination. This endpoint is part of Flightera's service for flight status, on-time performance, and statistics, leveraging detailed flight data to provide actionable insights. The scheduled departure dates in local time can be used to query additional flight information via the /flight/info endpoint.",
    "API name": "airportFlights",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a paginated list of flights for a specific airport. Each flight entry includes the flight number, scheduled date, departure and arrival airport identifiers, and the flight's status. The output is intended to be used for tracking flights at an airport, and it includes a 'next_time' value that acts as a cursor for fetching subsequent pages of flight data.",
      "output_format": "The output is a JSON object containing a 'flights' key, which is a JSON array of flight objects, and a 'next_time' key, which is a string timestamp used for pagination/cursoring. Each flight object within the array contains string values for the flight number ('flnr'), date, airport identifiers, and status."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request",
            "connection": "The flight number (flnr) from the airportFlights output can be used to get detailed information about a specific flight"
          },
          {
            "name": "date",
            "description": "The date, if omitted the current flight will be returned",
            "connection": "The date from the airportFlights output can be used to specify which flight date to retrieve information for"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request",
            "connection": "The flight number (flnr) from the airportFlights output can be used to get statistics about that flight"
          },
          {
            "name": "aptFrom",
            "description": "Departure airport ident",
            "connection": "The departure airport identifier from the airportFlights output can be used to filter statistics for a specific route"
          },
          {
            "name": "aptTo",
            "description": "Arrival airport ident",
            "connection": "The arrival airport identifier from the airportFlights output can be used to filter statistics for a specific route"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request",
            "connection": "The flight number (flnr) from the airportFlights output can be used to search for specific flights"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "reg",
        "type": "STRING",
        "description": "The registration of the aircraft, as returned by /airline/aircraft or /aircraft/search",
        "default": "N37267"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/aircraft/info\"\nquerystring = {\"reg\": reg}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: aircraftInfo",
    "tool description": "Returns detailed aircraft information for an aircraft identified by registration, limited to currently active aircraft. This endpoint is part of Flightera's comprehensive service for flight status, on-time performance, and statistics, leveraging real-time aviation data and a curated database of active aircraft to provide accurate, actionable insights for flight tracking and analysis.",
    "API name": "aircraftInfo",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a detailed profile for a single, currently active aircraft based on its registration number. The output includes technical specifications like the model, manufacturer, and engine type, as well as operational data like the operating airline, seating configuration, and details of its last known flight. If the aircraft cannot be found, an error message is returned.",
      "output_format": "The output is a single JSON object. A successful response contains a flat structure of key-value pairs, with one nested object for 'seat_config' which details the seat count per travel class. An unsuccessful query returns a JSON object with a single 'Error' key. There is no pagination, as the tool returns information for a single entity."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "The IATA code of the airline, must have a length of 3"
          },
          {
            "name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4"
          },
          {
            "name": "name",
            "description": "The name of the airline. Not case sensitive"
          },
          {
            "name": "ident",
            "description": "The ident of the airline, as returned by /airline/search"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineStatistics",
        "connect params": [
          {
            "name": "iata",
            "description": "The IATA code of the airline, must have a length of 3"
          },
          {
            "name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4"
          },
          {
            "name": "ident",
            "description": "The ident of the airline, as returned by /airline/search"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "icao",
        "type": "STRING",
        "description": "The ICAO code of the airline, must have a length of 4",
        "default": ""
      },
      {
        "name": "name",
        "type": "STRING",
        "description": "The name of the airline. Not case sensitive",
        "default": ""
      },
      {
        "name": "iata",
        "type": "STRING",
        "description": "The IATA code of the airline, must have a length of 3",
        "default": ""
      },
      {
        "name": "ident",
        "type": "STRING",
        "description": "The ident of the airline, as returned by /airline/search",
        "default": "UA"
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airline/info\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airlineInfo",
    "tool description": "Retrieves detailed airline information based on identifiers like ident, iata, icao, or name, returning one entry for 'ident' or multiple entries for other parameters. This endpoint is part of Flightera's service, which offers flight status, on-time performance, and statistics, utilizing its comprehensive flight data infrastructure to provide accurate airline details for operational and analytical use cases.",
    "API name": "airlineInfo",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides detailed information about airlines based on various identifiers. A successful response is a list of airline objects, each containing data such as IATA/ICAO codes, name, callsign, founding/start dates, website, and alliance affiliation. The tool also returns structured error messages in a JSON object format for invalid queries.",
      "output_format": "The output is a JSON string. A successful response is a JSON array of airline objects. An error response is a JSON object with a single key, 'Error', and a string value explaining the problem. Within the airline objects, some fields like 'start_date' and 'alliance' appear to be optional and may be absent from some records. The structure is a flat list with no deep nesting or pagination mechanisms shown."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request",
            "connection_type": "The airline IATA code can be combined with flight number"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request",
            "connection_type": "The airline IATA code can be combined with flight number"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineStatistics",
        "connect params": [
          {
            "param_name": "iata",
            "description": "The IATA code of the airline, must have a length of 3",
            "connection_type": "The IATA code from airlineInfo output"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4",
            "connection_type": "The ICAO code from airlineInfo output"
          },
          {
            "param_name": "ident",
            "description": "The ident of the airline, as returned by /airline/search",
            "connection_type": "The ident field from airlineInfo output"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request",
            "connection_type": "The airline IATA code can be combined with flight number"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "ident",
        "type": "STRING",
        "description": "The ident of the airport, as returned by /airport/search",
        "default": "KSFO"
      },
      {
        "name": "iata",
        "type": "STRING",
        "description": "The IATA code of the airport, must have a length of 3",
        "default": ""
      },
      {
        "name": "icao",
        "type": "STRING",
        "description": "The ICAO code of the airport, must have a length of 4",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airport/statistics\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airportStatistics",
    "tool description": "Returns detailed airport statistics for airports identified by the provided identifiers (ident, iata, icao), with one airport returned per ident. This endpoint is part of Flightera, which provides flight status, on-time performance, and statistics. The statistics are calculated overnight and represent the current day's data, offering accurate insights into airport operations.",
    "API name": "airportStatistics",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "This tool provides a daily statistical report for specified airports. The report includes metrics on flight volumes (arrivals and departures), performance (cancellation rates and average delays), and traffic patterns (top destinations, sources, and airlines). This data is intended to offer insights into an airport's operational activity for the current day.",
      "output_format": "The tool returns a JSON array, with each object in the array containing statistics for a single airport. Several fields, like `top_destinations`, `top_sources`, and `top_airlines`, are nested JSON objects mapping airport or airline identifiers to flight counts. The fields `avg_departure_distance` and `avg_arrival_distance` consistently appear as 0, suggesting they may be deprecated or placeholder values."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The airport statistics could provide insights about popular destinations from an airport, helping to suggest travel locations"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "ident",
            "description": "The airport identifier from airportStatistics can be used to get more detailed information about the airport"
          },
          {
            "name": "iata",
            "description": "The IATA code from airportStatistics can be used to get more detailed information about the airport"
          },
          {
            "name": "icao",
            "description": "The ICAO code from airportStatistics can be used to get more detailed information about the airport"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "The airport identifier from airportStatistics can be used to get specific flight information for that airport"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "name": "ident",
            "description": "The airport identifier from airportStatistics can be used to get weather information for that airport"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flixbus",
    "parent tool description": "A service that provides flixbus travel search, available cities, stations, timetables and routes. Site: www.flixbus.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
    "required_parameters": [
      {
        "name": "station_id",
        "type": "NUMBER",
        "description": "Station id",
        "default": "66"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flixbus.p.rapidapi.com/v1/schedule\"\nquerystring = {\"station_id\": \"66\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Flixbus: schedule",
    "tool description": "Retrieves a schedule for Flixbus routes, including departure times and destinations. This endpoint is part of a service that provides Flixbus travel search, available cities, stations, timetables, and routes, leveraging real-time data from Flixbus's network to enable efficient trip planning.",
    "API name": "schedule",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides schedule information for a specific Flixbus station. A successful response includes comprehensive details about the station itself (ID, name, address, coordinates) and a schedule object containing lists of arrivals and departures. Error responses consist of a simple object with a 'detail' key explaining the reason for the failure, such as 'Not found'.",
      "output_format": "The output is a JSON object. A successful response is a nested object with two main keys: 'schedule' and 'station'. The 'schedule' object contains 'arrivals' and 'departures', which are arrays, and an optional 'message' string. The structure of the items within the 'arrivals' and 'departures' arrays is not shown in the examples. An error response is a simple JSON object with a single 'detail' key holding a string message."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The Flixbus station location can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the Flixbus station coordinates"
          },
          {
            "name": "lng",
            "description": "Can use the longitude from the Flixbus station coordinates"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the Flixbus station coordinates"
          },
          {
            "name": "lng",
            "description": "Can use the longitude from the Flixbus station coordinates"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "Can use the station name/city as a search string"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the Flixbus station coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the Flixbus station coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "required_parameters": [
      {
        "name": "state",
        "type": "STRING",
        "description": "",
        "default": "WA"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/stateUsaPrice\"\nquerystring = {\"state\": state}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Gas Price: stateUsaPrice",
    "tool description": "Retrieves real-time gasoline and diesel prices by state, using a database of fuel stations across U.S. cities to help users find the most competitive fuel prices. This endpoint is part of a broader service that aggregates pricing data from various stations, offering insights into regional price variations and enabling informed decision-making for travelers and consumers.",
    "API name": "stateUsaPrice",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a detailed breakdown of fuel prices for a specific U.S. state. It includes the state-wide average price for regular, midgrade, and premium gasoline, as well as diesel. Additionally, it offers a list of average prices for the same fuel types across various major cities within that state, allowing for regional price comparisons. All prices are denominated in USD per US gallon.",
      "output_format": "The response is a JSON object with a primary `result` key. This key contains a `state` object with state-wide average prices and a `cities` array, where each element is an object detailing the average prices for a specific city. Notably, all numerical price values are returned as strings. A boolean `success` key indicates the status of the request."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The state information from the gas price data could be used to specify a destination state for trip planning"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "The state or city names from the gas price data could be used to search for car rental locations"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The state or city names from the gas price data could be used to search for hotel locations"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hotels com Provider",
    "parent tool description": "Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "slug",
        "type": "STRING",
        "description": "Hotels Slug",
        "default": "ho219115"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://hotels-com-provider.p.rapidapi.com/v2/meta/convert/slug-id\"\nquerystring = {\"slug\": \"ho219115\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hotels-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Hotels com Provider: Hotel Slug convert",
    "tool description": "Retrieves a hotel's unique identifier from its site-specific slug, such as converting 'ho219115' to '1105156'. This function is part of the Hotels.com platform's broader capabilities to search and display hotel information, leveraging its database of properties to provide precise hotel IDs for integration with booking systems or detailed property lookups.",
    "API name": "Hotel Slug convert",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides either a unique hotel identifier or an error message. On a successful conversion, the output contains the hotel's ID as a string, which can be used for subsequent booking or information retrieval tasks. In case of an error, the output provides a descriptive string detailing the reason for failure, such as the hotel not being found or a general client error.",
      "output_format": "The output is a single, non-nested JSON object. A successful response contains a 'data' key with the string hotel ID as its value. An error response contains a 'detail' key with a string error message. No arrays, pagination, or complex nesting are indicated by the examples."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property."
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel photos",
        "connect params": [
          {
            "name": "hotel_ids",
            "description": "Comma separated string of PPN hotel ids (Semi Opaque Only)"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel reviews",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "iata_airport_codes",
    "parent tool description": "A list of world iata airport codes",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://iata_airport_codes.p.rapidapi.com/RRT7bH/world_iata_airport_codes\"\nquerystring = {\"Code\": code}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iata_airport_codes.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "iata_airport_codes: Get All iata airport codes",
    "tool description": "Retrieves a comprehensive list of all IATA airport codes, sourced from a globally maintained database. This endpoint provides access to the core dataset of the parent tool, which serves as an authoritative reference for airport code information, enabling applications to validate locations, integrate travel data, or analyze aviation networks with accurate, standardized identifiers.",
    "API name": "Get All iata airport codes",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airport records from a global database. Each record is an object containing a unique numerical ID, the airport's three-letter IATA code, and a formatted airport name which includes the city and the code. This information is primarily used to validate airport codes or populate user interfaces with a comprehensive list of airports.",
      "output_format": "The output is a JSON array of objects. Each object represents a single airport and contains the keys 'id' (integer), 'iata_code' (string), and 'airport_name' (string). The examples do not indicate any pagination or null values."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use airport city names from the source tool"
          }
        ]
      },
      {
        "tool name": "Deutsche Bahn: Autocomplete",
        "connect params": [
          {
            "name": "query",
            "description": "Can use airport city names from the source tool"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use IATA airport codes from the source tool"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use IATA airport codes from the source tool"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use IATA airport codes from the source tool"
          },
          {
            "name": "counterpart_ident",
            "description": "Can use IATA airport codes from the source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search flights locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use airport city names from the source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto complete",
        "connect params": [
          {
            "name": "string",
            "description": "Can use airport city names or IATA codes from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "string",
        "type": "STRING",
        "description": "Search string that will enable a list of selection to be listed to the traveller.",
        "default": "New York"
      }
    ],
    "optional_parameters": [
      {
        "name": "sort",
        "type": "STRING",
        "description": "Enum: rank, name. Method of sorting the results. Valid options: rank, name",
        "default": ""
      },
      {
        "name": "get_airports",
        "type": "BOOLEAN",
        "description": "Include airports in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "order",
        "type": "STRING",
        "description": "Method of ordering the results of the search. Valid options: asc or desc.",
        "default": ""
      },
      {
        "name": "combine_regions",
        "type": "BOOLEAN",
        "description": "Enables the spell check option for the search string using either true or false.",
        "default": true
      },
      {
        "name": "get_pois",
        "type": "BOOLEAN",
        "description": "Include Points of Interest in search results. Valid Options: True or False",
        "default": true
      },
      {
        "name": "get_regions",
        "type": "BOOLEAN",
        "description": "Include Regions in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "get_cities",
        "type": "BOOLEAN",
        "description": "Include cities in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "show_all_cities",
        "type": "BOOLEAN",
        "description": "Will filter out cities with no hotels. Valid Options: False = filter out cities without hotels, True = show cities with and without hotels.",
        "default": true
      },
      {
        "name": "max_results",
        "type": "NUMBER",
        "description": "Number passed is the maximum number of results returned.",
        "default": ""
      },
      {
        "name": "get_hotels",
        "type": "BOOLEAN",
        "description": "Include hotels in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "spellcheck",
        "type": "BOOLEAN",
        "description": "Enables the spell check option for the search string using either true or false.",
        "default": false
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/autoSuggest\"\nquerystring = {\"sort\": \"\", \"get_airports\": true, \"order\": \"\", \"string\": \"New York\", \"combine_regions\": true, \"get_pois\": true, \"get_regions\": true, \"get_cities\": true, \"show_all_cities\": true, \"max_results\": \"\", \"get_hotels\": true, \"spellcheck\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Auto Suggest",
    "tool description": "Returns a list of cities and hotels based on a search query. This is part of Priceline.com's travel service, which allows users to search for hotels, cars, and flights. It leverages Priceline's extensive database of travel options to provide relevant results, helping users find suitable accommodations and destinations efficiently.",
    "API name": "Auto Suggest",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of suggested cities based on a search query. Each city result includes its name, country, geographic coordinates, the number of available hotels, and a list of nearby airports. This information is designed to help users quickly identify and select a destination for their travel search.",
      "output_format": "The output is a deeply nested JSON object. The primary results are located under the path `getHotelAutoSuggestV2.results.result.cities`. The collection of cities is presented as a JSON object with indexed keys (e.g., \"city_0\", \"city_1\") rather than a JSON array. A notable feature is the `nearby_airports_json` field, which contains a stringified JSON array of airport objects, requiring a second parsing step."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The city name from the auto-suggest results can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The city name from the auto-suggest results can be used as a market for Airbnb listings"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinates from the auto-suggest results can be used"
          },
          {
            "name": "lng",
            "description": "The longitude coordinates from the auto-suggest results can be used"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The city name from the auto-suggest results can be used as a market"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinates from the auto-suggest results can be used"
          },
          {
            "name": "lng",
            "description": "The longitude coordinates from the auto-suggest results can be used"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The city name from the auto-suggest results can be used as a search term"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "The city name from the auto-suggest results can be used as a search term"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "latitude",
        "type": "NUMBER",
        "description": "Latitude",
        "default": "50.073658"
      },
      {
        "name": "longitude",
        "type": "NUMBER",
        "description": "Longitude",
        "default": "14.418540"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/hotels/locations-by-geo\"\nquerystring = {\"latitude\": \"50.073658\", \"longitude\": \"14.418540\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Search hotels locations by geolocation",
    "tool description": "Searches locations using specified latitude and longitude coordinates. This functionality is part of the Priceline.com API, which enables travel-related searches for hotels, cars, and flights, allowing users to pinpoint exact destinations for booking services.",
    "API name": "Search hotels locations by geolocation",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns detailed location information based on a provided latitude and longitude. The output consists of a primary matched city, including its name, state, country, and precise coordinates. It also provides a list of other surrounding cities, each with similar location details and its respective distance from the searched point, which helps in identifying locations for travel bookings.",
      "output_format": "The output is a single JSON object. It contains a main `matchedCity` object with details of the primary location and a `surroundingCities` key, which holds an array of objects for nearby locations. This array can be empty. Several fields, particularly those related to state or specific points of interest, can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The matched city name, state, and country can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude from the matched city coordinates"
          },
          {
            "name": "lng",
            "description": "Longitude from the matched city coordinates"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude from the matched city coordinates"
          },
          {
            "name": "lng",
            "description": "Longitude from the matched city coordinates"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "The matched city name can be used as a search string"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The matched city name can be used as a search parameter"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadCities\"\nquerystring = {\"limit\": 100, \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download cities",
    "tool description": "Downloads a list of Hotel cities through the Priceline API, which allows users to search hotels, cars for rent, and flights. This endpoint leverages Priceline's extensive database of travel options to provide a curated list of cities with available accommodations, enhancing travel planning by offering targeted options for users seeking lodging. The tool is part of a broader service that supports comprehensive travel bookings, including flights and car rentals, and is maintained with support via [tipsters@rapi.one](mailto:tipsters@rapi.one) or t.me/api_tipsters.",
    "API name": "Download cities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of cities available through the Priceline API. For each city, it provides a unique Priceline ID, name, state code, country code, and geographic coordinates (latitude and longitude). This information is intended to be used to find valid locations for searching and booking travel services like hotels or rental cars.",
      "output_format": "The output is a deeply nested JSON object. The list of cities is structured as a JSON object with sequential keys (e.g., 'city_0', 'city_1'), rather than a JSON array. The response includes a 'resume_key' within the 'results' object, which acts as a cursor for retrieving subsequent pages of city data."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "The city name from the cities list can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "The latitude coordinate from the cities list"
          },
          {
            "param_name": "lng",
            "description": "The longitude coordinate from the cities list"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "The city name from the cities list can be used as a market"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "The city name from the cities list can be used as a market"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "The latitude coordinate from the cities list"
          },
          {
            "param_name": "lng",
            "description": "The longitude coordinate from the cities list"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "The latitude coordinate from the cities list"
          },
          {
            "param_name": "lng",
            "description": "The longitude coordinate from the cities list"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "param_name": "string",
            "description": "The city name from the cities list"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "The latitude coordinate from the cities list"
          },
          {
            "param_name": "longitude",
            "description": "The longitude coordinate from the cities list"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "The city name from the cities list"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "The city name from the cities list"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 500
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/cars/downloadCompanies\"\nquerystring = {\"resume_key\": \"\", \"limit\": 500}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download companies",
    "tool description": "Downloads a list of companies related to travel services such as hotels, car rentals, and flights. This endpoint is part of the Priceline.com API, which enables users to search for travel accommodations and services, leveraging its extensive database to provide accurate company information for comprehensive travel planning.",
    "API name": "Download companies",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of car rental companies available through Priceline. For each company, it provides a name, a detailed description of its services, a default company code, and a title tag. This information can be used to understand the different car rental options for travel planning.",
      "output_format": "The output is a JSON object with a deeply nested structure. The list of companies is not a direct array but an object with keys like 'company_0', 'company_1', etc. The main data is located under the path 'getSharedBOF2.Downloads.Car.Companies'.results.companies. Some fields within a company's details, such as 'company_text' and 'company_title_tag', can be null. The presence of a 'resume_key' field suggests potential support for pagination."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Could incorporate car rental company information into trip planning for the destination"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadCountries\"\nquerystring = {\"resume_key\": \"\", \"limit\": 100}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download countries",
    "tool description": "Downloads a list of countries. This endpoint is part of Priceline.com's platform, which allows users to search for hotels, cars, and flights. It provides country data to support travel planning, integrating with Priceline's travel infrastructure to help users explore destinations and enhance trip coordination.",
    "API name": "Download countries",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of countries, where each entry includes the full country name, a Priceline-specific two-letter country code (country_code_ppn), and a creation timestamp. This data is used to support travel planning on the Priceline platform, likely for populating destination lists for hotel, car, and flight searches.",
      "output_format": "The output is a deeply nested JSON object. The list of countries is not a standard JSON array, but rather an object where keys are indexed strings (e.g., \"country_0\", \"country_1\"). The actual data is located at the path `getSharedBOF2.Downloads.Hotel.Countries.results.countries`. The presence of a `resume_key` indicates that the API likely supports pagination or cursoring to retrieve a complete list."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The country name from the source tool's output can be used as part of the destination parameter"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count Listings by administrative divisions",
        "connect params": [
          {
            "name": "state",
            "description": "The country_code_ppn from the source tool can be used to specify the country for counting listings"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineSearch",
        "connect params": [
          {
            "name": "country",
            "description": "The country_code_ppn (if ISO 3166-1 alpha-2 compatible) can be used to search for airlines by country"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: aircraftSearch",
        "connect params": [
          {
            "name": "country",
            "description": "The country_code_ppn (if it's a two-letter country code) can be used to search for aircraft registrations by country"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "name",
        "type": "STRING",
        "description": "Name",
        "default": "Los"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/flights/locations\"\nquerystring = {\"name\": \"Los\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Search flights locations",
    "tool description": "Searches airports and locations by name. This endpoint is part of Priceline.com's travel API, which allows users to search hotels, cars, and flights, leveraging integrated travel data to help streamline trip planning and ensure accurate location information for bookings.",
    "API name": "Search flights locations",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airport and city-level locations that match a text-based search query. Each entry in the list contains detailed information about a location, including its name, type (specific airport or a city's collection of airports), geographic details like city, state, and country, and unique identifiers such as airport or city codes (e.g., 'LGA', 'NYC'). This output is primarily used to obtain the correct location ID for use in subsequent flight booking or search operations.",
      "output_format": "The output is a JSON array of objects, where each object represents a single location. The `subType` field within each object differentiates between a specific airport ('AIRPORT') and a city-level entry that represents all airports in that city ('GDS_CITY'). Some fields can be null, such as `provinceName` and `airportCode`. The latitude and longitude may be set to 0.0 for city-level results."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use IATA airport codes from the source tool output"
          },
          {
            "name": "icao",
            "description": "Can use ICAO airport codes from the source tool output"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use airport identifiers from the source tool output"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use airport identifiers from the source tool output"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use city/location names from the source tool output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadFilterAmenities\"\nquerystring = {\"resume_key\": \"\", \"limit\": 100}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download filter amenities",
    "tool description": "Downloads an Amenity list filtered by specific criteria, allowing users to retrieve detailed information about hotel facilities and services. This endpoint is part of Priceline.com's travel platform, which enables users to search for hotels, cars, and flights, leveraging Priceline's extensive travel database to provide actionable insights and enhance booking decisions.",
    "API name": "Download filter amenities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of amenities available for a specific hotel. Each amenity is identified by an `amenity_code_ppn` and is associated with a `hotelid_ppn`. The response also includes a status message and a `resume_key`, which is likely used for paginating through large result sets.",
      "output_format": "The response is a nested JSON object. The primary data is located at `['getSharedBOF2.Downloads.Hotel.FilterAmenities']['results']['amenities']`. This field contains an object that acts as a list, where keys are sequentially numbered strings (e.g., \"amenity_0\", \"amenity_1\") and the values are objects detailing each amenity. The presence of a `resume_key` in the results suggests the output supports cursor-based pagination."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "Can use the hotelid_ppn from the amenities output to get detailed information about a specific hotel"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel photos",
        "connect params": [
          {
            "name": "hotel_ids",
            "description": "Can use the hotelid_ppn from the amenities output to retrieve photos for specific hotels"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel reviews",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "Can use the hotelid_ppn from the amenities output to get reviews for a specific hotel"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadCitiesClusters\"\nquerystring = {\"limit\": 100, \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download cities clusters",
    "tool description": "Downloads a list of hotel city clusters. This endpoint is part of Priceline.com, a travel service that enables users to search for hotels, cars, and flights, offering a streamlined approach to planning trips by providing categorized city data for hotel availability.",
    "API name": "Download cities clusters",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of hotel city clusters. Each cluster is defined by a primary parent city ID and a list of associated child city IDs. This information is likely used to group cities for broader hotel searches. The response also includes metadata such as the request status and a resume key for pagination.",
      "output_format": "The output is a deeply nested JSON object. The main data payload is located under the path `getSharedBOF2.Downloads.Hotel.CityClusters.results.clusters`. This `clusters` field is an object where keys are named `cluster_0`, `cluster_1`, etc., and the values are objects containing the `cityid_ppn` (parent city) and a `child_cities` object. The presence of a `resume_key` indicates that the results are paginated and this key is used to fetch the next set of data."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property.",
            "connection_info": "After filtering hotels by city IDs from the city clusters, the resulting hotel_ids can be used here"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "",
            "connection_info": "City names from the clusters can be used as trip destinations"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 500
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/flight/downloadAirports\"\nquerystring = {\"resume_key\": \"\", \"limit\": 500}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download airports",
    "tool description": "Downloads a list of airports with IATA codes to support flight search functionality. This endpoint is part of Priceline.com's travel platform, which enables users to search hotels, cars, and flights. It leverages Priceline's integrated travel API to provide structured airport data, facilitating accurate flight itinerary planning and booking through standardized IATA code references.",
    "API name": "Download airports",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airports, providing detailed information for each. This includes the airport's name, its IATA code (when available), location details like country and state code, geographic coordinates, and a Priceline-specific city ID. The data is intended to support flight search and itinerary planning by providing standardized airport references.",
      "output_format": "The output is a deeply nested JSON object. The list of airports is structured as an object with enumerated keys (e.g., 'airport_0', 'airport_1') rather than a JSON array. The response includes a 'resume_key', which strongly suggests the results are paginated and this key is used as a cursor to retrieve subsequent pages of data. Some fields within an airport object, such as 'iata' and 'state_code', can be null."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use IATA codes from the airports list"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use airport identifiers from the airports list"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use airport identifiers from the airports list"
          },
          {
            "name": "counterpart_ident",
            "description": "Can use airport identifiers from the airports list"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use airport location information to identify destinations"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from airport geographic coordinates"
          },
          {
            "name": "lng",
            "description": "Can use longitude from airport geographic coordinates"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from airport geographic coordinates"
          },
          {
            "name": "lng",
            "description": "Can use longitude from airport geographic coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 500
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/cars/downloadCities\"\nquerystring = {\"limit\": 500, \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download cities",
    "tool description": "Downloads a list of cities. This endpoint is part of the Priceline.com API, which enables users to search for hotels, cars, and flights, providing essential city data to support travel planning and booking processes.",
    "API name": "Download cities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a paginated list of cities with their geographic and identifying details. For each city, it returns a unique Priceline ID (cityid_ppn), name, state code, country code, latitude, and longitude. This information is designed to support travel planning and booking by providing essential city data for other API functions.",
      "output_format": "The output is a deeply nested JSON object. The primary data is a list of cities, structured as a JSON object with sequential keys (e.g., 'city_0', 'city_1') rather than a JSON array. The response includes a 'resume_key' field, which indicates that the results are paginated and this key can be used to fetch the next set of cities."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use city name and country code from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output"
          },
          {
            "name": "lng",
            "description": "Can use longitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output"
          },
          {
            "name": "lng",
            "description": "Can use longitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output"
          },
          {
            "name": "lng",
            "description": "Can use longitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 500
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/cars/downloadLocations\"\nquerystring = {\"limit\": 500, \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download locations",
    "tool description": "Downloads a list of Locations. This endpoint is part of Priceline.com's travel API, which enables users to search hotels, cars, and flights. It leverages AI-powered technology combined with a database of 60k airports to provide location data that supports personalized travel planning and booking decisions.",
    "API name": "Download locations",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of travel-related locations, likely for car rentals, as indicated by the response structure. Each location entry contains detailed information, including a unique Priceline ID, partner codes, a full address, latitude, and longitude. This data is designed to support travel planning and booking by providing comprehensive location details.",
      "output_format": "The output is a deeply nested JSON object. The list of locations is structured as a JSON object where keys are indexed strings (e.g., 'location_0', 'location_1'), rather than a standard JSON array. The response includes a 'resume_key', which indicates the use of a cursor for paginating through large sets of location data."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use location names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lng",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lng",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "string",
        "type": "STRING",
        "description": "Search keyword. Airport or City being searched.",
        "default": "winn"
      }
    ],
    "optional_parameters": [
      {
        "name": "get_airports_in_cities",
        "type": "BOOLEAN",
        "description": "If City is used as string include airports in that city. ",
        "default": true
      },
      {
        "name": "get_cities",
        "type": "BOOLEAN",
        "description": "Include cities in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "max_results",
        "type": "NUMBER",
        "description": "Number passed is the maximum number of results returned.",
        "default": ""
      },
      {
        "name": "get_airports",
        "type": "BOOLEAN",
        "description": "Include airports in search results. Valid Options: True or False.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/cars/autoComplete\"\nquerystring = {\"get_airports_in_cities\": true, \"string\": \"winn\", \"get_cities\": true, \"max_results\": \"\", \"get_airports\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Auto complete",
    "tool description": "Retrieves airport and city IDs based on a string input, enabling precise location identification for travel-related queries. This endpoint is part of the Priceline.com API, which facilitates searching hotels, cars, and flights, and leverages a comprehensive travel database to support accurate booking services across multiple travel categories.",
    "API name": "Auto complete",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns location data based on a string query, providing a list of matching cities and their associated airports. For each city, it provides details such as name, state, country, geographic coordinates, and various location-specific IDs. For airports, it returns the airport name and IATA code. This output is designed to be used to obtain precise location identifiers for subsequent travel-related API calls.",
      "output_format": "The output is a JSON object where the main data is nested under `getCarAutoComplete.results`. This `results` object contains a status and the primary data, which can be a `city_data` object, an `airport_data` object, or potentially both. These data objects act as lists, using numbered keys (e.g., `city_0`, `airport_0`) to enumerate entries. The `airport_data` field, when nested within a city and having no entries, is an empty array (`[]`), but an object when it contains data. Several fields can be null or empty strings."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use airport IATA codes from the source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use city names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "Can use city names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "Can use city names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use city names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search flights locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use city or airport names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use city names from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "hotel_ids",
        "type": "STRING",
        "description": "Comma separated string of PPN hotel ids (Semi Opaque Only)",
        "default": "700000000,700000001,700000002,700000003"
      }
    ],
    "optional_parameters": [
      {
        "name": "image_size",
        "type": "STRING",
        "description": "The size of the image returned. Valid Options: small (60px), medium(300 to 312px) or large(500 to 800px)",
        "default": "medium"
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/photos\"\nquerystring = {\"image_size\": \"medium\", \"hotel_ids\": \"700000000,700000001,700000002,700000003\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Hotel photos",
    "tool description": "Retrieves a list of photos for a specific hotel. This endpoint is part of Priceline.com's travel service, which enables users to search for hotels, rental cars, and flights, providing visual details of accommodations to enhance booking decisions.",
    "API name": "Hotel photos",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of image URLs for a specific hotel. A successful response includes the hotel's ID and a collection of URLs pointing to photos of the property. This is used to provide users with visual details of accommodations to help them make booking decisions. An error response is returned if no photos are found for the specified hotel.",
      "output_format": "The output is a single JSON object. The structure differs for success and error cases. In a successful response, the data is deeply nested under 'getHotelPhotos.results.hotel_photo_data.hotel_photos_0'. The actual photo URLs are in a 'photo_data' object, which uses numbered keys (e.g., 'photo_0', 'photo_1') instead of a JSON array. In an error case, the output contains an 'error' object with a status message and code."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The hotel ID can be extracted from the source tool's output to retrieve detailed information about the same hotel"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The hotel location information from the photo data could be used to plan a trip to that destination"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadPropertyTypes\"\nquerystring = {\"limit\": 100, \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download property types",
    "tool description": "Downloads a list of property types, which is part of the Priceline.com API that enables users to search for hotels, cars for rent, and flights. This endpoint provides access to a structured database of property categories, supported by [tipsters@rapi.one](mailto:tipsters@rapi.one) and integrated with other travel APIs available at [https://rapi.one](https://rapi.one).",
    "API name": "Download property types",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of accommodation property types available on Priceline.com. Each property type includes a unique ID, a descriptive name (e.g., 'Hotels', 'Apartments', 'Villas'), and a creation timestamp. This data is likely used to categorize and filter property searches within the Priceline.com ecosystem.",
      "output_format": "The output is a JSON object with a deeply nested structure. The list of property types is not a standard array but rather a JSON object with sequential keys like 'property_type_0', 'property_type_1', etc. This list is located under the path `getSharedBOF2.Downloads.Hotel.PropertyTypes.results.property_types`. The presence of a `resume_key` field suggests the potential for pagination, although it is empty in the provided examples."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadChains\"\nquerystring = {\"resume_key\": \"\", \"limit\": 100}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download chains",
    "tool description": "Retrieves a list of hotel chains. This endpoint is part of the Priceline.com platform, which enables users to search for hotels, car rentals, and flights. It provides a comprehensive database of hotel chains to support efficient travel planning and booking, allowing travelers to explore and compare accommodation options within the broader travel service ecosystem.",
    "API name": "Download chains",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a list of hotel chains available on the Priceline platform. Each entry in the list includes the chain's unique ID, its name, and its creation date and time. This data can be used to browse available hotel chains or to provide identifiers for more specific searches within the Priceline ecosystem.",
      "output_format": "The output is a deeply nested JSON object. The list of hotel chains is not a direct array but an object where keys are sequentially named (e.g., \"chain_0\", \"chain_1\") and the values are objects containing the individual chain's details. The presence of a `resume_key` in the `results` object indicates that the output is paginated using a cursor to retrieve subsequent sets of data."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property."
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel photos",
        "connect params": [
          {
            "name": "hotel_ids",
            "description": "Comma separated string of PPN hotel ids (Semi Opaque Only)"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel reviews",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "hotel_id",
        "type": "STRING",
        "description": "The PPN Hotel ID identifying the desired property.",
        "default": "700022612"
      }
    ],
    "optional_parameters": [
      {
        "name": "languages",
        "type": "STRING",
        "description": "Limits the number of results from the response.",
        "default": "en,fr"
      },
      {
        "name": "order_by",
        "type": "STRING",
        "description": "CSV of sorting order metrics. Valid Options: creation_date, average_rating, or verified_guest followed by .asc or .desc.",
        "default": ""
      },
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "Used with limit to only retrieve a subset of all results at a time. Determines the nuber of properties to skip (starting at 0) before returning results.",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      },
      {
        "name": "only_verified_guests",
        "type": "BOOLEAN",
        "description": "Set on to only include only reviews with verified_guests. A verified guest is a guest that has had a review verified by aaa. Valid Options: 0 = Off, 1 = On.",
        "default": false
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/reviews\"\nquerystring = {\"languages\": \"en,fr\", \"order_by\": \"\", \"offset\": \"\", \"limit\": 100, \"only_verified_guests\": false, \"hotel_id\": \"700022612\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Hotel reviews",
    "tool description": "Returns a list of reviews for travel services such as hotels, cars, and flights. This endpoint is part of the Priceline.com API, which enables users to search and book travel accommodations and rentals. It leverages a database of user-generated reviews to provide insights, helping travelers make informed decisions about their bookings.",
    "API name": "Hotel reviews",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns the status of a request for hotel reviews. The output includes metadata such as a success status, a status code, and the request processing time. While the tool is described as returning a list of reviews, all provided examples show the review data as null, which may indicate a 'not found' or 'no results' scenario.",
      "output_format": "The output is a JSON object with a nested structure. The top-level key is 'getHotelReviews', which contains a 'results' object. The 'review_data' field within this object is nullable and is null in all examples."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Hotel reviews could inform destination selection by providing insights about accommodations in specific locations"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "Hotel reviews could be used to look up more details about a specific hotel"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadAreas\"\nquerystring = {\"limit\": 100, \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download areas",
    "tool description": "Downloads an area list to help users filter travel options. This is part of Priceline.com's platform, which allows searching hotels, cars, and flights, providing a centralized service for travel planning.",
    "API name": "Download areas",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The output provides a list of geographical areas, each with a unique ID, name, country code, and creation date. Some areas also include specific location data like latitude, longitude, and a radius. This list is intended to be used to filter travel options, such as hotels, on the Priceline platform.",
      "output_format": "The output is a deeply nested JSON object. The list of areas is structured as a JSON object with sequential keys (e.g., 'area_0', 'area_1'). A 'resume_key' is present in the results, indicating that the output is paginated or uses a cursor for fetching large lists. Some fields within an area object, such as 'center_latitude', 'center_longitude', and 'radius', can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use area names from the source output as destination locations"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use center_latitude from areas with location data"
          },
          {
            "name": "lng",
            "description": "Can use center_longitude from areas with location data"
          },
          {
            "name": "range",
            "description": "Can use radius from areas with location data"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use center_latitude from areas with location data"
          },
          {
            "name": "lng",
            "description": "Can use center_longitude from areas with location data"
          },
          {
            "name": "range",
            "description": "Can use radius from areas with location data"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use center_latitude from areas with location data"
          },
          {
            "name": "longitude",
            "description": "Can use center_longitude from areas with location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 10
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadStates\"\nquerystring = {\"limit\": 100, \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download states",
    "tool description": "Downloads a list of Satets. This endpoint is part of Priceline.com's travel API, which enables users to search for hotels, cars, and flights. It leverages Priceline's extensive travel data to retrieve specific information, supporting efficient travel planning and decision-making. For assistance, contact tipsters@rapi.one or join t.me/api_tipsters. Additional travel APIs are available at https://rapi.one.",
    "API name": "Download states",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a comprehensive list of states, provinces, and territories from various countries, including the US, Canada, and Australia. Each entry includes the full state name, its corresponding code, the country code, and a creation timestamp. This data is likely used to populate location-based search fields or validate user input for travel planning.",
      "output_format": "The output is a deeply nested JSON object. The list of states is not a direct array but is contained within an object where keys are sequentially named (e.g., \"state_0\", \"state_1\"). The response includes a `resume_key` field, which suggests the output is paginated, allowing for retrieval of large datasets in chunks."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The state data can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count Listings by administrative divisions",
        "connect params": [
          {
            "name": "state",
            "description": "The state code from the states list can be used to count Airbnb listings by state"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "The state code from the states list can be used to get gas prices for a specific US state"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The state name can be used to search for hotel locations in that state"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "The state name can be used to search for car rental locations in that state"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      },
      {
        "name": "language",
        "type": "STRING",
        "description": "Language code: en-US, es-ES, fr-FR, pt-BR",
        "default": "fr-FR"
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadAmenities\"\nquerystring = {\"limit\": 100, \"language\": \"fr-FR\", \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download amenities",
    "tool description": "Downloads a list of amenities for a specific hotel. This endpoint is part of Priceline.com's travel services, which allow users to search hotels, cars, and flights. It leverages Priceline's database to provide detailed amenity information, enhancing the user's ability to compare hotel offerings and make informed booking decisions.",
    "API name": "Download amenities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a list of hotel amenities available on Priceline. Each amenity is detailed with a unique code, its name, and a creation timestamp. This information is intended to be used to understand the facilities offered by hotels, allowing for better comparison and booking decisions.",
      "output_format": "The response is a nested JSON object. The primary data is located at the path 'getSharedBOF2.Downloads.Hotel.Amenities.results.amenities'. The 'amenities' field is an object containing dynamically named keys (e.g., 'amenity_0', 'amenity_1') which each hold an object with the amenity's details. A 'resume_key' is also present, suggesting a cursoring or pagination mechanism to retrieve large sets of data."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The amenities data could be used to enhance hotel details by matching amenity codes with those available at specific hotels"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel photos",
        "connect params": [
          {
            "name": "hotel_ids",
            "description": "The amenities data could be used to identify hotels with specific amenities before retrieving their photos"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel reviews",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The amenities data could be used to contextualize reviews by identifying which amenities are being discussed"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Booking.com_v2",
    "parent tool description": "Real-time data, unofficial API Booking.com\nThis API helps to query rooms, price, facilities, policities.. from many hotels around the world to create a travel",
    "tool name": "Booking.com_v2: languages",
    "tool description": "Retrieves available language options for hotel information and booking interfaces. This endpoint leverages Booking.com's unofficial API to access real-time data from hotels worldwide, allowing users to specify their preferred language when querying room availability, pricing, facilities, and policies as part of comprehensive travel planning.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://booking-com13.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"booking-com13.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "languages",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of language codes available on the Booking.com platform. This list is intended to inform users or subsequent API calls about which languages can be used to display hotel information, pricing, and booking interfaces. Each language is represented by a standard language code (e.g., 'en-gb', 'fr', 'zh-cn').",
      "output_format": "The output is a JSON object with a 'data' key containing an array of objects. Each object in this array has a single key, '__ref', whose value is a string. This string contains a reference to a language entity, formatted as 'Language:{\"code\":\"<language_code>\"}', which includes a nested, stringified JSON object with the language code."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Cities Cost of Living",
    "parent tool description": "Get detailed information about the living expenses of 650+ cities around the world.",
    "tool name": "Cities Cost of Living: Get Currencies List",
    "tool description": "Retrieves a comprehensive list of all available currencies used in the database. This endpoint leverages a global cost-of-living database covering over 650 cities worldwide, allowing users to understand which currencies are tracked within the system. The currency information serves as a foundation for comparing and analyzing living expenses across different regions, helping travelers, expatriates, and researchers make informed financial decisions when evaluating or comparing costs between international locations.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cities-cost-of-living1.p.rapidapi.com/get_currencies_list\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cities-cost-of-living1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get Currencies List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a comprehensive list of all currency codes tracked within the cost-of-living database. This list consists of standard three-letter currency abbreviations (e.g., 'USD', 'EUR'). This information is intended to inform users about which currencies are supported and can be used for subsequent queries and comparisons.",
      "output_format": "The output is a JSON object containing a single key, \"currencies\". The value associated with this key is an array of strings, with each string representing a unique currency code. The list appears to be complete and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "currency",
            "description": "The source tool provides valid currency codes in ISO 4217 format that can be used to specify the currency for hotel pricing information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cities Cost of Living",
    "parent tool description": "Get detailed information about the living expenses of 650+ cities around the world.",
    "tool name": "Cities Cost of Living: Get Cities List",
    "tool description": "Retrieves a comprehensive list of all available cities in the database. This endpoint taps into a global dataset covering over 650 cities worldwide, providing access to the complete catalog of locations for which detailed living expense information is available. The parent service offers extensive cost-of-living data that helps users compare and understand financial requirements across different urban centers globally.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cities-cost-of-living1.p.rapidapi.com/get_cities_list\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cities-cost-of-living1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get Cities List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of cities and their corresponding countries from a global database. This list serves as a comprehensive catalog of all locations for which the parent service can provide detailed cost-of-living information. Users can utilize this output to discover which cities are available for more specific data queries.",
      "output_format": "The output is a JSON object containing a single key, \"cities\". The value associated with this key is an array of objects. Each object in the array represents a single city and has two string fields: \"country\" and \"name\". The examples provided appear to be truncated, suggesting the full response contains a large number of cities."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use city and country from the cities list as destination"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "Can use city name from the cities list as market"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "Can use city name from the cities list as market"
          }
        ]
      },
      {
        "tool name": "Deutsche Bahn: Autocomplete",
        "connect params": [
          {
            "name": "query",
            "description": "Can use city name from the cities list as query"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "Can use city name from the cities list as search string"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto complete",
        "connect params": [
          {
            "name": "string",
            "description": "Can use city name from the cities list as search string"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use city name from the cities list as name"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use city name from the cities list as name"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Airline data in json format",
    "tool description": "Returns a file containing a comprehensive list of airlines from the database. This endpoint is part of the Travelpayouts Data API, which provides valuable travel insights for websites and blogs, allowing you to access flight price trends and discover popular destinations that would appeal to your customers. The airline data serves as a foundation for analyzing travel patterns and presenting relevant flight options to users.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/en-GB/airlines.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Airline data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of airlines. Each airline is represented by a JSON object containing its official code, a boolean flag indicating if it is a low-cost carrier, and a nested object of name translations, which includes the airline's name in English. This data is intended to be used as a foundational reference for travel applications to analyze flight patterns or display airline information.",
      "output_format": "The output is a single JSON array containing multiple airline objects. Within each object, the 'name' key can be null, but the English name is consistently provided within the nested 'name_translations' object under the 'en' key. The examples are truncated strings, suggesting the full list may be large."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airlineSearch",
        "connect params": [
          {
            "name": "iata",
            "description": "The IATA code of the airline"
          },
          {
            "name": "icao",
            "description": "The ICAO code of the airline"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineStatistics",
        "connect params": [
          {
            "name": "iata",
            "description": "The IATA code of the airline, must have a length of 3"
          },
          {
            "name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "The IATA code of the airline, must have a length of 3"
          },
          {
            "name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4"
          },
          {
            "name": "name",
            "description": "The name of the airline. Not case sensitive"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: aircraftSearch",
        "connect params": [
          {
            "name": "airline_ident",
            "description": "The ident of the airline, as returned by /airline/search"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Airplane data in json format",
    "tool description": "Returns a file containing a comprehensive list of airplanes from the database, providing detailed aircraft information for travel analysis. This endpoint is part of the Travelpayouts Data API, which delivers valuable travel insights for websites and blogs, allowing you to access flight price trends and identify popular destinations that appeal to your customers. The airplane data can be leveraged to enhance travel planning features and provide more detailed flight options to your audience.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/planes.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Airplane data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of airplane models. Each entry in the list is an object that contains the airplane's unique code and its corresponding full name. This information is intended to be used for travel analysis and to enhance travel planning applications by providing detailed aircraft information.",
      "output_format": "The output is a JSON array of objects. Each object represents a single airplane and contains two string keys: 'code' and 'name'. The provided examples are truncated, suggesting the list can be quite long. There is no indication of pagination."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: aircraftSearch",
        "connect params": [
          {
            "name": "model",
            "description": "Model ICAO code"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: aircraftInfo",
        "connect params": [
          {
            "name": "reg",
            "description": "The registration of the aircraft, as returned by /airline/aircraft or /aircraft/search"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: City data in json format",
    "tool description": "Returns a file containing a list of cities from the database, providing essential geographic reference points for travel planning. This endpoint is part of the Travelpayouts Data API, which delivers comprehensive travel insights for websites and blogs, allowing you to access flight price trends and identify popular destinations that appeal to your customers. The city data serves as a foundation for building travel-focused features that help users discover and plan their journeys effectively.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/en-GB/cities.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "City data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of cities in a JSON format, providing essential geographic and reference data for travel planning. Each city entry includes its name, country code, a unique city/airport code, geographical coordinates (latitude and longitude), and time zone. This data is intended to be used as a foundational database for building travel-focused applications.",
      "output_format": "The output is a JSON array where each element is an object representing a single city. Each object contains nested objects for 'coordinates', 'name_translations', and 'cases'. Some fields, such as 'name' and the entire 'cases' object, can be null, indicating that the data may not be available for all entries. The examples appear to be truncated, suggesting the full output is a large list."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use city names from the city data"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude coordinates from city data"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude coordinates from city data"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude coordinates from city data"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude coordinates from city data"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude coordinates from city data"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude coordinates from city data"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from the city data"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from the city data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Airport data in json format",
    "tool description": "Returns a file containing a comprehensive list of airports from the database. This endpoint is part of the Travelpayouts Data API, which provides valuable travel insights for websites and blogs by offering access to flight price trends and popular destination data that can help you better serve your customers with relevant travel information.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/en-GB/airports.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Airport data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "This tool returns a comprehensive list of travel-related locations, including airports and railway stations. For each location, it provides detailed data such as its name, IATA code, city and country codes, specific geographic coordinates, and time zone. This information is primarily used for populating databases for travel websites or applications that require a detailed catalog of flightable locations.",
      "output_format": "The tool returns a JSON array of objects, where each object represents a single location. The data contains nested objects for 'name_translations' and 'coordinates'. The 'name' field can be null, but the 'name_translations' object appears to consistently provide an English name. The examples are truncated, suggesting the full output is a very large, single list."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The airport data can provide city names and countries for destination planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use airport coordinates for nearby accommodation searches"
          },
          {
            "name": "lng",
            "description": "Can use airport coordinates for nearby accommodation searches"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use airport coordinates for pricing analysis near airports"
          },
          {
            "name": "lng",
            "description": "Can use airport coordinates for pricing analysis near airports"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use IATA codes from airport data"
          },
          {
            "name": "icao",
            "description": "Can use ICAO codes from airport data if available"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use airport identifiers from airport data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use airport identifiers from airport data"
          },
          {
            "name": "counterpart_ident",
            "description": "Can use airport identifiers for route endpoints"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "tool name": "Flightera Flight Data: airportInfo",
    "tool description": "Returns detailed airport information for airports matching the provided identifier (ident, iata, icao), typically returning a single result but potentially multiple entries depending on the search parameters. This leverages Flightera's comprehensive aviation database to deliver accurate airport details, supporting the broader service that provides flight status tracking, on-time performance metrics, and aviation statistics.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "icao",
        "type": "STRING",
        "description": "The ICAO code of the airport, must have a length of 4",
        "default": ""
      },
      {
        "name": "iata",
        "type": "STRING",
        "description": "The IATA code of the airport, must have a length of 3",
        "default": ""
      },
      {
        "name": "ident",
        "type": "STRING",
        "description": "The ident of the airport, as returned by /airport/search",
        "default": "KSFO"
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airport/info\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "airportInfo",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airport objects, each containing comprehensive details for an airport that matches a given identifier. This information includes various codes (IATA, ICAO), the airport's full name, location data such as city, country, and precise geographic coordinates (latitude, longitude), and operational details like owner and operator. It also provides the current local time at the airport.",
      "output_format": "The output is a JSON array of objects, where each object represents a single airport. While the examples show a single-element array, the tool can return multiple airport objects if the search query matches several entries. There is no information on pagination or cursoring."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude from airportInfo output"
          },
          {
            "param_name": "lng",
            "description": "Can use the longitude from airportInfo output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude from airportInfo output"
          },
          {
            "param_name": "lng",
            "description": "Can use the longitude from airportInfo output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude from airportInfo output"
          },
          {
            "param_name": "lng",
            "description": "Can use the longitude from airportInfo output"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use the city and country from airportInfo output"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "param_name": "ident",
            "description": "Can use the airport ident from airportInfo output"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "param_name": "ident",
            "description": "Can use the airport ident from airportInfo output"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportStatistics",
        "connect params": [
          {
            "param_name": "ident",
            "description": "Can use the airport ident from airportInfo output"
          },
          {
            "param_name": "iata",
            "description": "Can use the IATA code from airportInfo output"
          },
          {
            "param_name": "icao",
            "description": "Can use the ICAO code from airportInfo output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flixbus",
    "parent tool description": "A service that provides flixbus travel search, available cities, stations, timetables and routes. Site: www.flixbus.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
    "tool name": "Flixbus: cities",
    "tool description": "Retrieves a comprehensive list of cities served by Flixbus transportation network. This endpoint connects to Flixbus's extensive travel service database (www.flixbus.com), allowing you to access all available departure and destination cities within their intercity bus and train network. The data provided forms the foundation for searching routes, timetables, and available stations across Flixbus's European and international transportation system.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flixbus.p.rapidapi.com/v1/cities\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "cities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a comprehensive list of all cities served by the Flixbus transportation network. Each entry in the list is a city object containing details like its name, unique ID, geographic coordinates, country, and a list of associated station and route pair IDs. This information serves as a foundational dataset for discovering available destinations and for use in subsequent route and timetable searches.",
      "output_format": "The output is a JSON array of objects, with each object corresponding to a city. The city object contains nested objects for 'coordinates' and 'country', and arrays of integers for 'stations' and 'pairs'. The examples do not show any pagination or cursoring mechanism, suggesting the entire list of cities is returned in a single response."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude coordinates from Flixbus: cities output"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude coordinates from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "param_name": "string",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: europeanCountries",
    "tool description": "Retrieves current gasoline prices across European countries, providing up-to-date fuel cost information. This service draws from a database of fuel stations in various cities, allowing users to compare gasoline and diesel prices between different locations and vendors throughout Europe, helping travelers and locals make informed decisions about where to refuel.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/europeanCountries\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "europeanCountries",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of fuel prices for various European countries. It provides the prices for gasoline, diesel, and LPG (Liquefied Petroleum Gas), all denominated in Euros. This information allows for a direct comparison of fuel costs across different nations in Europe.",
      "output_format": "The output is a JSON object containing a single key, \"results\". This key holds an array of objects, where each object represents a country. Each country object includes the country's name, the currency ('euro'), and the prices for different fuel types as strings. Prices are formatted with a comma as the decimal separator. A hyphen ('-') is used to indicate when a price for a specific fuel type is unavailable."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "The country names from the gas price data could be used as destinations for trip planning"
          }
        ]
      },
      {
        "tool name": "Cost of living and prices: Cities",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: allUsaPrice",
    "tool description": "Provides the average current gasoline prices across states in America, delivering a broad market overview rather than individual station data. This service is part of a comprehensive fuel price tracking system that monitors gasoline and diesel prices at various fuel stations throughout different cities, allowing users to compare fuel costs across regions and make informed decisions about where and when to purchase fuel.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/allUsaPrice\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "allUsaPrice",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of average fuel prices for each state in the United States. Each item in the list represents a state and provides the current average prices for regular gasoline, mid-grade, premium, and diesel fuel. The prices are denominated in US dollars, allowing for a broad comparison of fuel costs across different regions.",
      "output_format": "The output is a JSON object with a 'result' key that contains an array of objects. Each object in the array corresponds to a U.S. state and includes its name, currency, and the prices for various fuel types (gasoline, midGrade, premium, diesel). The price values are formatted as strings."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "The state names from the gas price data could be used as destination inputs for trip planning"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "param_name": "state",
            "description": "The state names from the allUsaPrice output can be directly used as input for the stateUsaPrice endpoint to get more detailed information about a specific state"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "State names from the gas price data could be used as location search terms"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "State names from the gas price data could be used as location search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: canada",
    "tool description": "Retrieves current gasoline prices across Canada. This service provides access to up-to-date fuel pricing information from various gas stations throughout Canadian cities, allowing users to compare both gasoline and diesel prices between different fuel retailers and locations. The data helps consumers make informed decisions about where to purchase fuel based on current market rates in their area.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/canada\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "canada",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of average gasoline prices for various Canadian provinces. For each province, the output provides the name, the average gasoline price, and the currency in which the price is denominated. This information is intended to allow users to compare fuel costs across different regions of Canada.",
      "output_format": "The output is a JSON object with a top-level key 'result' which contains a JSON array of objects. Each object in the array represents a province and its gas price. All values within these objects, including the price, are formatted as strings. There is no evidence of pagination or complex nesting."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The gas price data for Canadian provinces could be used to select a destination in Canada based on fuel costs"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "While this tool is for US states, the Canadian province data could be used for cross-border comparison"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: usaCitiesList",
    "tool description": "Retrieves a list of cities with gasoline and diesel price information across the USA. This service accesses a database of fuel stations to provide comparative pricing data, allowing users to check and compare current fuel costs in different urban areas. The tool helps travelers, commuters, and businesses make cost-effective decisions by providing up-to-date information on fuel prices across various American cities.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/usaCitiesList\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "usaCitiesList",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a structured list of US cities, organized by state, for which fuel price information is available. This output functions as a directory, showing the geographic coverage of the gas price data service. A user would consult this list to identify available cities before making a more specific query for actual fuel prices in a chosen location.",
      "output_format": "The output is a JSON object with a top-level 'result' key. The value of 'result' is an array that contains another, single array of state objects. Each state object contains the state's name and a nested array of city objects. Each city object, in turn, contains the name of the city."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use city names from the usaCitiesList output as destination inputs for trip planning"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "Can use state names from the usaCitiesList output to query gas prices for specific states"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "Can use city names from the usaCitiesList output as search strings for travel suggestions"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use city names from the usaCitiesList output as location names for hotel searches"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hotels com Provider",
    "parent tool description": "Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one",
    "tool name": "Hotels com Provider: Domains List",
    "tool description": "Retrieves a comprehensive list of available domains, domain codes, currencies, and locales for the Hotels.com platform. This endpoint provides essential reference data needed to properly configure and localize hotel searches through the Hotels.com service, which offers access to hotel listings, pricing information, property photos, and guest reviews. The data returned helps ensure that search queries are formatted correctly for specific regions and that results can be displayed with appropriate currency and language settings.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://hotels-com-provider.p.rapidapi.com/v2/domains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hotels-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Domains List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive dictionary of localization and configuration data for the Hotels.com platform. Each key in the dictionary is a domain code (e.g., 'US', 'CA'), and its value is an object containing details like the domain's URL, country code, currency, and a list of supported locales. This reference data is used to correctly format API requests for specific regions and display results with the appropriate language and currency.",
      "output_format": "The output is a single, non-paginated JSON object that acts as a dictionary. The top-level keys are two-letter domain codes, and each value is a nested object containing domain-specific details. This includes a `supported_locales` object which itself contains nested objects for each locale. Some fields, such as `language_code`, can be null."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "param_name": "currency",
            "description": "Can use currency information from Hotels.com domains list to set appropriate currency"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "tool name": "Priceline com Provider: Search hotels locations",
    "tool description": "Searches for travel locations by name, allowing you to find specific destinations for your trip planning. This endpoint is part of priceline.com's comprehensive travel booking service that lets you search for hotels, rental cars, and flights across multiple destinations. The service provides access to priceline.com's extensive database of travel options, helping you quickly locate and compare travel destinations to build your ideal itinerary.",
    "required_parameters": [
      {
        "name": "name",
        "type": "STRING",
        "description": "Name",
        "default": "Berlin"
      },
      {
        "name": "search_type",
        "type": "STRING",
        "description": "",
        "default": "ALL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/hotels/locations\"\nquerystring = {\"name\": \"Berlin\", \"search_type\": \"ALL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Search hotels locations",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of location objects that match a given search query. Each location object provides detailed information, including its name, type (e.g., 'CITY'), a unique identifier ('id', 'cityID'), and geographic details like country, state, city name, and coordinates (latitude, longitude). This output is primarily used to disambiguate user location queries and provide a specific location ID for subsequent travel searches like booking hotels or flights.",
      "output_format": "The output is a string-serialized JSON array, where each element is an object representing a location. In the case of no matching results, the tool returns an empty string. Many fields within the location objects are nullable, such as 'stateCode', 'address', and 'zip'. The provided examples are truncated, suggesting the array can contain more items than shown."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use the location name, city name, or country from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "Can use the location name or city name from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude coordinate from the source tool's output"
          },
          {
            "param_name": "lng",
            "description": "Can use the longitude coordinate from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "Can use the location name or city name from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude coordinate from the source tool's output"
          },
          {
            "param_name": "lng",
            "description": "Can use the longitude coordinate from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude coordinate from the source tool's output"
          },
          {
            "param_name": "lng",
            "description": "Can use the longitude coordinate from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use the location name or city name from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "Can use the latitude coordinate from the source tool's output"
          },
          {
            "param_name": "longitude",
            "description": "Can use the longitude coordinate from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "tool name": "Priceline com Provider: Search cars locations",
    "tool description": "Searches for travel locations by name, allowing you to find specific destinations for your travel planning. This endpoint is part of Priceline.com's comprehensive travel service that lets you search for hotels, rental cars, and flights across multiple destinations. The platform provides access to Priceline's extensive database of travel options, helping you identify locations that match your search criteria as the first step in planning your trip or booking accommodations and transportation.",
    "required_parameters": [
      {
        "name": "name",
        "type": "STRING",
        "description": "Name",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/cars-rentals/locations\"\nquerystring = {\"name\": \"London\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Search cars locations",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of travel locations, such as airports and cities, that match a user's search query. Each location object in the list provides comprehensive details including its name, type, unique identifiers (like airport codes), and geographic information (latitude, longitude, timezone). The output also includes data relevant to travel planning, such as the number of car rental locations available and various flags indicating booking options, helping users select a precise location for their travel arrangements.",
      "output_format": "The output is a JSON-formatted string representing an array of location objects. Each object has a flat structure. Some fields appear to be conditional based on the location's type or country; for example, `airportName` is present for airports, and `stateCode` may be an empty string for non-US locations. Some numerical values, like `score`, are returned as strings."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use location names from the source tool output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's geographic information"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool's geographic information"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's geographic information"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool's geographic information"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "param_name": "iata",
            "description": "Can use IATA airport codes from the source tool output"
          },
          {
            "param_name": "icao",
            "description": "Can use ICAO airport codes from the source tool output if available"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "tool name": "Priceline com Provider: Hotel details",
    "tool description": "Provides detailed information on a specified hotel, including amenities, pricing, and availability. This endpoint leverages priceline.com's extensive travel database, allowing users to access comprehensive hotel data as part of a broader service that also includes search capabilities for rental cars and flights. The information retrieved can help travelers make informed accommodation decisions while planning their trips through this comprehensive travel booking platform.",
    "required_parameters": [
      {
        "name": "hotel_id",
        "type": "STRING",
        "description": "The PPN Hotel ID identifying the desired property.",
        "default": "700008849"
      }
    ],
    "optional_parameters": [
      {
        "name": "airport_limit",
        "type": "NUMBER",
        "description": "airport_limit",
        "default": ""
      },
      {
        "name": "check_in",
        "type": "STRING",
        "description": "Check In Date (YYYY-MM-DD or MM/DD/YYYY)",
        "default": ""
      },
      {
        "name": "promo",
        "type": "BOOLEAN",
        "description": "Toggle the hotels promo data on and off. By default, promo data is excluded in the response. To include promo data in the response, set promo to 1.",
        "default": true
      },
      {
        "name": "photos",
        "type": "BOOLEAN",
        "description": "Toggles photo data. By default, hotel photo data is excluded in the response. Valid Options: 0 = Off, 1 = On.",
        "default": "1"
      },
      {
        "name": "videos",
        "type": "BOOLEAN",
        "description": "Toggle videos. Valid Options: True or False",
        "default": true
      },
      {
        "name": "guest_score_breakdown",
        "type": "BOOLEAN",
        "description": "Toggle guest score breakdown on and off. Valid Options: True or False",
        "default": true
      },
      {
        "name": "reviews",
        "type": "BOOLEAN",
        "description": "Toggle hotel review data. By default, review data is excluded in the response. Valid Options: 0 = False, 1 = On.",
        "default": "1"
      },
      {
        "name": "city_limit",
        "type": "NUMBER",
        "description": "city_limit",
        "default": ""
      },
      {
        "name": "sid",
        "type": "STRING",
        "description": "Session ID. Random string",
        "default": "iSiX639"
      },
      {
        "name": "important_info",
        "type": "BOOLEAN",
        "description": "Toggles important info. Important info is extra details regarding the specified hotel. By default, important info is excluded in the response. Valid Options: 0 = Off, 1 = On.",
        "default": true
      },
      {
        "name": "recent",
        "type": "BOOLEAN",
        "description": "Toggle recent sales. Valid Options: True, False",
        "default": true
      },
      {
        "name": "poi_limit",
        "type": "NUMBER",
        "description": "poi_limit",
        "default": ""
      },
      {
        "name": "plugins",
        "type": "BOOLEAN",
        "description": "Provides extra information regarding plugins for the specified hotel. To include specific plugin information, include the ID of the plugin as a comma separated value to the plugins parameter.",
        "default": true
      },
      {
        "name": "image_size",
        "type": "STRING",
        "description": "The size of the image returned. Valid Options: small (60px), medium(300 to 312px) or large(500 to 800px)",
        "default": ""
      },
      {
        "name": "id_lookup",
        "type": "BOOLEAN",
        "description": "Allows non-PPN Hotel IDs to be searched in the database. Valid Options: True or False",
        "default": true
      },
      {
        "name": "check_out",
        "type": "STRING",
        "description": "Check In Date (YYYY-MM-DD or MM/DD/YYYY)",
        "default": ""
      },
      {
        "name": "currency",
        "type": "STRING",
        "description": "Requested currency for the results. ISO 4217 format.",
        "default": ""
      },
      {
        "name": "nearby",
        "type": "BOOLEAN",
        "description": "Toggles nearby data. Nearby data is extra information regarding the specified hotel s location. Nearby data can include city_data, airport_data, and poi_category_data. By default, nearby data is excluded from the response. To include nearby data, set nearby to 1. To include city_data within nearby data, include a city_limit parameter to a value greater than 1. To include airport_data within nearby data, include a airport_limit parameter to a value greater than 1. To include poi_category_data within nearby data, include a poi_limit parameter to a value greater than 1.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/details\"\nquerystring = {\"airport_limit\": \"\", \"check_in\": \"\", \"promo\": true, \"photos\": \"1\", \"videos\": true, \"guest_score_breakdown\": true, \"reviews\": \"1\", \"city_limit\": \"\", \"sid\": \"iSiX639\", \"important_info\": true, \"hotel_id\": \"700008849\", \"recent\": true, \"poi_limit\": \"\", \"plugins\": true, \"image_size\": \"\", \"id_lookup\": true, \"check_out\": \"\", \"currency\": \"\", \"nearby\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Hotel details",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive profile for a single, specified hotel. This profile includes the hotel's name, address, star rating, user review scores, and geographic coordinates. It also provides various booking URLs, image thumbnails, and operational details like check-in/check-out times, intended to give a user a complete picture of the property to aid in their travel planning.",
      "output_format": "The output is a deeply nested JSON object. The primary hotel details are located under the path `getHotelHotelDetails.results.hotel_data`. The hotel data itself is contained within a key-value pair (e.g., 'hotel_0': {...}), suggesting a dictionary that holds the hotel object. Many attributes, such as `address`, `geo`, `hotel_chain`, and `thumbnail_hq`, are structured as nested objects. Some fields can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The hotel's location can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the hotel's latitude coordinate"
          },
          {
            "name": "lng",
            "description": "Can use the hotel's longitude coordinate"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the hotel's latitude coordinate"
          },
          {
            "name": "lng",
            "description": "Can use the hotel's longitude coordinate"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the hotel's latitude coordinate"
          },
          {
            "name": "longitude",
            "description": "Can use the hotel's longitude coordinate"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Booking.com_v2",
    "parent tool description": "Real-time data, unofficial API Booking.com\nThis API helps to query rooms, price, facilities, policities.. from many hotels around the world to create a travel",
    "tool name": "Booking.com_v2: languages",
    "tool description": "Retrieves available language options for hotel information and booking interfaces. This endpoint leverages Booking.com's unofficial API to access real-time data from hotels worldwide, allowing users to specify their preferred language when querying room availability, pricing, facilities, and policies as part of comprehensive travel planning.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://booking-com13.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"booking-com13.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "languages",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a comprehensive list of language codes supported by the Booking.com API. These language codes can be used in other API calls to retrieve hotel information, such as availability, pricing, and policies, in a specific language. The response includes a status message and a data array containing the supported language codes.",
      "output_format": "The output is a JSON object. The primary data is located in the 'data' key, which holds an array of objects. Each object in this array contains a single '__ref' key, whose string value contains an embedded JSON object with a 'code' key that specifies the language code (e.g., 'en-gb', 'fr'). The structure is not paginated and appears to be a complete list."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Cities Cost of Living",
    "parent tool description": "Get detailed information about the living expenses of 650+ cities around the world.",
    "tool name": "Cities Cost of Living: Get Cities List",
    "tool description": "Retrieves a comprehensive list of all available cities in the database. This endpoint taps into a global dataset covering over 650 cities worldwide, providing access to the complete catalog of locations for which detailed living expense information is available. The parent service offers extensive cost-of-living data that helps users compare and understand financial requirements across different urban centers globally.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cities-cost-of-living1.p.rapidapi.com/get_cities_list\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cities-cost-of-living1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get Cities List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of all cities for which the service provides cost-of-living data. Each entry in the list specifies the city's name and its corresponding country. This serves as a complete catalog for users to know which locations are available for more detailed queries.",
      "output_format": "The output is a JSON object with a single key, \"cities\". The value of this key is an array of objects. Each object in the array represents a single city and contains two string fields: \"country\" and \"name\". The provided examples are truncated, but the full output is expected to be a complete, non-paginated list."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The city name from the cities list can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The city name from the cities list can be used as a market for Airbnb listings"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The city name from the cities list can be used as a market for counting Airbnb listings"
          }
        ]
      },
      {
        "tool name": "Deutsche Bahn: Autocomplete",
        "connect params": [
          {
            "name": "query",
            "description": "The city name from the cities list can be used as a query for station search"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "The city name from the cities list can be used as a search string"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The city name from the cities list can be used as a search name"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "The city name from the cities list can be used as a search name"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto complete",
        "connect params": [
          {
            "name": "string",
            "description": "The city name from the cities list can be used as a search string"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cost of living and prices",
    "parent tool description": "Prices for more then 60 goods and services for more then 8000+ cities around the world from TravelTables.com",
    "tool name": "Cost of living and prices: Cities",
    "tool description": "Retrieves a comprehensive list of all cities in the database along with their corresponding country names, IDs, latitude, and longitude coordinates. This endpoint accesses TravelTables.com's extensive global database covering over 8000+ cities worldwide, which serves as the foundation for their price comparison service that tracks more than 60 different goods and services across these locations. The geographical data provided by this endpoint enables location-based cost analysis and travel planning.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cost-of-living-and-prices.p.rapidapi.com/cities\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cost-of-living-and-prices.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Cities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of over 8000 cities from a global database. For each city, the output provides its name, the country it belongs to, a unique identifier (ID), and its precise geographical coordinates (latitude and longitude). This data is intended to be used as a foundational reference for location-based queries, such as cost analysis or travel planning.",
      "output_format": "The output is expected to be a JSON array, where each element is an object representing a single city. Each city object contains keys for the city's ID, name, country, latitude, and longitude. Given the large number of cities mentioned (8000+), the API might employ pagination to deliver the results in chunks, though this is not explicitly stated."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use city name and country from the source tool output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool output"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool output"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city name from the source tool output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "Can use latitude from the source tool output"
          },
          {
            "param_name": "longitude",
            "description": "Can use longitude from the source tool output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city name from the source tool output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Airline data in json format",
    "tool description": "Returns a file containing a comprehensive list of airlines from the database. This endpoint is part of the Travelpayouts Data API, which provides valuable travel insights for websites and blogs, allowing you to access flight price trends and discover popular destinations that would appeal to your customers. The airline data serves as a foundation for analyzing travel patterns and presenting relevant flight options to users.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/en-GB/airlines.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Airline data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airlines in a JSON array format. Each object in the array represents an airline and contains its unique code, a boolean flag indicating if it is a low-cost carrier, and its name translated into English. This data is intended to be used as a foundational reference for flight-related applications or travel data analysis.",
      "output_format": "The output is a JSON array of objects. Each object has a `name` field (which can be null), a string `code`, a boolean `is_lowcost` flag, and a nested `name_translations` object. The `name_translations` object contains the airline's name in English under the 'en' key."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airlineSearch",
        "connect params": [
          {
            "param_name": "iata",
            "description": "The IATA code of the airline"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline"
          },
          {
            "param_name": "name",
            "description": "The name or part of the name of the airline, case insensitive"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineInfo",
        "connect params": [
          {
            "param_name": "iata",
            "description": "The IATA code of the airline, must have a length of 3"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4"
          },
          {
            "param_name": "name",
            "description": "The name of the airline. Not case sensitive"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineStatistics",
        "connect params": [
          {
            "param_name": "iata",
            "description": "The IATA code of the airline, must have a length of 3"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Airplane data in json format",
    "tool description": "Returns a file containing a comprehensive list of airplanes from the database, providing detailed aircraft information for travel analysis. This endpoint is part of the Travelpayouts Data API, which delivers valuable travel insights for websites and blogs, allowing you to access flight price trends and identify popular destinations that appeal to your customers. The airplane data can be leveraged to enhance travel planning features and provide more detailed flight options to your audience.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/planes.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Airplane data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a comprehensive list of airplane models. Each entry in the list includes a unique aircraft code and the corresponding full name of the airplane. This information is intended to be used to enrich travel data, for instance, by translating technical airplane codes into user-friendly names for customers on travel websites or in planning applications.",
      "output_format": "The output is a JSON array of objects. Each object represents a single airplane model and contains two string keys: 'code' and 'name'. The provided examples appear to be truncated, but the structure is consistent. There is no indication of pagination or nesting."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: aircraftSearch",
        "connect params": [
          {
            "param_name": "model",
            "description": "Model ICAO code"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: aircraftInfo",
        "connect params": [
          {
            "param_name": "reg",
            "description": "The registration of the aircraft, as returned by /airline/aircraft or /aircraft/search"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: City data in json format",
    "tool description": "Returns a file containing a list of cities from the database, providing essential geographic reference points for travel planning. This endpoint is part of the Travelpayouts Data API, which delivers comprehensive travel insights for websites and blogs, allowing you to access flight price trends and identify popular destinations that appeal to your customers. The city data serves as a foundation for building travel-focused features that help users discover and plan their journeys effectively.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/en-GB/cities.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "City data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of cities, providing foundational data for travel planning. Each city entry includes an identifier code, country code, geographic coordinates (latitude and longitude), time zone, and name translations. This information can be used to build travel-focused features that help users discover and locate destinations.",
      "output_format": "The output is a JSON array of objects, where each object represents a city. The examples provided appear to be truncated, suggesting the full list may be very large. Some fields within a city object are nullable, such as `name` and `cases`. The `coordinates` and `name_translations` fields are nested JSON objects."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use city names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from city coordinates"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from city coordinates"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from city coordinates"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from city coordinates"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "Can use latitude from city coordinates"
          },
          {
            "param_name": "longitude",
            "description": "Can use longitude from city coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Data of countries in json format",
    "tool description": "Returns a file containing a comprehensive list of countries from the database, providing essential geographic reference data for travel applications. This endpoint is part of the Travelpayouts Data API, which delivers valuable travel insights for websites and blogs by offering flight price trends and popular destination information that can help you enhance your customer's travel planning experience.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/en-GB/countries.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Data of countries in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of countries, with each country represented as a JSON object. Each object provides essential geographic data, including a two-letter country code, a currency code, and a nested object containing the country's name in English. This information is intended to be used as reference data for travel-related applications.",
      "output_format": "The output is a JSON array of objects. Each object has a consistent structure with fields like 'code', 'currency', and a nested 'name_translations' object. The 'name' field is consistently an empty string and the 'cases' field is consistently null in the provided examples; the actual country name is found within the 'name_translations' object."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use country names from the source tool's name_translations.en field"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count Listings by administrative divisions",
        "connect params": [
          {
            "param_name": "state",
            "description": "Can use country codes from the source tool's code field"
          }
        ]
      },
      {
        "tool name": "Cities Cost of Living: Get Currencies List",
        "connect params": []
      },
      {
        "tool name": "Gas Price: europeanCountries",
        "connect params": []
      },
      {
        "tool name": "Priceline com Provider: Download countries",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Data on the routes in json format",
    "tool description": "Returns a file containing a list of routes from the database, allowing you to access specific flight path information. This endpoint is part of the Travelpayouts Data API, which provides comprehensive travel insights for websites and blogs by delivering flight price trends and popular destination data that can help you better serve your customers with relevant travel options.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/routes.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Data on the routes in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of flight routes, where each route is an object containing details about a specific flight path. The information includes the airline and airport IATA codes, whether the flight is a codeshare, the number of transfers, and a list of aircraft models used on that route. This data is useful for populating travel websites or applications with specific flight details.",
      "output_format": "The output is a JSON-formatted string that represents a list of JSON objects. Each object corresponds to a single flight route. Some fields, such as `airline_icao`, `departure_airport_icao`, and `arrival_airport_icao`, can be null. The `planes` field is a list of strings."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "name": "flnr",
            "description": "Could use flight number if included in routes data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineSearch",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use airline IATA code from routes data"
          },
          {
            "name": "icao",
            "description": "Can use airline ICAO code from routes data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "name": "flnr",
            "description": "Could use flight number if included in routes data"
          },
          {
            "name": "aptFrom",
            "description": "Can use departure airport ident from routes data"
          },
          {
            "name": "aptTo",
            "description": "Can use arrival airport ident from routes data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use airport IATA code from routes data"
          },
          {
            "name": "icao",
            "description": "Can use airport ICAO code from routes data"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Could use city information derived from airport codes in routes data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "tool name": "Flightera Flight Data: airportInfo",
    "tool description": "Returns detailed airport information for airports matching the provided identifier (ident, iata, icao), typically returning a single result but potentially multiple entries depending on the search parameters. This leverages Flightera's comprehensive aviation database to deliver accurate airport details, supporting the broader service that provides flight status tracking, on-time performance metrics, and aviation statistics.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "icao",
        "type": "STRING",
        "description": "The ICAO code of the airport, must have a length of 4",
        "default": ""
      },
      {
        "name": "iata",
        "type": "STRING",
        "description": "The IATA code of the airport, must have a length of 3",
        "default": ""
      },
      {
        "name": "ident",
        "type": "STRING",
        "description": "The ident of the airport, as returned by /airport/search",
        "default": "KSFO"
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airport/info\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "airportInfo",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airport objects containing detailed information. Each object includes various identifiers (IATA, ICAO, ident), the airport's name, location (city, country, latitude, longitude), and operational details such as the owner, operator, and current local time. This information is used to get a comprehensive profile of a specific airport.",
      "output_format": "The output is a JSON array of objects, where each object represents a single airport. The array can contain one or more objects, or it can be empty (represented by an empty string in the examples) if no matching airports are found. All fields within an airport object appear to be consistently present."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use the city and country from airportInfo"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from airportInfo"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from airportInfo"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from airportInfo"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from airportInfo"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from airportInfo"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from airportInfo"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "param_name": "ident",
            "description": "Can use ident from airportInfo"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "param_name": "ident",
            "description": "Can use ident from airportInfo"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportStatistics",
        "connect params": [
          {
            "param_name": "ident",
            "description": "Can use ident from airportInfo"
          },
          {
            "param_name": "iata",
            "description": "Can use IATA code from airportInfo"
          },
          {
            "param_name": "icao",
            "description": "Can use ICAO code from airportInfo"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: europeanCountries",
    "tool description": "Retrieves current gasoline prices across European countries, providing up-to-date fuel cost information. This service draws from a database of fuel stations in various cities, allowing users to compare gasoline and diesel prices between different locations and vendors throughout Europe, helping travelers and locals make informed decisions about where to refuel.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/europeanCountries\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "europeanCountries",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of objects, each containing fuel price information for a specific European country. Each object details the prices for gasoline, diesel, and LPG, along with the currency used (euros). This data allows for a direct comparison of fuel costs across different nations in Europe.",
      "output_format": "The output is a JSON object with a single key, \"results\", which contains an array of objects. Each object in the array represents a country. Price values are strings that use a comma as a decimal separator. A dash ('-') is used to represent null or unavailable data for a fuel type."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The European country names from the gas price data can be used as destinations for trip planning"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: allUsaPrice",
    "tool description": "Provides the average current gasoline prices across states in America, delivering a broad market overview rather than individual station data. This service is part of a comprehensive fuel price tracking system that monitors gasoline and diesel prices at various fuel stations throughout different cities, allowing users to compare fuel costs across regions and make informed decisions about where and when to purchase fuel.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/allUsaPrice\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "allUsaPrice",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a comprehensive list of average fuel prices for each state in the United States. For every state, it details the current average price per gallon for regular gasoline, mid-grade, premium, and diesel fuel, denominated in US dollars. This data is intended to give a broad market overview for comparing fuel costs across different regions.",
      "output_format": "The output is a JSON object with a top-level boolean 'success' field and a 'result' field. The 'result' field contains a JSON array of objects, where each object corresponds to a U.S. state and its fuel prices. All price values are formatted as strings, not numeric types. The entire list of states appears to be returned in a single, non-paginated response."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The gas price data could inform trip planning to states with lower fuel costs"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "The state code from the allUsaPrice output can be used to get detailed pricing for a specific state"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Download states",
        "connect params": [
          {
            "description": "The state information from gas prices can be used to look up additional state details"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: canada",
    "tool description": "Retrieves current gasoline prices across Canada. This service provides access to up-to-date fuel pricing information from various gas stations throughout Canadian cities, allowing users to compare both gasoline and diesel prices between different fuel retailers and locations. The data helps consumers make informed decisions about where to purchase fuel based on current market rates in their area.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/canada\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "canada",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of Canadian provinces and their current average gasoline prices. Each entry in the list specifies the province's name and the price of gasoline in USD. This information is intended to help users compare fuel costs across different regions in Canada.",
      "output_format": "The output is a JSON object with a 'result' key that contains an array of objects. Each object in the array represents a province and its gasoline price. The price is formatted as a string rather than a number. There is no evidence of pagination or null values in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The tool can use Canadian province names from the gas price output as potential destinations for trip planning"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "While this tool is for US states, it's conceptually related to the Canadian gas price data and could be used for comparison with neighboring Canadian provinces"
          }
        ]
      },
      {
        "tool name": "Gas Price: allUsaPrice",
        "connect params": [
          {
            "description": "This tool provides US gas prices that could be compared with the Canadian gas prices from the source tool"
          }
        ]
      },
      {
        "tool name": "Gas Price: europeanCountries",
        "connect params": [
          {
            "description": "This tool provides European gas prices that could be compared with the Canadian gas prices from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: usaCitiesList",
    "tool description": "Retrieves a list of cities with gasoline and diesel price information across the USA. This service accesses a database of fuel stations to provide comparative pricing data, allowing users to check and compare current fuel costs in different urban areas. The tool helps travelers, commuters, and businesses make cost-effective decisions by providing up-to-date information on fuel prices across various American cities.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/usaCitiesList\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "usaCitiesList",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a comprehensive list of US cities, organized by state, where fuel price data is available. It acts as a directory, allowing a user to see which geographic locations are supported by the service. The data does not contain fuel prices itself but lists the states and their respective cities for potential price lookups.",
      "output_format": "The response is a JSON object containing a 'result' key. The value of 'result' is a doubly-nested array. The inner array contains a list of state objects. Each state object has a 'state' key (string) and a 'cities' key, which holds an array of city objects. Each city object contains a 'name' key with the city's name as a string."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The city names from usaCitiesList can be used as destination inputs for trip planning"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "State names from usaCitiesList can be used to get specific state gas prices"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "City names from usaCitiesList can be used as search strings for travel suggestions"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "City names from usaCitiesList can be used to search for hotel locations"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "City names from usaCitiesList can be used to search for car rental locations"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hotels com Provider",
    "parent tool description": "Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one",
    "tool name": "Hotels com Provider: Domains List",
    "tool description": "Retrieves a comprehensive list of available domains, domain codes, currencies, and locales for the Hotels.com platform. This endpoint provides essential reference data needed to properly configure and localize hotel searches through the Hotels.com service, which offers access to hotel listings, pricing information, property photos, and guest reviews. The data returned helps ensure that search queries are formatted correctly for specific regions and that results can be displayed with appropriate currency and language settings.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://hotels-com-provider.p.rapidapi.com/v2/domains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hotels-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Domains List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive JSON object mapping two-letter domain codes to their specific configurations for the Hotels.com platform. Each domain's configuration includes its URL, three-letter country code, various site identifiers, default currency, and a list of supported locales. This reference data is crucial for localizing API requests, such as hotel searches, by ensuring the correct language and currency settings are used for a specific region.",
      "output_format": "The output is a single, non-paginated JSON object. The top-level keys of this object are two-letter domain codes (e.g., 'AE', 'AR'). The value for each key is another object containing the domain's properties, including a nested 'supported_locales' object. This nested object is also a dictionary, keyed by the locale code (e.g., 'en_GB'). Some fields within the nested structures, like 'language_code', can be null."
    },
    "connected tools": [
      {
        "tool name": "Hotels com Provider: Hotel Slug convert",
        "connect params": []
      },
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "param_name": "currency",
            "description": "Can use currency codes from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "tool name": "Priceline com Provider: Search hotels locations",
    "tool description": "Searches for travel locations by name, allowing you to find specific destinations for your trip planning. This endpoint is part of priceline.com's comprehensive travel booking service that lets you search for hotels, rental cars, and flights across multiple destinations. The service provides access to priceline.com's extensive database of travel options, helping you quickly locate and compare travel destinations to build your ideal itinerary.",
    "required_parameters": [
      {
        "name": "name",
        "type": "STRING",
        "description": "Name",
        "default": "Berlin"
      },
      {
        "name": "search_type",
        "type": "STRING",
        "description": "",
        "default": "ALL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/hotels/locations\"\nquerystring = {\"name\": \"Berlin\", \"search_type\": \"ALL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Search hotels locations",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographic locations that match a text-based search query. Each location object in the list includes a display name, a unique ID, type (e.g., CITY), geographic coordinates (latitude and longitude), and administrative details like city, state/province, and country. This output is intended to help a user select a specific destination whose ID can then be used for subsequent travel searches.",
      "output_format": "The output is a JSON array of objects, where each object represents a potential location match. If no locations are found, the output may be an empty string instead of a standard empty array. Many fields within the location objects can be null, for example, `stateCode` is null for locations outside the US."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use location name from search results"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "Can use city/location name from search results"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lng",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "Can use city/location name from search results"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lng",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count Listings by administrative divisions",
        "connect params": [
          {
            "name": "state",
            "description": "Can use state/province from search results"
          },
          {
            "name": "admin1",
            "description": "Can use administrative details from search results"
          },
          {
            "name": "admin2",
            "description": "Can use administrative details from search results"
          },
          {
            "name": "admin3",
            "description": "Can use administrative details from search results"
          },
          {
            "name": "place",
            "description": "Can use city name from search results"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lng",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "Can use state code from search results for US locations"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use location name from search results"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "tool name": "Priceline com Provider: Search cars locations",
    "tool description": "Searches for travel locations by name, allowing you to find specific destinations for your travel planning. This endpoint is part of Priceline.com's comprehensive travel service that lets you search for hotels, rental cars, and flights across multiple destinations. The platform provides access to Priceline's extensive database of travel options, helping you identify locations that match your search criteria as the first step in planning your trip or booking accommodations and transportation.",
    "required_parameters": [
      {
        "name": "name",
        "type": "STRING",
        "description": "Name",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/cars-rentals/locations\"\nquerystring = {\"name\": \"London\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Search cars locations",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of travel locations based on a name query. Each item in the list is an object containing detailed information about a specific location, such as an airport or a city. The data includes the location's name, type, unique IDs, geographic coordinates (latitude and longitude), timezone, and address details like city, state, and country. This information is intended to help users select a precise location for travel planning, specifically for services like rental cars.",
      "output_format": "The output is a JSON array of objects. Each object represents a single location and has a flat structure. Some fields, like 'stateCode' or 'provinceName', can be an empty string if they are not applicable to a given location."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use the location name, city, state, and country from the source tool"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool"
          },
          {
            "name": "lng",
            "description": "Can use longitude from source tool"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool"
          },
          {
            "name": "lng",
            "description": "Can use longitude from source tool"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool"
          },
          {
            "name": "lng",
            "description": "Can use longitude from source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "Can use location name from source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use location name from source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "tool name": "Priceline com Provider: Hotel details",
    "tool description": "Provides detailed information on a specified hotel, including amenities, pricing, and availability. This endpoint leverages priceline.com's extensive travel database, allowing users to access comprehensive hotel data as part of a broader service that also includes search capabilities for rental cars and flights. The information retrieved can help travelers make informed accommodation decisions while planning their trips through this comprehensive travel booking platform.",
    "required_parameters": [
      {
        "name": "hotel_id",
        "type": "STRING",
        "description": "The PPN Hotel ID identifying the desired property.",
        "default": "700008849"
      }
    ],
    "optional_parameters": [
      {
        "name": "airport_limit",
        "type": "NUMBER",
        "description": "airport_limit",
        "default": ""
      },
      {
        "name": "check_in",
        "type": "STRING",
        "description": "Check In Date (YYYY-MM-DD or MM/DD/YYYY)",
        "default": ""
      },
      {
        "name": "promo",
        "type": "BOOLEAN",
        "description": "Toggle the hotels promo data on and off. By default, promo data is excluded in the response. To include promo data in the response, set promo to 1.",
        "default": true
      },
      {
        "name": "photos",
        "type": "BOOLEAN",
        "description": "Toggles photo data. By default, hotel photo data is excluded in the response. Valid Options: 0 = Off, 1 = On.",
        "default": "1"
      },
      {
        "name": "videos",
        "type": "BOOLEAN",
        "description": "Toggle videos. Valid Options: True or False",
        "default": true
      },
      {
        "name": "guest_score_breakdown",
        "type": "BOOLEAN",
        "description": "Toggle guest score breakdown on and off. Valid Options: True or False",
        "default": true
      },
      {
        "name": "reviews",
        "type": "BOOLEAN",
        "description": "Toggle hotel review data. By default, review data is excluded in the response. Valid Options: 0 = False, 1 = On.",
        "default": "1"
      },
      {
        "name": "city_limit",
        "type": "NUMBER",
        "description": "city_limit",
        "default": ""
      },
      {
        "name": "sid",
        "type": "STRING",
        "description": "Session ID. Random string",
        "default": "iSiX639"
      },
      {
        "name": "important_info",
        "type": "BOOLEAN",
        "description": "Toggles important info. Important info is extra details regarding the specified hotel. By default, important info is excluded in the response. Valid Options: 0 = Off, 1 = On.",
        "default": true
      },
      {
        "name": "recent",
        "type": "BOOLEAN",
        "description": "Toggle recent sales. Valid Options: True, False",
        "default": true
      },
      {
        "name": "poi_limit",
        "type": "NUMBER",
        "description": "poi_limit",
        "default": ""
      },
      {
        "name": "plugins",
        "type": "BOOLEAN",
        "description": "Provides extra information regarding plugins for the specified hotel. To include specific plugin information, include the ID of the plugin as a comma separated value to the plugins parameter.",
        "default": true
      },
      {
        "name": "image_size",
        "type": "STRING",
        "description": "The size of the image returned. Valid Options: small (60px), medium(300 to 312px) or large(500 to 800px)",
        "default": ""
      },
      {
        "name": "id_lookup",
        "type": "BOOLEAN",
        "description": "Allows non-PPN Hotel IDs to be searched in the database. Valid Options: True or False",
        "default": true
      },
      {
        "name": "check_out",
        "type": "STRING",
        "description": "Check In Date (YYYY-MM-DD or MM/DD/YYYY)",
        "default": ""
      },
      {
        "name": "currency",
        "type": "STRING",
        "description": "Requested currency for the results. ISO 4217 format.",
        "default": ""
      },
      {
        "name": "nearby",
        "type": "BOOLEAN",
        "description": "Toggles nearby data. Nearby data is extra information regarding the specified hotel s location. Nearby data can include city_data, airport_data, and poi_category_data. By default, nearby data is excluded from the response. To include nearby data, set nearby to 1. To include city_data within nearby data, include a city_limit parameter to a value greater than 1. To include airport_data within nearby data, include a airport_limit parameter to a value greater than 1. To include poi_category_data within nearby data, include a poi_limit parameter to a value greater than 1.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/details\"\nquerystring = {\"airport_limit\": \"\", \"check_in\": \"\", \"promo\": true, \"photos\": \"1\", \"videos\": true, \"guest_score_breakdown\": true, \"reviews\": \"1\", \"city_limit\": \"\", \"sid\": \"iSiX639\", \"important_info\": true, \"hotel_id\": \"700008849\", \"recent\": true, \"poi_limit\": \"\", \"plugins\": true, \"image_size\": \"\", \"id_lookup\": true, \"check_out\": \"\", \"currency\": \"\", \"nearby\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Hotel details",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The output provides a comprehensive profile for a single, specified hotel. It includes essential details such as the hotel's name, star rating, review scores, and address, as well as operational information like check-in/check-out times. The output also contains geographic coordinates, property type, hotel chain affiliation, and direct URLs to the hotel's page on Priceline, Agoda, and Booking.com, which is useful for booking or further research.",
      "output_format": "The response is a deeply nested JSON object. The core hotel information is found under the path `getHotelHotelDetails.results.hotel_data`. The hotel data itself is in an object with a key like 'hotel_0'. This structure contains further nested objects for address, geographic location (`geo`), and hotel chain details. Some fields, like `id_r`, can be null."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the hotel's latitude from geographic coordinates"
          },
          {
            "name": "lng",
            "description": "Can use the hotel's longitude from geographic coordinates"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the hotel's latitude from geographic coordinates"
          },
          {
            "name": "lng",
            "description": "Can use the hotel's longitude from geographic coordinates"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use the hotel's location/city information"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel photos",
        "connect params": [
          {
            "name": "hotel_ids",
            "description": "Can use the hotel's ID from the source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel reviews",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "Can use the hotel's ID from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Real-Time PNR Status API for Indian Railways",
    "parent tool description": "It is an unofficial PNR Status API that provides real-time information on the status of Indian Railways train reservations. This API is designed for educational purposes only and is not affiliated with Indian Railways in any way.",
    "tool name": "Real-Time PNR Status API for Indian Railways: PNR Status",
    "tool description": "Provides real-time information on the status of Indian Railways train reservations through an unofficial PNR Status API. This service allows users to check current reservation details, including seat assignments, departure times, and journey status for Indian Railways bookings. The API delivers up-to-date tracking information for educational purposes only and is not affiliated with Indian Railways in any official capacity.",
    "required_parameters": [
      {
        "name": "pnr_status",
        "type": "NUMBER",
        "description": "",
        "default": "6217743114"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://real-time-pnr-status-api-for-indian-railways.p.rapidapi.com/indianrail/{pnr_status}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"real-time-pnr-status-api-for-indian-railways.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "PNR Status",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The output provides the real-time status of an Indian Railways train reservation for a specific PNR (Passenger Name Record). This includes current reservation details, such as seat assignments (e.g., coach and berth numbers), train departure and arrival times, and the overall journey status (e.g., confirmed, waiting list, cancelled). This information allows a user to track their train booking.",
      "output_format": "The format is unknown due to a lack of output examples. Given that it is an API providing structured data, the output is likely a JSON object. This object would probably contain various key-value pairs representing the PNR details, such as 'train_number', 'journey_date', and a nested list of 'passengers' with their individual booking statuses."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The train's destination city could be used as a trip planning destination"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "The train's destination city could be used to search for travel options"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "active_mer",
        "type": "STRING",
        "description": "Show hotels with Priceline rates.",
        "default": ""
      },
      {
        "name": "latitude_range_end",
        "type": "STRING",
        "description": "Requires latitude to have value.",
        "default": ""
      },
      {
        "name": "active_smop",
        "type": "STRING",
        "description": "Show hotels with semi opaque rates.",
        "default": ""
      },
      {
        "name": "active_vmer",
        "type": "STRING",
        "description": "Show hotels with vacation merchant rates.",
        "default": ""
      },
      {
        "name": "state_code",
        "type": "STRING",
        "description": "Filter by the state code of the hotel.",
        "default": ""
      },
      {
        "name": "longitude_range_end",
        "type": "STRING",
        "description": "Requires longitude to have value.",
        "default": ""
      },
      {
        "name": "active_bkg",
        "type": "STRING",
        "description": "Show hotels with Booking rates.",
        "default": ""
      },
      {
        "name": "latitude",
        "type": "STRING",
        "description": "Filter by latitude of the hotel.",
        "default": ""
      },
      {
        "name": "hotelid_ppn",
        "type": "STRING",
        "description": "Filter by PPN hotel ID.",
        "default": ""
      },
      {
        "name": "longitude",
        "type": "STRING",
        "description": "Requires longitude to have value.",
        "default": ""
      },
      {
        "name": "property_type_ids",
        "type": "STRING",
        "description": "Filter by property type ids. See the Property Type Filter Guide for more detail.",
        "default": ""
      },
      {
        "name": "cityid_ppn",
        "type": "STRING",
        "description": "Filter by PPN city ID.",
        "default": ""
      },
      {
        "name": "hotel_address",
        "type": "STRING",
        "description": "Filter by address of hotel.",
        "default": ""
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      },
      {
        "name": "language",
        "type": "STRING",
        "description": "Language code: en-US, es-ES, fr-FR, pt-BR",
        "default": "fr-FR"
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      },
      {
        "name": "active_agd",
        "type": "STRING",
        "description": "Show hotels with Agoda rates.",
        "default": ""
      },
      {
        "name": "country_code",
        "type": "STRING",
        "description": "Filter by the country code of the hotel.",
        "default": ""
      },
      {
        "name": "changes_since",
        "type": "STRING",
        "description": "Date/time to filter the hotels that have been updated on or after this date. This will discover the last_changed_date of hotels in inventory (inclusive of the selected date). Date should be in a valid ISO 8601: https://en.wikipedia.org/wiki/ISO_8601 (YYYY-MM-DDThh:mm:ss{UTC_Offset}) format.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadHotels\"\nquerystring = {\"active_mer\": \"\", \"latitude_range_end\": \"\", \"active_smop\": \"\", \"active_vmer\": \"\", \"state_code\": \"\", \"longitude_range_end\": \"\", \"active_bkg\": \"\", \"latitude\": \"\", \"hotelid_ppn\": \"\", \"longitude\": \"\", \"property_type_ids\": \"\", \"cityid_ppn\": \"\", \"hotel_address\": \"\", \"resume_key\": \"\", \"language\": \"fr-FR\", \"limit\": 100, \"active_agd\": \"\", \"country_code\": \"\", \"changes_since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Downalods hotels",
    "tool description": "Downloads a list of hotels based on user-specified criteria such as destination, dates, and preferences. This is part of Priceline.com's platform, which enables users to search for hotels, cars, and flights, leveraging a comprehensive database of travel options to provide accurate and up-to-date information for bookings. The endpoint integrates seamlessly with the broader service to streamline travel planning and reservation processes.",
    "API name": "Downalods hotels",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The provided output examples exclusively show error messages, not successful results. Each example indicates a timeout error from the Priceline service and suggests the user try the request again. The tool is intended to download a list of hotels, but the structure and content of a successful output containing hotel information are not demonstrated in the examples.",
      "output_format": "The provided examples are consistently a JSON object (serialized as a string) with a single key, \"detail\". The value of this key is a string containing the error message. The structure of a successful response, including potential nesting, arrays of hotels, or pagination, is unknown."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "timezone",
        "type": "STRING",
        "description": "The timezone of the airport (e.g. Europe/Berlin)",
        "default": "Europe/Berlin"
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "The ISO 3166-1 alpha-2 code country code to request",
        "default": ""
      },
      {
        "name": "bbox",
        "type": "STRING",
        "description": "A bbox (min Longitude , min Latitude , max Longitude , max Latitude), will restrict results to airports within that box",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airport/search\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airportSearch",
    "tool description": "Retrieves a list of airports based on country, bounding box, or timezone, allowing multiple parameters for precise filtering. This endpoint is part of Flightera's comprehensive service for flight status, on-time performance, and statistics, leveraging a database of 60k airports to ensure accurate and actionable data for flight planning and real-time analytics.",
    "API name": "airportSearch",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The provided output examples are exclusively error messages, which are returned when no search criteria are provided in the API call. A successful output is expected to contain a list of airports matching the specified filters (country, bounding box, or timezone), but its structure and the specific data fields for each airport are not present in the examples. The error message itself contains a contact email for support.",
      "output_format": "The provided examples are JSON objects (serialized as strings) that contain a single key, \"Error\", with a string value detailing the issue. The format of a successful response, which the tool description suggests would be a list of airports, cannot be determined from the given examples. It is likely a JSON array of objects, but this is an assumption."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param": "lat",
            "description": "Can use latitude from airport search results"
          },
          {
            "param": "lng",
            "description": "Can use longitude from airport search results"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param": "lat",
            "description": "Can use latitude from airport search results"
          },
          {
            "param": "lng",
            "description": "Can use longitude from airport search results"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "param": "ident",
            "description": "Can use airport identifier from airport search results"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "param": "ident",
            "description": "Can use airport identifier from airport search results"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportStatistics",
        "connect params": [
          {
            "param": "ident",
            "description": "Can use airport identifier from airport search results"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "param": "latitude",
            "description": "Can use latitude from airport search results"
          },
          {
            "param": "longitude",
            "description": "Can use longitude from airport search results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "atr_time_period",
        "type": "NUMBER",
        "description": "",
        "default": 10
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 20
      },
      {
        "name": "multiplier",
        "type": "NUMBER",
        "description": "",
        "default": 2
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "ma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/keltner\"\nquerystring = {\"atr_time_period\": 10, \"time_period\": 20, \"multiplier\": 2, \"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\", \"series_type\": \"close\", \"ma_type\": \"SMA\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: KELTNER",
    "tool description": "Generates a volatility-based indicator to identify trend changes and accelerations using Keltner Channels. This tool is part of a financial data platform offering real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to analyze market movements with advanced technical indicators.",
    "API name": "KELTNER",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides Keltner Channel indicator data for a given financial symbol over a specified interval. The output includes a time-series of the upper, middle, and lower channel bands. It also returns comprehensive metadata about the requested symbol and the specific parameters used for the Keltner Channel calculation, such as the time period, multiplier, and moving average type.",
      "output_format": "The output is a single JSON object with two main keys: 'meta' and 'values'. The 'meta' key holds a JSON object containing metadata about the symbol and indicator parameters. The 'values' key holds a JSON array of data points, sorted in reverse chronological order. Each data point is an object containing the datetime and the string-formatted values for the 'upper_line', 'middle_line', and 'lower_line'."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Logo",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the KELTNER output metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "WeatherAPI.com",
    "parent tool description": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "tool name": "WeatherAPI.com: Astronomy API",
    "tool description": "Retrieves up-to-date astronomy information including sunrise, sunset, moonrise, moonset, moon phase, and illumination in JSON format. This endpoint is part of WeatherAPI.com, a comprehensive weather and geolocation service that provides extensive data through its managed API platform. Beyond this astronomy data, the service offers weather forecasts, historical weather, future predictions, weather alerts, air quality information, IP lookup capabilities, sports data, and time zone information\u2014all accessible through their free API provider service.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
        "default": "London"
      }
    ],
    "optional_parameters": [
      {
        "name": "dt",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Date",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/astronomy.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Astronomy API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a JSON object containing astronomical data for a specific geographical location. The output includes location details such as name, region, country, and coordinates. The primary information is the astronomical data for the current day, which provides sunrise, sunset, moonrise, and moonset times, as well as the moon's phase and illumination percentage.",
      "output_format": "The output is a single, nested JSON object. It has two main keys: `location` and `astronomy`. The `astronomy` key contains a nested `astro` object which holds the specific data points. The `location.region` field can be an empty string. There is no pagination."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "location.lat"
          },
          {
            "name": "longitude",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "location.lat"
          },
          {
            "name": "longitude",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "location.lat"
          },
          {
            "name": "longitude",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "location.lat"
          },
          {
            "name": "longitude",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,location.lon"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.name"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat, location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,-location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,-location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,-location.lon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "zip",
        "type": "STRING",
        "description": "Zip/post code and country code divided by comma. Please use ISO 3166 country codes",
        "default": "E14,GB"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/geo/1.0/zip\"\nquerystring = {\"zip\": zip}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Coordinates by zip/post code",
    "tool description": "Retrieves geographic coordinates using a zip/postal code. This leverages a proprietary convolutional neural network that processes diverse data sources\u2014including global and local weather models, satellites, radars, and a network of weather stations\u2014to accurately determine location coordinates. By integrating these inputs, it provides precise geographic data to support weather-related analyses, ensuring reliability even in complex or remote regions. The service is optimized for speed, delivering results via light-speed APIs to enable real-time applications.",
    "API name": "Coordinates by zip/post code",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides the geographical details for a specific zip or postal code. This includes the city or area name, the precise latitude and longitude coordinates, and a two-letter country code. The information is primarily used to convert a postal code into geographic coordinates for use in downstream tasks, such as weather forecasting or mapping applications.",
      "output_format": "The output is a single, flat JSON object. The examples are provided as strings but represent a standard key-value object structure. No pagination or cursoring is indicated. It is unknown if fields can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Forecast: RapidApiGetForecastSummaryByCoordinates",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Forecast: RapidApiGetForecastHourlyByCoordinates",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Nearby Stations",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Plant Hardiness Zone: Retrieve the Hardiness Zone",
        "connect params": [
          {
            "name": "zipcode",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "kjoller",
    "parent tool description": "Lyrics for childrens' songs",
    "tool name": "kjoller: Get song by title",
    "tool description": "Retrieves a children's song by searching for its title. This tool accesses a database of lyrics specifically curated for children's songs, providing complete words and verses for popular nursery rhymes, lullabies, and educational songs that are age-appropriate for young audiences. Perfect for parents, teachers, or caregivers looking to introduce children to music or find the exact lyrics to a favorite children's tune.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "title",
        "type": "STRING",
        "description": "",
        "default": "abc"
      }
    ],
    "code": "import requests\n\nurl = \"https://kjoller.p.rapidapi.com/songs?\"\nquerystring = {\"title\": title}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kjoller.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get song by title",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output is a JSON object containing a request status and a data payload. The 'status' key indicates if the query was successful, while the 'data' key holds an array of results. Based on the tool's description, this array is expected to contain song objects with lyrics, words, and verses, though the provided examples are all empty.",
      "output_format": "The output is a JSON object with two keys: 'status' (string) and 'data' (array). The provided examples only show the 'data' array as empty, which likely represents the case where no song is found for the given title. The structure of the objects within the 'data' array for a successful search is not shown."
    },
    "connected tools": [
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term"
          }
        ]
      },
      {
        "tool name": "Shazam: auto-complete",
        "connect params": [
          {
            "name": "term"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Radio World - 75,000+ Worldwide FM Radio stations..",
    "parent tool description": "This is one of the largest collection of FM Radios API from around the world. Listen Updated 79,000+ Radio stations. All the Stations are Updating Daily & Weekly basis, New stations are Adding As soon as possible. At least 100+ Stations Are adding and 1000+ Stations are fixing to this API Weekly (This is minium ratio).",
    "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: getAllQuotes",
    "tool description": "Retrieves a collection of quotes based on specified pagination parameters (limit and page). This endpoint is part of one of the world's largest FM radio APIs, which provides access to over 79,000 radio stations from around the globe. The database is actively maintained with daily and weekly updates, adding at least 100 new stations and fixing approximately 1,000 existing stations weekly, ensuring you have access to the most current and comprehensive radio station information available.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Item limitations per page. (default: 10)",
        "default": "10"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Page number to be displayed. (default: 1)",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php\"\nquerystring = {\"limit\": \"10\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "getAllQuotes",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a paginated list of quotes. Each quote object in the list contains the quote's text, its author, a category, and a unique identifier. The response also includes metadata about the pagination, such as the total number of available quotes, the current page, and the number of results per page.",
      "output_format": "The output is a single JSON object. It contains a top-level key `quotes` which holds a JSON array of quote objects. The API supports pagination, with metadata fields like `limit`, `total_quotes`, and `pages` included in the response."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Geocode - Forward and Reverse",
    "parent tool description": "Forward and reverse geocoding using Google Geocoding API.",
    "tool name": "Geocode - Forward and Reverse: Reverse geocode",
    "tool description": "Retrieves a complete address from a latitude and longitude coordinate pair. This reverse geocoding functionality leverages the Google Geocoding API to convert geographic coordinates into a human-readable address, allowing for precise location identification from raw coordinate data. The service provides comprehensive address components including street names, cities, postal codes, and countries based on Google's extensive global mapping database.",
    "required_parameters": [
      {
        "name": "lng",
        "type": "NUMBER",
        "description": "",
        "default": "-123.0470199"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "",
        "default": "49.2813458"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://geocode-forward-and-reverse.p.rapidapi.com/reverse\"\nquerystring = {\"lng\": lng, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geocode-forward-and-reverse.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Reverse geocode",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool's output provides the primary, human-readable street address corresponding to a given latitude and longitude. It also returns the original coordinate pair within a nested 'location' object for verification and a unique 'place_id' from Google's database. This identifier can be used for subsequent API calls or to disambiguate locations.",
      "output_format": "The output is a single JSON object. It contains a nested object under the 'location' key, which itself contains 'lat' and 'lng' number values. Based on the examples, no fields appear to be nullable."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's location object"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's location object"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's location object"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's location object"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location object"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location object"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's location object"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's location object"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "IEEE Spectrum API",
    "parent tool description": "The IEEE Spectrum News API is a simple HTTP-based API that allows developers and students to access the latest news and articles from the IEEE Spectrum website as well as integrate them as data into their own websites web applications or mobile apps. The API uses \"REST-Like\" operations over HTTP GET requests with parameters Header encoded into the request and its response encoded in JSON format.This API has been created for bringing the latest technology news provided by the  IEEE Spectrum Ne...",
    "tool name": "IEEE Spectrum API: Get the latest 30 News from IEEE Spectrum",
    "tool description": "Returns the latest 30 news articles from IEEE Spectrum as JSON objects containing title, URL, publication date, section, image source, and estimated reading time. This endpoint leverages the IEEE Spectrum News API, a simple HTTP-based REST-like service that enables developers and students to access and integrate current technology news and articles from IEEE Spectrum into their websites, web applications, or mobile apps. The API operates via HTTP GET requests with header-encoded parameters and delivers responses in JSON format, making it easy to incorporate the latest technology news into your projects.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ieee-spectrum-api.p.rapidapi.com/api\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ieee-spectrum-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get the latest 30 News from IEEE Spectrum",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of the 30 most recent news articles from IEEE Spectrum. Each article is represented as a JSON object containing its title, sub-headline, URL, publication date, relevant sections, an image source, and estimated reading time. This information is designed for developers to integrate and display up-to-date technology news in their own applications or websites.",
      "output_format": "The output is a single JSON array containing 30 JSON objects. Each object represents a news article and has a flat structure, with the exception of the 'newsSections' key which contains an array of strings. There is no pagination, as the tool is designed to return a fixed number of recent articles."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or keywords from IEEE Spectrum articles to search for related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use technology-related terms from IEEE Spectrum articles to find movie news about tech topics"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use titles or keywords from IEEE Spectrum articles to search for related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Ikea API",
    "parent tool description": "This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.",
    "tool name": "Ikea API: Countries",
    "tool description": "Retrieves a complete list of all countries and languages supported by the unofficial Ikea API. This REST API provides developers with comprehensive access to Ikea's product catalog and search functionality through a scraper-based solution, allowing you to determine which regional markets and language options are available before making other API calls for product information and search capabilities.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ikea-api.p.rapidapi.com/countries\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ikea-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Countries",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a dictionary of all countries supported by the Ikea API, keyed by a two-letter country code. Each entry contains the country's name and a list of its regional websites. For each website, the output specifies the URL, the full language name, and the corresponding language code. This data allows developers to determine which regional markets and languages are available for use in other API calls.",
      "output_format": "The output is a single, non-paginated JSON object. The keys of this object are two-letter country codes ('ae', 'ca', etc.). The values are nested objects that include an array named 'sites', which in turn contains objects detailing each language-specific site for that country."
    },
    "connected tools": [
      {
        "tool name": "Asos: countries/list",
        "connect params": [
          {
            "param_name": "lang",
            "description": "The country data from Ikea API contains language codes that could be used to set the appropriate language for Asos API requests"
          }
        ]
      },
      {
        "tool name": "Asos: v2/auto-complete",
        "connect params": [
          {
            "param_name": "country",
            "description": "The two-letter country codes from Ikea API can be used to specify the country for Asos auto-complete"
          },
          {
            "param_name": "lang",
            "description": "The language codes from Ikea API can be used to set the appropriate language for Asos requests"
          }
        ]
      },
      {
        "tool name": "Asos: categories/list",
        "connect params": [
          {
            "param_name": "country",
            "description": "The two-letter country codes from Ikea API can be used to specify the country for Asos category listings"
          },
          {
            "param_name": "lang",
            "description": "The language codes from Ikea API can be used to set the appropriate language for Asos requests"
          }
        ]
      },
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param_name": "domain",
            "description": "The two-letter country codes from Ikea API can be used to specify the Amazon domain/region"
          }
        ]
      },
      {
        "tool name": "Lazada DataHub: Lazada - Item Search",
        "connect params": [
          {
            "param_name": "region",
            "description": "The two-letter country codes from Ikea API (for supported Southeast Asian countries) can be used to set the region for Lazada searches"
          },
          {
            "param_name": "locale",
            "description": "The language codes from Ikea API can be used to set the appropriate locale for Lazada"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/v2/detail (Deprecating)",
    "tool description": "Retrieves detailed information about a specific product, providing comprehensive data about its features, specifications, and availability. This API connects to Wayfair.com's extensive product database, allowing you to access the same complete product information that appears on the retail website, including categories, pricing, dimensions, materials, and other product attributes. The service helps developers and businesses integrate Wayfair's product catalog into their applications or systems with accurate and up-to-date product details.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/v2/detail\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/v2/detail (Deprecating)",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a detailed object for a specific Wayfair product. A successful response contains comprehensive product attributes, such as pricing, sale status, available quantity, and image details. It also includes aggregated customer review data and a list of individual customer reviews, mirroring the information on a retail product page.",
      "output_format": "The output is a single JSON object. All data is nested under a top-level `data` key, which contains a `product` object. This `product` object can be `null` if the product is not found. In case of an error, a top-level `errors` array will be present, and the `data` object may contain partial information. The structure is deeply nested with arrays for lists like images and reviews."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BestBuy Product Data",
    "parent tool description": "BestBuy Product Data API\nContact me at: muktheeswaran.m@gmail.com for builing custom spiders or custom requests.",
    "tool name": "BestBuy Product Data: BestBuyProductData",
    "tool description": "Searches for products on BestBuy using a keyword and page number parameter, allowing you to find specific items like 'iphone', 'ps5', or 'sony tv'. This BestBuy Product Data API retrieves organized product information from BestBuy's catalog, with pagination support where page numbers start at 1 (maximum page depends on available product quantity). The API provides structured access to BestBuy's extensive inventory, enabling efficient product discovery and comparison for applications, research, or shopping assistance.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "iphone"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://bestbuy-product-data.p.rapidapi.com/bestbuy/\"\nquerystring = {\"keyword\": keyword, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bestbuy-product-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "BestBuyProductData",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a list of product data from BestBuy based on a search keyword. Each product entry contains detailed information such as title, price, rating, model number, and URLs for the product and its image. In cases where no products are found, the tool returns an error object with an explanatory message.",
      "output_format": "The primary output is a JSON array where each object represents a single product. In an error state, the output is a JSON object with a single key, \"Error\", containing a descriptive string. Several fields within the product objects, such as 'color', 'offer_percent', and 'regular_price', can be null or contain placeholder text like 'Not Given'. The tool supports pagination as described in its documentation."
    },
    "connected tools": [
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param_name": "asin",
            "description": "Could use model number from BestBuy product data to search for the same product on Amazon"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Could use product title from BestBuy data to search for similar products on Zappos"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "German Police and Crime News Live",
    "parent tool description": "An API showing all the latest Police, Crime, Accident etc. News in Germany",
    "tool name": "German Police and Crime News Live: Get all Police News",
    "tool description": "Retrieves the latest news about police activities, crimes, accidents, and similar incidents specifically from Germany. This API aggregates and delivers current public safety and emergency-related news content from across German sources, providing up-to-date information on law enforcement operations, criminal incidents, traffic accidents, and other public safety events occurring throughout the country.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://german-police-and-crime-news-live.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"german-police-and-crime-news-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all Police News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of news articles related to police activities, crime, and public safety in Germany. Each article in the list includes a title, a URL to the full story, and the name of the news source. This allows users to get a summary of and links to current public safety news from various German media outlets.",
      "output_format": "The output is a JSON-formatted string that represents a top-level array of objects. Each object corresponds to a single news article and contains three string fields: 'title', 'url', and 'source'. Some 'title' fields may contain extra whitespace or newline characters."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use titles from German police news articles as search terms to find related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for movie news related to crime stories from German police news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use titles or key terms from German police news as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/avgprice\"\nquerystring = {\"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: AVGPRICE",
    "tool description": "Calculates the average price using the formula (open + high + low + close) / 4. This endpoint is part of a financial data platform offering real-time and historical data for stocks, forex, crypto, ETFs, and indices, empowering developers to access comprehensive market insights for analysis and application development.",
    "API name": "AVGPRICE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides historical time-series data for the average price of a financial instrument, such as a stock, forex pair, or cryptocurrency. The output consists of metadata about the requested symbol and interval, and a list of data points. Each data point includes a specific datetime and the corresponding average price, calculated as (open + high + low + close) / 4, for that period.",
      "output_format": "The output is a single JSON object containing two main keys: `meta` and `values`. `meta` is an object holding metadata about the query, like the symbol, interval, and currency. `values` is a JSON array of objects, sorted in reverse chronological order. Each object in the array represents a single time period and contains a `datetime` (string) and an `avgprice` (a string-encoded number)."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: ADD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for ADD calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DIV",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for DIV calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MULT",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for MULT calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUB",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for SUB calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CORREL",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for correlation analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BETA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for beta calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for SMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for EMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: WMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for WMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for RSI calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for MACD calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for Bollinger Bands calculations"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hearthstone",
    "parent tool description": "This API provides cards information for Hearthstone",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "page",
        "type": "STRING",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://hearthstone11.p.rapidapi.com/cards\"\nquerystring = {\"page\": page, \"pageSize\": pagesize}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"hearthstone11.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Hearthstone: Get Cards",
    "tool description": "Retrieves a comprehensive list of all Hearthstone cards. This API provides card information for Hearthstone, drawing from a detailed database of every available card to ensure accuracy and completeness, enabling developers to access up-to-date and structured card data for integration into applications or analyses.",
    "API name": "Get Cards",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output is a paginated list of Hearthstone cards. The main body of the response contains a list of card objects, each with comprehensive details like name, mana cost, text, rarity, class, type, and card set. The output also includes metadata such as the total card count and page information, making it suitable for applications that need to process or display a complete, structured database of Hearthstone cards.",
      "output_format": "The output is a JSON object. The top-level object contains a key named \"cards\", which holds a JSON array of individual card objects. These card objects are deeply nested, containing other objects (e.g., `rarity`, `class`, `cardSet`) and arrays (e.g., `keywords`). The output includes pagination metadata fields like `cardCount`, `pageCount`, and `page`."
    },
    "connected tools": [
      {
        "tool name": "Hearthstone: Get Card By Slug",
        "connect params": [
          {
            "name": "slug",
            "description": "The slug can be extracted from the card objects in the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 14
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/atr\"\nquerystring = {\"interval\": \"1min\", \"time_period\": 14, \"symbol\": \"AAPL\", \"outputsize\": 30, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: ATR",
    "tool description": "Calculates the Average True Range (ATR) to measure market volatility by analyzing high, low, and close prices over a specified time period. This endpoint leverages the parent tool's financial data API, which provides real-time and historical data for stocks, forex, crypto, ETFs, and indices, enabling developers to assess price fluctuations and market conditions with precision.",
    "API name": "ATR",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns time-series data for the Average True Range (ATR), a technical indicator used to measure market volatility for a given financial symbol. The output includes metadata about the symbol (e.g., GOOGL, EUR/USD), the time interval, and the indicator parameters. The core data is a list of ATR values corresponding to specific datetimes, allowing users to analyze historical price volatility.",
      "output_format": "The output is a single JSON object with two top-level keys: `meta` and `values`. The `meta` key holds a JSON object with metadata about the financial instrument and the query. The `values` key holds a JSON array of data points, where each point is an object containing a `datetime` (string) and its corresponding `atr` value (string-encoded number). The array of values is sorted in reverse chronological order."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The ATR output contains symbol metadata that can be used to query the same symbol for Bollinger Bands"
          }
        ]
      },
      {
        "tool name": "Twelve Data: KELTNER",
        "connect params": [
          {
            "name": "symbol",
            "description": "The ATR output contains symbol metadata that can be used to query the same symbol for Keltner Channels"
          },
          {
            "name": "atr_time_period",
            "description": "The ATR values from the source tool can inform the appropriate ATR time period parameter"
          }
        ]
      },
      {
        "tool name": "Twelve Data: NATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "The ATR output contains symbol metadata that can be used to query the same symbol for NATR"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "The ATR output contains symbol metadata that can be used to query the same symbol for SuperTrend indicator"
          },
          {
            "name": "multiplier",
            "description": "The ATR values can help determine an appropriate multiplier for the SuperTrend calculation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SAR",
        "connect params": [
          {
            "name": "symbol",
            "description": "The ATR output contains symbol metadata that can be used to query the same symbol for Parabolic SAR"
          },
          {
            "name": "acceleration",
            "description": "The ATR values can inform the appropriate acceleration parameter for SAR"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The ATR output contains symbol metadata that can be used to query the same symbol for time series data"
          },
          {
            "name": "interval",
            "description": "The ATR output contains interval information that can be used for the time series query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Instant Cameroon News",
    "parent tool description": "Instantly provide the latest news and the latest information on Cameroon. It is the easier way to  get latest news about Cameroon.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "rank",
        "type": "STRING",
        "description": "",
        "default": ""
      },
      {
        "name": "page",
        "type": "STRING",
        "description": "",
        "default": ""
      },
      {
        "name": "search",
        "type": "STRING",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://instant-cameroon-news.p.rapidapi.com/camerounnews\"\nquerystring = {\"rank\": \"\", \"page\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instant-cameroon-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Instant Cameroon News: Retrieve data",
    "tool description": "Retrieves news and information about Cameroon using parameters like page, search key, and data range. This endpoint is part of a service that delivers the latest updates on Cameroon, leveraging a curated database of current events to provide timely and relevant information, making it easier to access real-time insights about the country's developments.",
    "API name": "Retrieve data",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a paginated list of news or information about Cameroon. The response includes a 'data' array, which is expected to contain objects representing individual news articles or events. The output also contains metadata fields for managing pagination, such as the total number of available results, the number of results returned, and the active page number.",
      "output_format": "The output is a JSON object with a single root key, 'result'. This key contains an object with pagination metadata and a 'data' array for the results. The 'activepage' field has an inconsistent type, appearing as both a string and an integer in the examples. All provided examples show an empty 'data' array, so the structure of the objects within that array is unknown."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use keywords or topics from Cameroon news articles"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Could use topics or categories from Cameroon news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for movie news related to Cameroon topics"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use keywords or topics from Cameroon news"
          }
        ]
      },
      {
        "tool name": "Medium: /stories/{topic}",
        "connect params": [
          {
            "name": "topic",
            "description": "Could use topics or categories from Cameroon news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Radical English meaning",
    "tool description": "Provides access to individual Advanced Search URL parameters for testing purposes, allowing parameters to be combined as needed for customized queries. This endpoint is part of the free Kanji alive API, which offers comprehensive CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files through a web application interface.",
    "required_parameters": [
      {
        "name": "rem",
        "type": "STRING",
        "description": "Radical's meaning in English",
        "default": "see"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"rem\": rem}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Radical English meaning",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters that are associated with a specific radical. For each kanji found, the output provides the character and its total stroke count. It also includes detailed information about the kanji's primary radical, such as the radical's character, its stroke count, and an order identifier.",
      "output_format": "The output is a JSON array of objects. Each object contains two nested JSON objects: 'kanji' and 'radical'. The 'kanji' object details the specific character and its stroke count, while the 'radical' object provides information about the associated radical. Some radical characters are represented using private use area Unicode characters (e.g., '\\ue720')."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "The source tool provides stroke count information for kanji characters, which can be used to search for kanji with specific stroke counts"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "The source tool provides radical stroke count information, which can be used to search for kanji with radicals of specific stroke counts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Alpha Vantage",
    "parent tool description": "The simplest and most effective way to receive stock, ETF, forex, technical indicators, and cryptocurrency data.  Constantly ranked as a leading API provider for ease of use, accuracy, and price. [See the documentation](https://www.alphavantage.co/documentation/) and [read more](https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631) on the market data industry.  [Start now for free](https://www.alphavantage.co/support/#api-key).",
    "required_parameters": [
      {
        "name": "function",
        "type": "STRING",
        "description": "The time series of your choice.",
        "default": "FX_INTRADAY"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Time interval between two consecutive data points in the time series. The following values are supported: 1min, 5min, 15min, 30min, 60min",
        "default": "5min"
      },
      {
        "name": "to_symbol",
        "type": "STRING",
        "description": "A three-letter symbol from the forex currency list. For example: to_symbol=USD",
        "default": "USD"
      },
      {
        "name": "from_symbol",
        "type": "STRING",
        "description": "A three-letter symbol from the forex currency list. For example: from_symbol=EUR",
        "default": "EUR"
      }
    ],
    "optional_parameters": [
      {
        "name": "datatype",
        "type": "STRING",
        "description": "By default, datatype=json. Strings json and csv are accepted with the following specifications: json returns the intraday time series in JSON format; csv returns the time series as a CSV (comma separated value) file.",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "STRING",
        "description": "By default, outputsize=compact. Strings compact and full are accepted with the following specifications: compact returns only the latest 100 data points in the intraday time series; full returns the full-length intraday time series. The \"compact\" option is recommended if you would like to reduce the data size of each API call.",
        "default": "compact"
      }
    ],
    "code": "import requests\n\nurl = \"https://alpha-vantage.p.rapidapi.com/query\"\nquerystring = {\"function\": function, \"interval\": interval, \"datatype\": datatype, \"to_symbol\": to_symbol, \"from_symbol\": from_symbol, \"outputsize\": outputsize}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"alpha-vantage.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Alpha Vantage: FX_INTRADAY",
    "tool description": "This endpoint retrieves real-time intraday time series data (timestamp, open, high, low, close) for a specified FX currency pair. Part of a leading API provider's comprehensive financial data service, it leverages real-time market feeds and extensive historical records to deliver accurate stock, ETF, forex, and cryptocurrency data, empowering users with timely insights for informed trading and analysis.",
    "API name": "FX_INTRADAY",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool provides intraday time series data for a specified foreign exchange (FX) currency pair. The output contains metadata, including the currency pair, data interval, and last refresh time. The primary content is a time series of open, high, low, and close (OHLC) prices for specific timestamps, intended for financial analysis and tracking short-term market movements.",
      "output_format": "The output is a JSON object with two primary keys: 'Meta Data' and a dynamically named key for the time series data (e.g., 'Time Series FX (15min)'). The time series is a nested object where each key is a timestamp string (YYYY-MM-DD HH:MM:SS) and its value is an object containing the 'open', 'high', 'low', and 'close' prices for that interval. All numerical price values are returned as strings. No pagination or cursoring is evident in the examples."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The FX currency pair from the source output can be used as the symbol input"
          },
          {
            "name": "interval",
            "description": "The interval from the source output metadata can be used"
          },
          {
            "name": "series_type",
            "description": "Can use open, high, low, or close values from the source output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_DAILY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "Can extract the base currency from the FX pair in source output"
          },
          {
            "name": "to_symbol",
            "description": "Can extract the quote currency from the FX pair in source output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_WEEKLY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "Can extract the base currency from the FX pair in source output"
          },
          {
            "name": "to_symbol",
            "description": "Can extract the quote currency from the FX pair in source output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_MONTHLY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "Can extract the base currency from the FX pair in source output"
          },
          {
            "name": "to_symbol",
            "description": "Can extract the quote currency from the FX pair in source output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The FX currency pair from the source output can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the source output metadata can be mapped to Twelve Data's interval format"
          }
        ]
      },
      {
        "tool name": "Twelve Data: VWAP",
        "connect params": [
          {
            "name": "symbol",
            "description": "The FX currency pair from the source output can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the source output metadata can be mapped to Twelve Data's interval format"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The FX currency pair from the source output can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the source output metadata can be mapped to Twelve Data's interval format"
          },
          {
            "name": "series_type",
            "description": "Can use open, high, low, or close values from the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "required_parameters": [
      {
        "name": "page_id",
        "type": "string",
        "description": "",
        "default": "main"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/news/latest/main\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "BizToc: News / Latest / Page",
    "tool description": "Retrieves the latest news stories in chronological order, filtered by {page_id}, utilizing the Official BizToc.com API\u2014The Web's most comprehensive hub for business & finance news\u2014to deliver structured, up-to-date information tailored to specific topics or regions.",
    "API name": "News / Latest / Page",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of recent news articles. Each article in the list is represented as an object containing its title, a body or preview text, the source domain, creation timestamp, a URL to the full story, and associated tags. This output provides a structured feed of the latest business and finance news.",
      "output_format": "The output is a JSON array of objects. Each object corresponds to a single news article. The array can be empty if no news is found. Some fields within an article object, like `img` or `body_preview`, can be null or empty. The `img` field, when present, is a nested object containing URLs for various image sizes. The tool's description implies pagination is handled via the `{page_id}` parameter."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or keywords from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or keywords from business news articles related to entertainment/movies"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use titles or keywords from news articles as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/midprice\"\nquerystring = {\"outputsize\": 30, \"time_period\": 9, \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MIDPRICE",
    "tool description": "Calculates the midpoint price over a period by averaging the highest high and lowest low, using the parent tool's real-time and historical financial data (stocks, forex, crypto, ETFs, indices, etc.) to provide accurate metrics for market analysis. This endpoint leverages the parent tool's extensive database of financial instruments and instant access capabilities to deliver precise price insights, enabling developers to integrate reliable financial calculations into applications for informed decision-making.",
    "API name": "MIDPRICE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time series data for the midpoint price of a specified financial instrument (e.g., stocks, forex, crypto). The output consists of metadata describing the instrument, exchange, and time interval, along with a chronological list of data points. Each data point includes a timestamp and the calculated midpoint price for that period, which is the average of the highest high and lowest low.",
      "output_format": "The output is a single JSON object with two main keys: 'meta' and 'values'. 'meta' is an object containing metadata about the query. 'values' is an array of JSON objects, where each object represents a time-stamped data point containing a 'datetime' (string) and a 'midprice' (string representing a float). The format of the 'datetime' string varies based on the time interval (e.g., 'YYYY-MM-DD' for daily, 'YYYY-MM-DD HH:MM:SS' for hourly)."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output provides financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CCI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The MIDPRICE output contains financial instrument data that can be used as a symbol input"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ceil\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: CEIL",
    "tool description": "Applies the mathematical ceil function to transform input data. This is part of a financial data platform that provides real-time and historical data for stocks, forex, crypto, ETFs, and indices, enabling developers to access comprehensive market information. The ceil function is used to round up numerical values, enhancing precision in financial calculations and data analysis.",
    "API name": "CEIL",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time series data for a financial instrument (stock, forex, or crypto) where the mathematical ceiling function has been applied. Each data point in the series consists of a timestamp and the corresponding 'ceil' value, which is the original data point (likely the closing price) rounded up to the next integer. The output also includes comprehensive metadata about the financial symbol, the query interval, and the specific indicator used.",
      "output_format": "The output is a single JSON object with top-level keys: `meta`, `values`, and `status`. The `meta` key contains an object with metadata about the request. The `values` key contains a JSON array of objects, representing the time series data, sorted in reverse chronological order. Each object in this array has a `datetime` string and a `ceil` value, which is also represented as a string. No pagination or cursoring is evident in the examples."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CEIL output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CEIL output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CEIL output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CEIL output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CEIL output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CEIL output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CEIL output contains financial instrument data that can be used as a symbol input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CEIL output contains financial instrument data that can be used as a symbol input"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Realtime Stock Data",
    "parent tool description": "The worlds cheapest Realtime stock data provider",
    "required_parameters": [
      {
        "name": "symb",
        "type": "string",
        "description": "",
        "default": "aapl"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://realtime-stock-data.p.rapidapi.com/asset-profile/{symb}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"realtime-stock-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Realtime Stock Data: asset-profile",
    "tool description": "Retrieves detailed company information, including physical address, contact details, and employee count. This is part of the world's cheapest real-time stock data provider, which leverages comprehensive company profiles to enhance market analysis and investment decisions by integrating critical business data with financial insights.",
    "API name": "asset-profile",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a detailed profile for a specific company, sourced from the Manwil Zaki Realtime Stock Data API. The profile includes the company's full physical address, contact information (phone and website), and key operational details like its industry and the total number of full-time employees. This information is intended to be used for market analysis and investment research by providing fundamental business context.",
      "output_format": "The output is a string-serialized JSON object containing two top-level keys: 'source' and 'data'. The 'data' key holds a nested JSON object with the company's profile information. Based on the examples, all fields within the nested 'data' object appear to be consistently present and non-null. The output represents a single company record, with no indication of pagination."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Search Endpoint",
        "connect params": [
          {
            "name": "keywords",
            "description": "The company name from the profile can be used as a search keyword"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: search",
        "connect params": [
          {
            "name": "symbol",
            "description": "The company name from the profile can be used as a search term"
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: finance-analytics",
        "connect params": [
          {
            "name": "symb",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: earnings-trend",
        "connect params": [
          {
            "name": "symbl",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: earnings",
        "connect params": [
          {
            "name": "symb",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "If the profile contains a stock symbol, it can be used here"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Miza",
    "parent tool description": "A multipurpose API that includes many image, video, and audio operations. Please see https://ko-fi.com/mizabot if you'd like premium features on the Discord bot itself!",
    "tool name": "Miza: Song concatenation",
    "tool description": "Joins one or more audio or video files into a single file, accepting input URLs via query parameters ('u1', 'u2', etc.) which can include playlists for batch processing. This multipurpose API supports most video and audio formats for output (see https://mizabot.xyz/downloader for format list and testing), though processing time is longer than simple downloads as it must complete all conversions before streaming. The service redirects to a temporary but reusable download link for the final file. This endpoint is part of a comprehensive media manipulation API that offers numerous image, video, and audio operations, with premium features available for the associated Discord bot.",
    "required_parameters": [
      {
        "name": "u1",
        "type": "STRING",
        "description": "",
        "default": "https://www.youtube.com/watch?v=0zXcC-haBFc"
      }
    ],
    "optional_parameters": [
      {
        "name": "u3",
        "type": "STRING",
        "description": "",
        "default": "https://cdn.discordapp.com/attachments/688253918890688521/829266927003107338/paladin.ogg"
      },
      {
        "name": "fmt",
        "type": "STRING",
        "description": "",
        "default": "ogg"
      },
      {
        "name": "u2",
        "type": "STRING",
        "description": "",
        "default": "http://i.mizabot.xyz/d/Bc5SdZDrKg"
      }
    ],
    "code": "import requests\n\nurl = \"https://miza.p.rapidapi.com/ytdlc\"\nquerystring = {\"u3\": u3, \"u1\": u1, \"fmt\": fmt, \"u2\": u2}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"miza.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Song concatenation",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's primary output is a single audio or video file, created by joining the media from the provided input URLs. This resulting file is made available via a redirect to a temporary download link and is intended for direct use, playback, or storage. In the event of an error, such as an invalid endpoint, the API returns a JSON object containing a human-readable error message.",
      "output_format": "A successful API call results in an HTTP redirect. Following this redirect leads to the raw binary data of the concatenated media file (e.g., audio/mpeg, video/mp4). Error responses are not binary but are structured as simple JSON objects containing a 'message' key. The output is a single file, so concepts like pagination or nesting do not apply."
    },
    "connected tools": [
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Can use the concatenated file URL as input for further trimming or extending"
          }
        ]
      },
      {
        "tool name": "Miza: Retrieve file",
        "connect params": [
          {
            "name": "path",
            "description": "Can use the path from the concatenated file URL to retrieve it again"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dictionary",
    "parent tool description": "Dictionaries API gives you access to our world-renowned dictionary data, including definitions, translations, synonyms, and audio pronunciations.",
    "tool name": "Dictionary: wordSearchTurkish",
    "tool description": "Retrieves the meaning of Turkish words from an authoritative dictionary. This service uses the comprehensive Dictionaries API, which provides access to world-renowned dictionary data, allowing you to look up not only definitions but also translations, synonyms, and audio pronunciations of Turkish terms.",
    "required_parameters": [
      {
        "name": "query",
        "type": "STRING",
        "description": "Enter word",
        "default": "kalem"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dictionary35.p.rapidapi.com/wordSearchTurkish\"\nquerystring = {\"query\": query}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dictionary35.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "wordSearchTurkish",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "Provides dictionary information for Turkish words. For a successful query, the output returns a list of one or more meanings for the searched term. Each meaning includes a Turkish definition ('anlam'), part of speech ('ozellik'), and may include usage examples ('ornek') with author attribution. In case of an error, such as an invalid API key, the output provides an error message.",
      "output_format": "The output is a JSON object. A top-level boolean key 'success' dictates the response structure. If true, a 'result' key contains an array of dictionary entries. Each entry is a deeply nested object where an array named 'kelime' holds the different meanings. The 'ornek' (examples) and 'ozellik' (properties) fields are arrays and can be empty. If 'success' is false, the object contains a 'message' key with an error string."
    },
    "connected tools": [
      {
        "tool name": "Urban Dictionary: Define a Word / Search",
        "connect params": [
          {
            "param_name": "term",
            "description": "The Turkish word could be searched in Urban Dictionary for slang or colloquial meanings"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "DEI",
    "parent tool description": "The Diversity, Equity, and Inclusion (DEI) API offers the learning resources, conferences, stories and other information.",
    "tool name": "DEI: GetSamples",
    "tool description": "Retrieves success stories related to Diversity, Equity, and Inclusion (DEI) initiatives. This endpoint provides access to a collection of real-world examples and case studies showcasing successful DEI implementations, drawing from a comprehensive database of learning resources, conferences, and informational content focused on promoting diversity, equity, and inclusion across organizations and industries.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dei2.p.rapidapi.com/samples/page/{page}/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dei2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "GetSamples",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool provides a paginated list of success stories, case studies, and other content related to Diversity, Equity, and Inclusion (DEI). Each entry includes a title, excerpt, publication date, media type (e.g., video), and various URLs (source, web, original). This information is designed to offer real-world examples of successful DEI implementations from different providers like TIME and Fortune.",
      "output_format": "The successful output is a JSON object. This object contains a `value` key, which holds an array of sample objects. The response supports pagination, indicated by a top-level `page` key. In case of an error or if a resource is not found, the tool can return an HTML 404 error page instead of a JSON object."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "ma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "sd",
        "type": "NUMBER",
        "description": "",
        "default": 2
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 20
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/percent_b\"\nquerystring = {\"ma_type\": \"SMA\", \"sd\": 2, \"series_type\": \"close\", \"time_period\": 20, \"outputsize\": 30, \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: PERCENT_B",
    "tool description": "Calculates the %B Indicator (PERCENT_B) to determine an asset's price position relative to upper and lower Bollinger Bands. This endpoint is part of a financial data platform offering real-time and historical data for stocks, forex, crypto, ETFs, and indices, enabling developers to analyze market trends and make informed decisions. It leverages comprehensive financial datasets to provide actionable insights into price volatility and momentum, enhancing technical analysis capabilities for traders and investors.",
    "API name": "PERCENT_B",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time-series data for the %B technical indicator, which quantifies a financial asset's price in relation to its upper and lower Bollinger Bands. Each output consists of a list of data points, with each point containing a timestamp and the corresponding %B value. The response also includes comprehensive metadata about the asset (e.g., symbol, interval) and the specific parameters used for the indicator calculation, which is valuable for technical analysis of market volatility and momentum.",
      "output_format": "The output is a single JSON object with two primary keys: `meta` and `values`. The `meta` key holds an object containing metadata about the query and the instrument. The `values` key holds a JSON array of objects, where each object represents a single time-series data point with a `datetime` (string) and a `percent_b` (string representing a float) value. The provided examples appear to be truncated, suggesting a longer list of values may be returned by the actual API. No pagination or cursoring is evident in the examples."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CCI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ICHIMOKU",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from PERCENT_B output can be used"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dice Roll Simulator",
    "parent tool description": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.",
    "tool name": "Dice Roll Simulator: Custom die",
    "tool description": "Rolls one die with any number of sides, allowing you to specify custom dice beyond the standard 6-sided variety. This endpoint is part of the ultimate dice rolling API that enables users to simulate various dice configurations for gaming, probability exercises, or random number generation needs. Whether you need a d4, d20, or even custom dice with hundreds of sides, this tool provides a simple way to get truly random rolls without the physical limitations of real dice.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "sides",
        "type": "NUMBER",
        "description": "",
        "default": "8"
      }
    ],
    "code": "import requests\n\nurl = \"https://dice-roll-simulator.p.rapidapi.com/custom-die\"\nquerystring = {\"sides\": sides}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dice-roll-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Custom die",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides the numerical result of a single die roll. It returns a single integer, representing the outcome of rolling one die with a user-specified number of sides. This information is intended for use in gaming, probability exercises, or any application needing a random integer within a specific range.",
      "output_format": "The output is a simple, non-nested JSON object. It contains a single key, \"result\", whose value is an integer representing the die roll's outcome. Based on the examples, the output is not an array and the fields are not nullable."
    },
    "connected tools": [
      {
        "tool name": "Dice Roll Simulator: Custom dice",
        "connect params": [
          {
            "name": "sides",
            "description": "The number of sides on each die could be determined by a previous die roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "sides",
            "description": "The number of sides on each die could be determined by a previous die roll"
          },
          {
            "name": "rolls",
            "description": "The number of rolls to perform could be determined by a previous die roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice",
        "connect params": [
          {
            "name": "dice",
            "description": "The number of dice to roll could be determined by a previous die roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "The number of dice to roll could be determined by a previous die roll"
          },
          {
            "name": "rolls",
            "description": "The number of rolls to perform could be determined by a previous die roll"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-common-info",
    "tool description": "Retrieves common information services for a specific product, providing detailed data about the requested item. This API functions as part of Wayfair's comprehensive information system, allowing users to access the same product details available on wayfair.com, including specifications, features, and related information. The service connects to Wayfair's extensive product database, enabling queries that return structured information similar to what shoppers would find while browsing the retail website.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-common-info\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-common-info",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns detailed information for a specific Wayfair product, identified by its SKU. The output includes product identifiers (name, SKU, URL), manufacturer details, customer-generated content like reviews and ratings, and inventory status. This information mirrors what a customer would see on the product's page on the Wayfair website and can be used to answer specific questions about a product's features, popularity, or availability.",
      "output_format": "The output is a JSON object. A successful response contains a top-level 'data' key, which nests a 'product' object with all the detailed information. An unsuccessful query returns a top-level 'errors' key containing an array of error objects. Many fields within the 'product' object can be null, empty arrays, or contain default zero values if the corresponding data is unavailable for the given product."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get home services for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to find similar items to the product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get warranty information for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to retrieve images of the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get financing options for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to retrieve reviews for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get detailed information about the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get pricing information for the same product"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "slow_k_period",
        "type": "NUMBER",
        "description": "",
        "default": 1
      },
      {
        "name": "slow_kma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "slow_dma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "fast_k_period",
        "type": "NUMBER",
        "description": "",
        "default": 14
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "slow_d_period",
        "type": "NUMBER",
        "description": "",
        "default": 3
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stoch\"\nquerystring = {\"slow_k_period\": 1, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"slow_kma_type\": \"SMA\", \"slow_dma_type\": \"SMA\", \"fast_k_period\": 14, \"format\": \"json\", \"slow_d_period\": 3, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: STOCH",
    "tool description": "Generates a stochastic oscillator analysis to assess price trend strength using real-time and historical financial data (stocks, forex, crypto, ETFs, indices) from the parent tool's API. This technical indicator leverages algorithmic calculations to identify overbought or oversold market conditions, helping traders make informed decisions. The parent tool provides developers with instant access to comprehensive market data, enabling integration of advanced financial analytics into applications.",
    "API name": "STOCH",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool output provides a time-series of Stochastic Oscillator data for a specified financial instrument (like a stock, forex, or cryptocurrency). The data includes metadata about the instrument and the indicator's parameters, followed by a list of values containing the datetime, slow %K line, and slow %D line. This output is used in technical analysis to identify overbought or oversold conditions and potential trend reversals.",
      "output_format": "The output is a single JSON object with two top-level keys: 'meta' and 'values'. The 'meta' key holds an object with metadata about the query, while the 'values' key holds a JSON array of data points. Each data point is an object containing a 'datetime' string and the corresponding 'slow_k' and 'slow_d' values, which are also represented as strings."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The STOCH output contains symbol information in the meta data that can be used to query the same symbol"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with RSI"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with MACD"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with Bollinger Bands"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to get price data for the same asset"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CCI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with CCI"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with ADX"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/earnings-history\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/earnings-history/{stock}",
    "tool description": "Retrieves earnings history for a specific stock, providing detailed records of past financial performance. This endpoint leverages the Mboum Finance Official API's comprehensive financial data infrastructure, accessing structured datasets from sources like SEC filings and market databases to deliver accurate, granular earnings information. It enables users to analyze historical revenue, profit margins, and other key metrics, supporting informed investment decisions and financial research within a broader toolset that includes stocks, options, ETFs, and market news.",
    "API name": "stock/earnings-history/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool retrieves historical quarterly earnings data for a specific stock. It provides a list of the last four quarters' earnings reports, including the actual and estimated Earnings Per Share (EPS), the difference between them, and the surprise percentage. This information allows users to analyze a company's recent financial performance against market expectations, aiding in investment research.",
      "output_format": "The output is a single JSON object. The core information is located within an array at `body.history`. Each object in this array represents a single quarter's earnings and contains nested objects for financial figures (like `epsActual`), which provide both a raw numerical value (`raw`) and a formatted string (`fmt`). There is no evidence of pagination; the tool appears to consistently return the four most recent quarters."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve weekly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to get current quote information"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve intraday time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve monthly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used for technical indicator calculations"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve historical price data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve calendar events"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve income statements"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve institutional ownership data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve insider holders information"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve balance sheet data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from earnings history can be used to retrieve news sentiment data"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from earnings history can be used to retrieve most negative news"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from earnings history can be used to retrieve market data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Logo",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve company logo"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve time series data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve key statistics"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve insider holders information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve company profile"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve calendar events"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve institutional ownership data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve earnings data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "slow_period",
        "type": "NUMBER",
        "description": "",
        "default": 26
      },
      {
        "name": "fast_period",
        "type": "NUMBER",
        "description": "",
        "default": 12
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "ma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/apo\"\nquerystring = {\"interval\": \"1min\", \"symbol\": \"AAPL\", \"slow_period\": 26, \"fast_period\": 12, \"format\": \"json\", \"ma_type\": \"SMA\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: APO",
    "tool description": "The Absolute Price Oscillator (APO) endpoint calculates the difference between two price moving averages to identify momentum and trend direction in financial markets. This tool leverages the parent service's scope of providing real-time and historical financial data across stocks, forex, crypto, ETFs, and indices, utilizing algorithms to analyze price patterns and deliver actionable insights for traders. By accessing a comprehensive database of market data, the APO endpoint helps users detect potential buy/sell signals and assess market strength, all within a developer-friendly API designed for seamless integration with financial applications.",
    "API name": "APO",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a time-series of Absolute Price Oscillator (APO) values for a given financial instrument (stock, forex, or crypto). The output consists of metadata, including the symbol, interval, and indicator parameters used, alongside a list of APO values corresponding to specific datetimes. This data is primarily used for technical analysis to identify market momentum and trend direction, helping traders detect potential buy and sell signals.",
      "output_format": "The output is a single JSON object containing two keys: 'meta' and 'values'. 'meta' is an object that holds metadata about the request, such as the symbol and indicator parameters. 'values' is a JSON array of objects, sorted in reverse chronological order. Each object in the array represents a single data point, containing a 'datetime' (string) and the calculated 'apo' value (a string-formatted number)."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from APO output meta data can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from APO output meta data can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from APO output meta data can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from APO output meta data can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from APO output meta data can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from APO output meta data can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from APO output meta data can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ICHIMOKU",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from APO output meta data can be used"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Spotify_v3",
    "parent tool description": "Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.",
    "tool name": "Spotify_v3: Get Albums",
    "tool description": "Retrieves one or more albums from Spotify's extensive music catalog. This endpoint taps into Spotify's Data API, which provides access to millions of songs, podcasts, artists, albums, playlists, and more, allowing you to fetch detailed album information including tracks, release dates, artists, and cover art. Whether you need a single album by ID or want to retrieve multiple albums in one request, this endpoint serves as your gateway to Spotify's comprehensive music database.",
    "required_parameters": [
      {
        "name": "ids",
        "type": "STRING",
        "description": "Album IDs (you can use commas)",
        "default": "3IBcauSj5M2A6lTeffJzdv"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://spotify81.p.rapidapi.com/albums\"\nquerystring = {\"ids\": \"3IBcauSj5M2A6lTeffJzdv\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify81.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get Albums",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output provides detailed information about one or more Spotify albums. The primary data is a list of album objects, each containing metadata such as the album type, total track count, a unique Spotify ID, and a list of markets where it's available. The output also includes URLs to the album on the Spotify platform and various-sized cover art images.",
      "output_format": "The response is a JSON object with a single top-level key, \"albums\". The value of this key is a JSON array, where each element is an object representing a single album. This structure accommodates responses for both single and multiple album lookups. Nested structures include an array of image objects and an object for external URLs."
    },
    "connected tools": [
      {
        "tool name": "Spotify Web: Get artists",
        "connect params": [
          {
            "name": "ids",
            "description": "The album output contains artist IDs that can be used to fetch artist details"
          }
        ]
      },
      {
        "tool name": "Spotify _v2: Artist Details (Single)",
        "connect params": [
          {
            "name": "artist_id",
            "description": "The album output contains artist IDs that can be used to fetch artist details"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type_2",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type_1",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "open"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/correl\"\nquerystring = {\"series_type_2\": \"close\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\", \"series_type_1\": \"open\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: CORREL",
    "tool description": "Calculates the linear correlation between two time series, returning a value between -1 and 1 to quantify their relationship. This endpoint leverages the parent tool's financial data infrastructure, which provides real-time and historical data for stocks, forex, crypto, ETFs, indices, and more, enabling users to analyze relationships between financial assets with precision.",
    "API name": "CORREL",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a time series of Pearson's Correlation Coefficients for a specific financial instrument. It calculates the linear relationship between two data series (e.g., open and close prices) for a single symbol over a defined time period. The output includes metadata about the symbol and the parameters of the correlation calculation, followed by a list of correlation values for specific datetimes.",
      "output_format": "The output is a single JSON object with two main keys: `meta` and `values`. The `meta` key contains an object with descriptive information about the query. The `values` key contains a JSON array of objects, where each object represents a data point with a `datetime` (string) and its corresponding `correl` value (a string-encoded float). The structure is nested, but there are no signs of pagination or cursoring in the examples."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could be used to select symbols for time series analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could help identify which symbols to analyze with SMA"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could help identify which symbols to analyze with EMA"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could help identify which symbols to analyze with RSI"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could help identify which symbols to analyze with MACD"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could help identify which symbols to analyze with technical indicators"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could help identify which symbols to analyze for daily time series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could help identify which symbols to analyze with Bollinger Bands"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could help identify which symbols to analyze for volatility"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BETA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The correlation data could be compared with beta calculations for the same symbols"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Email Existence Validator",
    "parent tool description": "API which checks if email really exist on server or not.\nIt check for different parameters for giving end results .\nCheck for MX records, SMTP deliverability, Disposable check and many more.",
    "tool name": "Email Existence Validator: Help Page",
    "tool description": "Provides simple help to the user on how to use the email verification service. This endpoint offers guidance on utilizing the API that checks if email addresses truly exist on servers by examining multiple parameters such as MX records, SMTP deliverability, and disposable email detection. The service delivers comprehensive verification results to determine email validity, helping users understand how to leverage these email validation capabilities effectively.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://email-existence-validator.p.rapidapi.com/help\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"email-existence-validator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Help Page",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "The output provides metadata and guidance for the email validation service. It returns a status message, a definitive list of supported email domains, and a direct URL to the full API documentation. This information helps users understand the service's capabilities and where to find detailed instructions for use.",
      "output_format": "The output is a single, flat JSON object. It contains a key named \"domain\" which holds an array of strings listing the supported domains. The structure is not nested and does not use pagination."
    },
    "connected tools": [
      {
        "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain parameter can use the list of supported domains from the help page output"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: FreeDomain",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain parameter can use the list of supported domains from the help page output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_trendmode\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"series_type\": \"close\", \"format\": \"json\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: HT_TRENDMODE",
    "tool description": "Analyzes financial data to identify trend and cycle components using Hilbert Transform techniques. This endpoint leverages the Financial Data API's real-time and historical market data (stocks, forex, crypto, ETFs, indices) to apply advanced signal processing methods described in 'Rocket Science for Traders' by John F. Ehlers, enabling traders to distinguish underlying market trends from cyclical patterns for more informed decision-making.",
    "API name": "HT_TRENDMODE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a time-series analysis for a specified financial instrument using the Hilbert Transform Trend Mode (HT_TRENDMODE) indicator. For each time interval, the output indicates whether the market is in a \"trend mode\" (represented by the string '1') or a \"cycle mode\" (represented by the string '0'). This information is intended to help traders distinguish between directional market movements and cyclical patterns.",
      "output_format": "The output is a single JSON object with two top-level keys: 'meta' and 'values'. The 'meta' object contains metadata about the financial symbol and the analysis performed. The 'values' key holds a JSON array of objects, where each object represents a data point containing a 'datetime' and the corresponding 'ht_trendmode' string value. The array is sorted in reverse chronological order."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_SINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_PHASOR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPERIOD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPHASE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Greek News in English",
    "parent tool description": "An API showing all the latest Greek news  in English",
    "tool name": "Greek News in English: Get All Sources",
    "tool description": "Retrieves a complete list of news sources with their names and corresponding identification numbers. This endpoint is part of a comprehensive API that delivers the latest Greek news translated into English, allowing users to identify and select from available news outlets for subsequent content queries.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://greek-news-in-english.p.rapidapi.com/api/sources\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"greek-news-in-english.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All Sources",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of available Greek news sources. Each source is represented as an object containing its full name (e.g., \"Proto Thema\") and a unique identification code (e.g., \"pt\"). This allows users to discover available news outlets and use their corresponding IDs for subsequent queries to fetch news content from specific sources.",
      "output_format": "The output is a stringified JSON array of objects. Each object represents a single news source and contains two non-null string fields: 'id' and 'name'. The list appears to be a complete and static, with no indication of pagination."
    },
    "connected tools": [
      {
        "tool name": "Greek News in English: Get All News",
        "connect params": [
          {
            "name": "source",
            "description": "The source tool provides a list of news sources with their IDs, which can be used to filter news by specific sources"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Youtube Music API (Detailed)",
    "parent tool description": "Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.",
    "tool name": "Youtube Music API (Detailed): Trends",
    "tool description": "Retrieves the latest charts data from YouTube Music, including top songs, top videos, top artists, and top trending videos, with global charts excluding the Trending section and US charts featuring an additional Genres section. This endpoint is part of a comprehensive YouTube Music API that provides extensive access to music content including lyrics, trends, albums, artists, songs, users, playlists, and more, allowing for detailed exploration and analysis of YouTube Music's vast catalog and popularity metrics.",
    "required_parameters": [
      {
        "name": "country",
        "type": "STRING",
        "description": "ISO 3166-1 Alpha-2 country code. Default: ZZ = Global\nhttps://www.iban.com/country-codes",
        "default": "de"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://youtube-music-api-detailed.p.rapidapi.com/popular/trends\"\nquerystring = {\"country\": country}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Trends",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "This tool retrieves the latest music chart data from YouTube Music. The outputs provide lists of top artists, including their rank, subscriber count, and trend direction (up, down, or neutral). While the examples focus on artist trends, the tool's description indicates it can also return top songs, top videos, and trending videos, making it useful for analyzing music popularity and current trends on the platform.",
      "output_format": "The successful output is a string-encoded JSON object. The data structure is nested, typically containing a primary key (e.g., 'artists') which holds an object with an 'items' key, whose value is an array of objects. Each of these objects contains detailed information like rank, title, and thumbnails. In case of a server-side failure, the tool returns an HTML error page as a string."
    },
    "connected tools": [
      {
        "tool name": "Youtube Music API (Detailed): Get Artist",
        "connect params": [
          {
            "name": "channel_id",
            "description": "Can get detailed information about trending artists from YouTube Music"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query",
            "description": "Can search for more details about trending artists or songs"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Radio World - 75,000+ Worldwide FM Radio stations..",
    "parent tool description": "This is one of the largest collection of FM Radios API from around the world. Listen Updated 79,000+ Radio stations. All the Stations are Updating Daily & Weekly basis, New stations are Adding As soon as possible. At least 100+ Stations Are adding and 1000+ Stations are fixing to this API Weekly (This is minium ratio).",
    "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: searchStation",
    "tool description": "Searches for radio stations by keywords (such as radio name or country name), with options to specify result limits per page (default 10), page number (default 1), and sort order (ASC or DESC, default ASC). This endpoint taps into one of the world's largest collections of FM radio stations, providing access to over 79,000 stations from around the globe. The database is rigorously maintained with daily and weekly updates, adding at least 100 new stations and fixing approximately 1,000 stations weekly to ensure comprehensive and reliable radio station information.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "Enter search keyword here.",
        "default": "hello"
      }
    ],
    "optional_parameters": [
      {
        "name": "order",
        "type": "STRING",
        "description": "Display item by Ascending or Disascending order",
        "default": "ASC"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Page Number.",
        "default": "1"
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Item limitation per page.",
        "default": "10"
      }
    ],
    "code": "import requests\n\nurl = \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/search_radio.php\"\nquerystring = {\"order\": \"ASC\", \"keyword\": \"hello\", \"page\": \"1\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "searchStation",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output is a list of radio stations that match a keyword search, providing details for each station such as its name, streaming URL, genre, and country of origin. The response also includes metadata about the search itself, including the total number of matching stations and pagination information. This is primarily used to discover and get connection details for radio stations around the world.",
      "output_format": "The output is a single JSON object. The core information is a list of station objects nested under the 'stations' key. The response is paginated, with top-level keys like 'limit', 'pages', and 'total_radios' providing context for the results. It's notable that several fields that appear numerical, such as 'total_radios', 'radio_id', and 'country_id', are formatted as strings."
    },
    "connected tools": [
      {
        "tool name": "Miza: Song concatenation",
        "connect params": [
          {
            "name": "u1",
            "description": "Could use a radio station's streaming URL from the search results"
          }
        ]
      },
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Could use a radio station's streaming URL from the search results"
          }
        ]
      },
      {
        "tool name": "SoundCloud Scraper: Get Track Metadata (1-3 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "Could use a radio station's streaming URL if it's a SoundCloud stream"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "OpenCritic API",
    "parent tool description": "An API for accessing video game and video game review data",
    "required_parameters": [
      {
        "name": "criteria",
        "type": "STRING",
        "description": "",
        "default": "god is of"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://opencritic-api.p.rapidapi.com/meta/search\"\nquerystring = {\"criteria\": criteria}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"opencritic-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "OpenCritic API: General Search",
    "tool description": "Searches for combinations of outlets, games, and authors using a string input. This API provides access to video game and review data, enabling efficient searches across these categories to help users quickly locate specific information about games, their publishers (outlets), and developers (authors).",
    "API name": "General Search",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output is a ranked list of search results for games, critics, or outlets based on a string query. Each result includes a unique ID, a name, the type of the result (e.g., 'game', 'critic'), and a relevance score. This allows users to find and identify specific entities within the OpenCritic database for further use.",
      "output_format": "The output is a JSON array of objects. Each object represents a single search result containing an 'id' (integer), 'name' (string), 'dist' (float), and 'relation' (string). The list is sorted by the 'dist' value, which acts as a relevance score, in ascending order. No nesting or pagination is observed in the examples."
    },
    "connected tools": [
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "param_name": "criteria",
            "description": "Can use the name field from search results to perform more specific game searches"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Author Search",
        "connect params": [
          {
            "param_name": "criteria",
            "description": "Can use the name field from search results when the relation type is 'critic' to search for specific authors"
          }
        ]
      },
      {
        "tool name": "CheapShark - Game Deals: List of Games",
        "connect params": [
          {
            "param_name": "title",
            "description": "Can use the name field from game search results to find deals for specific games"
          }
        ]
      },
      {
        "tool name": "Free-to-Play Games Database: Filter games by multiple tags",
        "connect params": [
          {
            "param_name": "tag",
            "description": "Can use the name field from game search results as part of tag filtering"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Realtime Stock Data",
    "parent tool description": "The worlds cheapest Realtime stock data provider",
    "required_parameters": [
      {
        "name": "symb",
        "type": "string",
        "description": "",
        "default": "aapl"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://realtime-stock-data.p.rapidapi.com/finance-analytics/{symb}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"realtime-stock-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Realtime Stock Data: finance-analytics",
    "tool description": "Generates AI-driven financial recommendations based on user input data. This uses AI algorithms trained on real-time stock data and financial metrics to provide personalized insights, leveraging the parent tool's role as the world's cheapest real-time stock data provider to ensure cost-effective and accurate financial analysis.",
    "API name": "finance-analytics",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides a comprehensive financial analysis and investment recommendation for a single stock. It includes current and target price data, a specific recommendation key (e.g., 'strong_buy', 'hold'), and a variety of key financial health metrics such as total cash, debt, revenue, and profitability. This data is designed to offer users AI-driven insights for making informed investment decisions.",
      "output_format": "The tool returns a single string which is a serialized JSON object. This root object has a 'data' key that contains a nested object with the financial analysis payload. Some numerical values are formatted as strings with suffixes (e.g., 'B' for billion, 'M' for million, '%' for percentage). The output represents a single entity and does not use arrays or pagination."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve weekly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve current price information"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve intraday time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to calculate technical indicators"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve historical price data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve sentiment analysis"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the finance-analytics recommendation can be used to retrieve key statistics"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapToolkit",
    "parent tool description": "A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation",
    "required_parameters": [
      {
        "name": "x",
        "type": "string",
        "description": "",
        "default": "1"
      },
      {
        "name": "z",
        "type": "string",
        "description": "",
        "default": "1"
      },
      {
        "name": "y",
        "type": "string",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [
      {
        "name": "ratio",
        "type": "STRING",
        "description": "Set to `2` for retina tiles.",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://maptoolkit.p.rapidapi.com/tiles/{z}/{x}/{y}/terrainwinter.png\"\nquerystring = {\"ratio\": ratio}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"maptoolkit.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "MapToolkit: Global Terrain Winter",
    "tool description": "Generates global terrain tiles with winter color schemes, providing detailed elevation and landscape visuals optimized for cold-weather scenarios. This leverages the parent toolkit's map tile capabilities, utilizing a global terrain database to render topographical data with seasonal coloring, enhancing situational awareness for applications like winter navigation, environmental analysis, or travel planning.",
    "API name": "Global Terrain Winter",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns the raw binary data for a PNG image. This image represents a single map tile depicting global terrain with a winter-themed color scheme. The output provides visual information about elevation and landscape, intended for applications like winter navigation, environmental analysis, or travel planning.",
      "output_format": "The output is a single string containing the raw binary data of a PNG image file. It is not a structured JSON object. Each output begins with the standard PNG file signature (e.g., \"\ufffdPNG\")."
    },
    "connected tools": [
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "marker",
            "description": "The winter terrain PNG could be used as a custom marker icon on a static map"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "icon",
            "description": "The winter terrain PNG could be used as a custom icon overlay on the map"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "50K Radio Stations",
    "parent tool description": "More than 60,000 radio stations from different countries and various genres",
    "tool name": "50K Radio Stations: Get Channels",
    "tool description": "Retrieves a comprehensive list of available radio channels. This endpoint taps into a vast database of more than 60,000 radio stations from around the world, spanning numerous countries and diverse music genres, allowing users to explore and discover broadcasting options before selecting what to listen to.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "Use this parameter to filter cities by keyword or set empty if you don't want to use it ",
        "default": "a"
      },
      {
        "name": "genre_id",
        "type": "NUMBER",
        "description": "Use this parameter to filter cities by genre id or set empty if you don't want to use it ",
        "default": ""
      },
      {
        "name": "city_id",
        "type": "NUMBER",
        "description": "Use this parameter to filter cities by city id or set empty if you don't want to use it ",
        "default": ""
      },
      {
        "name": "country_id",
        "type": "NUMBER",
        "description": "Use this parameter to filter cities by country id or set empty if you don't want to use it ",
        "default": "50"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Use this parameter to get next page",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://50k-radio-stations.p.rapidapi.com/get/channels\"\nquerystring = {\"keyword\": \"a\", \"genre_id\": \"\", \"city_id\": \"\", \"country_id\": \"50\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"50k-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get Channels",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of radio channels, each with comprehensive details. For every channel, the output includes its name, unique ID, location identifiers (city and country IDs), a list of associated genres, and various streaming URLs. The output also contains URLs for channel logos in multiple sizes.",
      "output_format": "The output is a JSON object. The primary data is located in the `data` key, which is an array of objects, where each object represents a radio channel. The root object includes metadata for pagination, specifically a `total` count of channels and a `has_next` boolean flag. The channel objects themselves contain nested data, such as the `logo` object and the `genre` array of objects."
    },
    "connected tools": [
      {
        "tool name": "50K Radio Stations: Get Cities",
        "connect params": [
          {
            "name": "country_id",
            "description": "The source tool provides country IDs in its output that can be used to filter cities by country"
          }
        ]
      },
      {
        "tool name": "50K Radio Stations: Get Genres",
        "connect params": [
          {
            "name": "keyword",
            "description": "The source tool provides genre information that can be used as keywords to filter genres"
          }
        ]
      },
      {
        "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: getStationByCountry",
        "connect params": [
          {
            "name": "country_id",
            "description": "The source tool provides country IDs that can be used to fetch stations by country"
          }
        ]
      },
      {
        "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: searchStation",
        "connect params": [
          {
            "name": "keyword",
            "description": "The source tool provides station names that can be used as search keywords"
          }
        ]
      },
      {
        "tool name": "Miza: Song search",
        "connect params": [
          {
            "name": "search",
            "description": "The source tool provides station names that can be used as search terms for songs"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "40.73,-73"
      }
    ],
    "optional_parameters": [
      {
        "name": "tp",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "aqi",
        "type": "STRING",
        "description": "",
        "default": "yes"
      },
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "",
        "default": "en"
      },
      {
        "name": "alerts",
        "type": "STRING",
        "description": "",
        "default": "no"
      },
      {
        "name": "num_of_days",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/weather.ashx\"\nquerystring = {\"aqi\": aqi, \"lang\": lang, \"alerts\": alerts, \"num_of_days\": num_of_days, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "World Weather Online API: Local Weather API",
    "tool description": "Retrieves current weather conditions, 14-day forecasts, air quality data, weather alerts, and monthly climate averages for over 4 million cities and towns worldwide. This is part of the Free Weather API and Geo API, which provides hourly, 14-day, historical weather data, and specialized marine and ski weather information in XML and JSON formats, enabling developers and businesses to access comprehensive weather insights for global locations.",
    "API name": "Local Weather API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns detailed weather data for a specified location, identified by city, zipcode, or latitude/longitude. The output includes a snapshot of the current conditions (temperature, wind, visibility, air quality) and a daily forecast. The forecast section contains a daily summary (max/min temperatures, sun hours) and astronomical information (sunrise, sunset, moon phase).",
      "output_format": "The output is in XML format, with a root element named `<data>`. The data is nested, containing main elements like `<current_condition>` and `<weather>`. The `<weather>` element, representing a daily forecast, contains further nested elements like `<astronomy>`, `<air_quality>`, and `<hourly>`. The provided examples are truncated, suggesting the full response may contain more data or a sequence of `<weather>` or `<hourly>` elements for multi-day/24-hour forecasts."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "fast_dma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "fast_d_period",
        "type": "NUMBER",
        "description": "",
        "default": 3
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "fast_k_period",
        "type": "NUMBER",
        "description": "",
        "default": 3
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 14
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stochrsi\"\nquerystring = {\"fast_dma_type\": \"SMA\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"series_type\": \"close\", \"fast_d_period\": 3, \"outputsize\": 30, \"fast_k_period\": 3, \"format\": \"json\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: STOCHRSI",
    "tool description": "Generates a Stochastic RSI (STOCHRSI) technical indicator for financial assets, calculating overbought/oversold levels and market trends using parameters like symbol, interval, and time period. This endpoint leverages the parent tool's financial data API, which provides real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to integrate advanced technical analysis into trading strategies with precise, algorithm-driven insights.",
    "API name": "STOCHRSI",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides Stochastic RSI (STOCHRSI) technical indicator data for a specific financial asset. It returns a time series of calculated %K and %D values, which are used in technical analysis to identify overbought or oversold conditions and assess market momentum. The output also includes comprehensive metadata about the financial symbol, the time interval used, and the specific parameters configured for the STOCHRSI calculation.",
      "output_format": "The output is a single JSON object containing two primary keys: `meta` and `values`. The `meta` key holds an object with metadata about the request and the asset. The `values` key contains an array of objects, where each object represents a data point with a `datetime` and the corresponding `k` and `d` values for the indicator. The numerical values for `k` and `d` are provided as strings. The data points within the `values` array are sorted in reverse chronological order (most recent first)."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from STOCHRSI output for consistent analysis"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from STOCHRSI output for consistent analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from STOCHRSI output to analyze the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from STOCHRSI output for complementary RSI analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from STOCHRSI output for volatility analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from STOCHRSI output for trend analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ICHIMOKU",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from STOCHRSI output for comprehensive technical analysis"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from STOCHRSI output to get fundamental data to complement technical analysis"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapToolkit",
    "parent tool description": "A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation",
    "tool name": "MapToolkit: Search",
    "tool description": "Performs global geocoding to convert addresses into geographic coordinates or vice versa. This is part of a comprehensive mapping toolkit that provides essential geographic services including map tiles, address search capabilities, routing directions, static map generation, and elevation data - giving you the core functionality needed for location-based applications and spatial analysis.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "Kirchengasse Wien"
      }
    ],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "Language for the given instructions. Must be a valid ISO 639-1 language code. Default value is `de`.",
        "default": ""
      },
      {
        "name": "viewbox",
        "type": "STRING",
        "description": "Defines a preferred area to search in. Format is `{minLng},{minLat},{maxLng},{maxLat}`.",
        "default": ""
      },
      {
        "name": "polygon",
        "type": "STRING",
        "description": "Defines whether available polygons are added to the response data or not. Default value is `0`.",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of returned results. Default value is `10`.",
        "default": ""
      },
      {
        "name": "countrycodes",
        "type": "STRING",
        "description": "Limits result to one or multiple countries. Passing multiple countries, they need to be separated by a comma `,`. Must be a valid  ISO 3166-1 alpha-2 country code.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://maptoolkit.p.rapidapi.com/geocode/search\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"maptoolkit.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Search",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool's output is a list of geographic locations that match a search query. Each location includes a full display name, precise latitude and longitude coordinates, and a detailed, structured address. Additionally, it provides metadata such as a unique place ID, OpenStreetMap (OSM) data, a bounding box for the location's extent, and an importance score, making it suitable for geocoding and location-based applications.",
      "output_format": "The output is a JSON array of objects, with each object representing a potential location match for the query. Within each location object, there is a nested `address` object that contains structured address components (e.g., road, city, country). The `boundingbox` field is an array of string-formatted coordinates. The examples provided appear to be truncated."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's output location data"
          },
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's output location data"
          },
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's output location data"
          },
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's output location data"
          },
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use longitude,latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use longitude,latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use longitude,latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use longitude,latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Elevation",
        "connect params": [
          {
            "name": "points",
            "description": "Can use latitude,longitude pairs from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "center",
            "description": "Can use latitude,longitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's output location data"
          },
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's output location data"
          },
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "TrueWay Geocoding: ReverseGeocode",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "Address From To Latitude Longitude: Coordinates  (latitude longitude) to Address",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output location data"
          },
          {
            "name": "lng",
            "description": "Can use longitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output location data"
          },
          {
            "name": "lng",
            "description": "Can use longitude from the source tool's output location data"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/reversegeocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's output location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active/count",
    "tool description": "Retrieves a list of active counts for regions, areas, and zones from the National Weather Service API. This endpoint provides access to NOAA's comprehensive weather monitoring infrastructure, delivering current count data organized by geographical divisions. The National Weather Service API (api.weather.gov) offers authoritative weather information collected and maintained by the National Oceanic and Atmospheric Administration, allowing users to access both real-time weather conditions and historical meteorological data across the United States.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active/count\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/alerts/active/count",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "This tool provides a numerical summary of active weather alerts from the National Weather Service. The output contains the total count of alerts, subdivided into land and marine alerts. It also provides detailed counts broken down by various geographical divisions, including regions, areas (states/territories), and specific forecast zones.",
      "output_format": "The tool returns a single, non-paginated JSON object. This object contains top-level integer counts ('total', 'land', 'marine') and three nested JSON objects: 'regions', 'areas', and 'zones'. Within these nested objects, the keys are geographical identifier codes and the values are the integer counts of active alerts for that location."
    },
    "connected tools": [
      {
        "tool name": "National Weather Service: /alerts/active/area/{area}",
        "connect params": [
          {
            "name": "area",
            "description": "Can use area codes from the source tool's output 'areas' object keys"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts/active/region/{region}",
        "connect params": [
          {
            "name": "region",
            "description": "Can use region codes from the source tool's output 'regions' object keys"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts/active",
        "connect params": [
          {
            "description": "Can use the source tool's output to determine if there are active alerts before querying details"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts?{parameters}",
        "connect params": [
          {
            "name": "zone",
            "description": "Can use zone codes from the source tool's output 'zones' object keys"
          },
          {
            "name": "region",
            "description": "Can use region codes from the source tool's output 'regions' object keys"
          },
          {
            "name": "state",
            "description": "Can use state codes from the source tool's output 'areas' object keys"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Malaysia Kini",
    "parent tool description": "Live News by Malaysia Kini",
    "tool name": "Malaysia Kini: Get Article by SID",
    "tool description": "Returns the full content of a specific news article based on the article's sid (story ID) that was previously obtained from the Get Latest Article List method. This endpoint is part of the Live News service by Malaysia Kini, providing access to current Malaysian news articles and their complete content for users seeking up-to-date information from this Malaysian news source.",
    "required_parameters": [
      {
        "name": "sid",
        "type": "NUMBER",
        "description": "Article id number return by **Get Latest Article List** method (stated as **sid**)",
        "default": "565154"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://malaysia-kini.p.rapidapi.com/get_article/565154\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"malaysia-kini.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get Article by SID",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool retrieves the full content and metadata of a specific news article from the Malaysian news source, Malaysia Kini, using a provided story ID (sid). The output includes the article's unique ID, title, and the complete text body. It can also provide supplementary information such as a URL for a top image and the publication date.",
      "output_format": "The tool returns a single, non-nested JSON object for one article. The fields 'id', 'title', and 'text' appear to be consistently present. Other fields, such as 'top-image' and 'publish-date', seem to be optional and may not be included in every response."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the article title or keywords from the article text as search terms for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related terms or titles extracted from the article text to search for movie news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use key topics or entities from the article as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Koppen Climate Classification",
    "parent tool description": "Get the K\u00f6ppen climate classificatin for any location in the world using latitude and longitude.  Results in JSON format.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "STRING",
        "description": "",
        "default": "-60.069"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "",
        "default": "-3.198"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://koppen-climate-classification.p.rapidapi.com/classification\"\nquerystring = {\"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"koppen-climate-classification.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Koppen Climate Classification: Classification",
    "tool description": "Gets the K\u00f6ppen classification code for a given latitude and longitude. This is part of a global tool that provides climate classifications for any location using geographic coordinates, returning results in JSON format to quickly determine climate zones based on specified locations.",
    "API name": "Classification",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides the K\u00f6ppen climate classification code for a specific geographic location. The response includes the classification code (e.g., 'Cfa', 'Cfb'), the resource identifier ('koppen'), and echoes back the input latitude and longitude. This information is used to programmatically identify the climate zone for a given set of coordinates.",
      "output_format": "The output is a single JSON object. It contains a nested object named 'location' which holds the 'latitude' and 'longitude' values as strings. Based on the examples, all keys appear to be consistently present and non-nullable."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Nearby Stations",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from Koppen output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Election2020 Smartable",
    "parent tool description": "The Election API offers the 2020 U.S. election news, events, important people, FAQs, and other information. The data is tagged with democratic voice and republican voice, so it's up to the user to decide which opinion to follow.",
    "tool name": "Election2020 Smartable: GetTopics",
    "tool description": "Retrieves a list of key topics related to the 2020 U.S. presidential election. This endpoint taps into the Election API's comprehensive database of election news, events, important figures, and frequently asked questions, providing access to information that has been carefully tagged with both democratic and republican perspectives. Users can explore these topics to gain balanced insights into the election landscape, with the freedom to consider viewpoints from across the political spectrum.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://election2020-smartable.p.rapidapi.com/topics/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"election2020-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "GetTopics",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of topics related to the 2020 U.S. presidential election. Each topic includes its name, an ID, and a list of associated services (like news, people, and events) with specific API endpoints. This allows users to identify key areas of interest and provides the necessary URLs to retrieve more detailed information on each topic from various political viewpoints.",
      "output_format": "The output is a JSON object with a single key, \"value\", which contains a JSON array of topic objects. Each topic object can have nested structures, such as a 'services' array which contains more objects. Some fields within a topic object, like 'parent' and 'images', may not always be present."
    },
    "connected tools": [
      {
        "tool name": "Election2020 Smartable: GetPeopleByTopic",
        "connect params": [
          {
            "name": "topic",
            "description": "Can use topic ID or name from GetTopics output"
          }
        ]
      },
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use topic names from GetTopics output as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use topic names from GetTopics output as search terms if related to entertainment/movies"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use topic names from GetTopics output as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Numbers",
    "parent tool description": "An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"",
    "tool name": "Numbers: Get trivia fact",
    "tool description": "Gets a trivia fact about a specific number. This uses an API that provides interesting numerical information, drawing from a collection of trivia, mathematical properties, date facts, and historical year events. For instance, you might learn that 5 is the number of platonic solids, 42 appears in Microsoft's Windows 98 logo, or discover historical events that occurred on dates like February 27th, 1964, when Italy requested help to prevent the Leaning Tower of Pisa from collapsing.",
    "required_parameters": [
      {
        "name": "number",
        "type": "STRING",
        "description": "The integer of interest",
        "default": "42"
      }
    ],
    "optional_parameters": [
      {
        "name": "fragment",
        "type": "STRING",
        "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.",
        "default": true
      },
      {
        "name": "notfound",
        "type": "STRING",
        "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).",
        "default": "floor"
      },
      {
        "name": "json",
        "type": "STRING",
        "description": "Specify \"true\" to return result as JSON instead of plaintext.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://numbersapi.p.rapidapi.com/42/trivia\"\nquerystring = {\"fragment\": true, \"notfound\": \"floor\", \"json\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbersapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get trivia fact",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object containing a trivia fact about a specific number. The output includes the descriptive text of the fact, the number itself, a boolean flag indicating if a fact was found, and the type of fact (e.g., 'trivia', 'math', 'date').",
      "output_format": "The output is a single, non-nested JSON object. It contains four keys: `text` (string), `number` (integer or string), `found` (boolean), and `type` (string). There is no pagination or complex nesting. The type of the `number` field can vary between an integer and a string."
    },
    "connected tools": [
      {
        "tool name": "Numbers: Get math fact",
        "connect params": [
          {
            "param_name": "number",
            "source_field": "number",
            "description": "The number from the trivia fact can be used to get mathematical properties about the same number"
          }
        ]
      },
      {
        "tool name": "Numbers: Get year fact",
        "connect params": [
          {
            "param_name": "year",
            "source_field": "number",
            "description": "If the number represents a year, it can be used to get historical facts about that year"
          }
        ]
      },
      {
        "tool name": "Numbers: Get date fact",
        "connect params": [
          {
            "param_name": "month",
            "source_field": "number",
            "description": "If the number is between 1-12, it could be used as a month input"
          },
          {
            "param_name": "day",
            "source_field": "number",
            "description": "If the number is between 1-31, it could be used as a day input"
          }
        ]
      },
      {
        "tool name": "Numbers Translator: Numbers Translator",
        "connect params": [
          {
            "param_name": "text",
            "source_field": "number",
            "description": "The number from the trivia fact can be translated into its word form"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type_1",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "open"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "series_type_2",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/div\"\nquerystring = {\"series_type_1\": \"open\", \"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"series_type_2\": \"close\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: DIV",
    "tool description": "Divides values from two specified time series to enable comparative financial analysis. This endpoint leverages the Financial Data API's real-time and historical datasets, including stocks, forex, crypto, ETFs, and indices, allowing developers to perform precise calculations and derive insights into market trends.",
    "API name": "DIV",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides the result of an arithmetic division between two specified time series (e.g., open price divided by close price) for a financial instrument. The output includes metadata about the symbol, the calculation performed, and the time interval, along with a time-series list of the calculated division values.",
      "output_format": "The tool returns a single JSON object with two main keys: 'meta' and 'values'. The 'meta' key contains an object with metadata about the financial symbol and the indicator calculation. The 'values' key contains a JSON array of objects, where each object represents a data point with a 'datetime' (string) and the corresponding 'div' value (a string-encoded number). The array of values is sorted in reverse chronological order."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The DIV output contains financial symbol metadata that could be used to query the same symbol"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The DIV output contains symbol information that can be used for technical analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The DIV output contains symbol information that can be used for moving average calculation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The DIV output contains symbol information that can be used for exponential moving average calculation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The DIV output contains symbol information that can be used for RSI calculation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The DIV output contains symbol information that can be used for MACD calculation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The DIV output contains symbol information that can be used for Bollinger Bands calculation"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The DIV output contains symbol information that can be used to get current quotes"
          }
        ]
      }
    ]
  }
]