[
  {
    "parent tool name": "Zappos Realtime Data",
    "parent tool description": "Zappos Realtime Data",
    "required_parameters": [
      {
        "name": "product_id",
        "type": "NUMBER",
        "description": "",
        "default": "9098084"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://zappos-realtime-data.p.rapidapi.com/product.php\"\nquerystring = {\"product_id\": product_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"zappos-realtime-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Zappos Realtime Data: Zappos product detail by Product ID",
    "tool description": "Retrieves real-time product information by product_id using Zappos Realtime Data, which provides up-to-the-minute product details from Zappos' database to ensure accuracy and reliability for users needing current product data.",
    "API name": "Zappos product detail by Product ID",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns detailed, real-time information for a specific Zappos product identified by its ID. The output provides a comprehensive review summary, including rating statistics (overall, comfort, look, arch support, size, width), rating distribution percentages, and the content of the most and least voted-on reviews. It also includes detailed sizing and stock information, such as available sizes, dimensions, and on-hand stock for different product variations.",
      "output_format": "The output is a JSON object containing a 'product' key, which holds a JSON array. This array typically contains a single, deeply-nested object with the product's details. Many fields can be null or an empty list/object if data is unavailable (e.g., a product with no reviews). Notably, many numeric values, like counts and ratings, are returned as strings rather than numbers."
    },
    "connected tools": [
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "The product name or details from the source tool's output could be used as a search keyword"
          }
        ]
      },
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "name": "asin",
            "description": "If the Zappos product data contains Amazon ASIN references, this could be used to look up the same product on Amazon"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "Product name or category from Zappos could be used to find similar items at BestBuy"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Zappos Realtime Data",
    "parent tool description": "Zappos Realtime Data",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "crocs body"
      }
    ],
    "optional_parameters": [
      {
        "name": "sort",
        "type": "STRING",
        "description": "`best_seller , relevance, low_to_high, high_to_low, customer_rating, new_arrivals, brand_name`",
        "default": "new_arrivals"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://zappos-realtime-data.p.rapidapi.com/search.php\"\nquerystring = {\"keyword\": keyword, \"sort\": sort, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"zappos-realtime-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Zappos Realtime Data: Zappos search product",
    "tool description": "Searches Zappos' real-time inventory and product data for accurate, up-to-the-minute information on availability, pricing, and product details. This leverages the Zappos Realtime Data API, which connects directly to Zappos' extensive database of products and stock levels, enabling users to access critical commerce insights instantly and make informed purchasing decisions.",
    "API name": "Zappos search product",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The output is a summary of a product search on Zappos. It provides the total count of matching products and a detailed breakdown of these results across various filterable categories called \"facets,\" such as gender, product type, and brand. This information is intended to help users understand the search results and refine their query with available filters.",
      "output_format": "The tool returns a single JSON object. This object contains metadata like 'totalResultCount' and 'currentResultCount', suggesting pagination. The primary data is within the 'facets' key, which is an array of objects, where each object represents a filter category and contains a list of possible values along with the number of products associated with each value. The actual list of product results is not present in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "Zappos Realtime Data: Zappos product detail by Product ID",
        "connect params": [
          {
            "name": "product_id",
            "description": "The product_id could be extracted from the facets data in the source tool's output, which likely contains product identifiers within the search results."
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "The facets from the Zappos search results could provide category names, brands, or product types that could be used as keywords for searching similar products on BestBuy."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Amazon Pricing and Product Info",
    "parent tool description": "Fullest product info\nAll Marketplaces\nCustomer support for API users\nBuy box info\nPrime &amp; FBA detection\nFast, scalable &amp; reliable API",
    "required_parameters": [
      {
        "name": "asin",
        "type": "STRING",
        "description": "",
        "default": "B07GR5MSKD"
      },
      {
        "name": "domain",
        "type": "STRING",
        "description": "",
        "default": "de"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://amazon-pricing-and-product-info.p.rapidapi.com/\"\nquerystring = {\"asin\": asin, \"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"amazon-pricing-and-product-info.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Amazon Pricing and Product Info: Main Endpoint",
    "tool description": "Serves as the central hub for all API interactions, providing product data, marketplace insights, and operational support. This API leverages a comprehensive database of marketplaces and product details to deliver real-time information, enabling developers to access buy box data, Prime/FBA status, and customer support resources efficiently. Its scalable architecture ensures reliable performance, making it essential for integrating comprehensive product analytics into applications.",
    "API name": "Main Endpoint",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a JSON object indicating the success or failure of a product data request. A successful response contains a nested `responseData` object with product details for a given ASIN and marketplace, including pricing, buy box status (FBA, Prime, seller ID), and availability. A failed response omits the `responseData` and instead provides a descriptive error message in the `responseErrors` field.",
      "output_format": "The output is a single JSON object with a consistent top-level structure. It includes a boolean `requestSuccessful`, an object `requestInfo` echoing the query, a nullable string `responseErrors`, and a nullable object `responseData` which contains the nested product data. Many fields within `responseData` are nullable, and it appears to use sentinel values (e.g., -0.01, -0.02) for unavailable prices."
    },
    "connected tools": [
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": "Can use product name from Amazon Pricing tool to search for similar products"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use product name from Amazon Pricing tool to search for similar products"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use product name from Amazon Pricing tool to search for similar products"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BestBuy Product Data",
    "parent tool description": "BestBuy Product Data API\nContact me at: muktheeswaran.m@gmail.com for builing custom spiders or custom requests.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "iphone"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://bestbuy-product-data.p.rapidapi.com/bestbuy/\"\nquerystring = {\"keyword\": keyword, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bestbuy-product-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "BestBuy Product Data: BestBuyProductData",
    "tool description": "Retrieves product data from BestBuy's database based on a keyword and pagination. This endpoint is part of the BestBuy Product Data API, which provides access to a comprehensive product database, allowing users to search for items like electronics, appliances, and more. The keyword parameter enables specific product searches (e.g., 'iphone', 'ps5'), while the page parameter facilitates navigation through results. Contact muktheeswaran.m@gmail.com for custom spiders or requests.",
    "API name": "BestBuyProductData",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of products from BestBuy based on a search keyword. For each product, it provides detailed information including the title, price, model number, SKU, user rating, and URLs for the product page and image. If no products are found for the given keyword, it returns an error object with a descriptive message.",
      "output_format": "The output is a string that can be parsed into a JSON structure. A successful response is a stringified JSON array of product objects. An unsuccessful response (e.g., no results) is a stringified JSON object containing a single key, 'Error', with a string value explaining the issue. Within the product objects, some fields like 'color' can be null. Data types can be inconsistent; for example, 'regular_price' can be a number or the string 'Not Given'."
    },
    "connected tools": [
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use product titles from BestBuy results to search for similar products on Zappos"
          }
        ]
      },
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "name": "asin",
            "description": "Can use model numbers from BestBuy products to potentially find matching products on Amazon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Asos",
    "parent tool description": "Asos API helps to query for all information about categories, products, etc... as on the official website",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "lang",
        "type": "STRING",
        "description": "The language code",
        "default": "en-US"
      }
    ],
    "code": "import requests\n\nurl = \"https://asos2.p.rapidapi.com/countries/list\"\nquerystring = {\"lang\": lang}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"asos2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Asos: countries/list",
    "tool description": "Lists the countries where Asos supports selling products. This endpoint is part of the Asos API, which provides access to product and category data from Asos's database. It leverages the API's infrastructure to retrieve country-specific selling information, allowing developers to integrate regional product availability into their applications.",
    "API name": "countries/list",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a list of countries where Asos sells products. Each country entry contains detailed localization information, including the country's name, code, associated store, and specific website URL. It also specifies the supported languages, currencies, and sizing schemas available for that region, which is useful for regional customization.",
      "output_format": "The output is a JSON array of objects. Each object represents a single country and contains nested arrays for `languages`, `currencies`, and `sizeSchemas`. Several top-level fields within a country object, such as `majorCountry` and `region`, can be null. The provided examples are truncated strings."
    },
    "connected tools": [
      {
        "tool name": "Asos: v2/auto-complete",
        "connect params": [
          {
            "name": "store",
            "description": "The store code gotten from .../countries/list API"
          },
          {
            "name": "country",
            "description": "The country code gotten from .../countries/list API"
          },
          {
            "name": "currency",
            "description": "The currency code gotten from .../countries/list API"
          },
          {
            "name": "sizeSchema",
            "description": "The sizeSchema code gotten from .../countries/list API"
          },
          {
            "name": "lang",
            "description": "The language code gotten from .../countries/list API"
          }
        ]
      },
      {
        "tool name": "Asos: categories/list",
        "connect params": [
          {
            "name": "country",
            "description": "The two letters country code"
          },
          {
            "name": "lang",
            "description": "The language code"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Asos",
    "parent tool description": "Asos API helps to query for all information about categories, products, etc... as on the official website",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "Name of products",
        "default": "bikini top"
      }
    ],
    "optional_parameters": [
      {
        "name": "store",
        "type": "STRING",
        "description": "The store code gotten from .../countries/list API",
        "default": "US"
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "The country code gotten from .../countries/list API",
        "default": "US"
      },
      {
        "name": "currency",
        "type": "STRING",
        "description": "The currency code gotten from .../countries/list API",
        "default": "USD"
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "The language code gotten from .../countries/list API",
        "default": "en-US"
      }
    ],
    "code": "import requests\n\nurl = \"https://asos2.p.rapidapi.com/v2/auto-complete\"\nquerystring = {\"store\": store, \"country\": country, \"currency\": currency, \"sizeSchema\": sizeschema, \"lang\": lang, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"asos2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Asos: v2/auto-complete",
    "tool description": "Retrieves auto-complete suggestions for product names by leveraging the Asos API's extensive product database, which contains detailed information on categories and products available on the official website. This enables users to quickly find relevant items by providing real-time, context-aware suggestions as they type, improving search efficiency and overall shopping experience.",
    "API name": "v2/auto-complete",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of auto-complete search suggestions based on a user's query. For each suggestion, it returns the suggested search term and the total number of products that match that term. This information is intended to help users quickly find relevant products and refine their search queries efficiently.",
      "output_format": "The output is a JSON object containing a `suggestionGroups` array. Each object within this array contains a `suggestions` array, which in turn holds objects with two keys: `searchTerm` (string) and `numberOfResults` (integer). The `suggestions` array can be empty if no auto-complete matches are found."
    },
    "connected tools": [
      {
        "tool name": "Asos: categories/list",
        "connect params": []
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use the searchTerm from auto-complete suggestions to search for similar products on Zappos"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use the searchTerm from auto-complete suggestions to search for similar products on BestBuy"
          }
        ]
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use the searchTerm from auto-complete suggestions to search for similar products on Aliexpress"
          }
        ]
      },
      {
        "tool name": "Lazada DataHub: Lazada - Item Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use the searchTerm from auto-complete suggestions to search for similar products on Lazada"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Asos",
    "parent tool description": "Asos API helps to query for all information about categories, products, etc... as on the official website",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "lang",
        "type": "STRING",
        "description": "The language code",
        "default": "en-US"
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "The two letters country code",
        "default": "US"
      }
    ],
    "code": "import requests\n\nurl = \"https://asos2.p.rapidapi.com/categories/list\"\nquerystring = {\"lang\": lang, \"country\": country}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"asos2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Asos: categories/list",
    "tool description": "Lists categories available on Asos. This endpoint is part of the Asos API, which provides access to comprehensive product and category data from the official Asos website. It retrieves structured category information directly from the platform's database, allowing developers to integrate Asos's product taxonomy into their applications efficiently.",
    "API name": "categories/list",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool provides a comprehensive and hierarchical list of product categories available on the Asos platform. The output is structured as a navigation tree, containing top-level categories (like 'Men') and their nested sub-categories. Each category entry includes its name, ID, display styles, and associated web URL, making it suitable for building navigation menus or integrating Asos's product taxonomy into an application.",
      "output_format": "The output is a single JSON object with a primary key 'navigation'. The value of this key is an array of objects representing top-level categories. The category structure is deeply nested; sub-categories are contained within a 'children' array inside their parent object. Several fields can be null (represented as `None` in the example strings)."
    },
    "connected tools": [
      {
        "tool name": "Asos: v2/auto-complete",
        "connect params": []
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": "Can use category names from Asos categories as search terms"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use category names from Asos categories as search terms"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use category names from Asos categories as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-home-services\"\nquerystring = {\"sku\": sku, \"postalCode\": postalcode}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Wayfair: products/get-home-services",
    "tool description": "Retrieves detailed information about a specific product using a product identifier. This endpoint leverages the broader API's capability to access comprehensive data from wayfair.com, including product specifications, pricing, and availability, enabling users to obtain precise details about individual items within the platform's catalog.",
    "API name": "products/get-home-services",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool's output indicates whether a specific product is eligible for a home service, such as professional assembly. If a service is available, the output provides comprehensive details including its name, type, price, SKU, and descriptive content like value propositions, overviews, and testimonials. If no service is available for the product, the output will indicate this with a null value.",
      "output_format": "The output is a JSON object. The core information is deeply nested under the path `data.homeServices.homeServiceEligibleExperience`. This key's value can be `null` if no home service is available for the product. When populated, it contains service details and a further nested `serviceClassContent` object which includes arrays for `faqs`, `value_props`, `testimonials`, and `overviews`."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the home services response can be used to find similar items"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the home services response can be used to check warranty services for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the home services response can be used to retrieve images of the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the home services response can be used to check financing options for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the home services response can be used to get common information about the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the home services response can be used to check pricing for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the home services response can be used to get detailed information about the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the home services response can be used to retrieve reviews for the same product"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-similar-items\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Wayfair: products/get-similar-items",
    "tool description": "Retrieves similar items for a specific product based on its attributes, leveraging the parent API's access to Wayfair's product database to help users discover related items. This endpoint utilizes the broader capabilities of the API, which provides comprehensive queries about categories, products, and other commerce data from wayfair.com, enabling personalized recommendations through detailed product metadata and classification.",
    "API name": "products/get-similar-items",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool's output is a list of products that are similar to a specified item. For each similar product, it provides comprehensive details including its name, SKU, manufacturer, pricing, customer review ratings, and inventory status. The output also includes a detailed breakdown of product attributes, such as material, color, and dimensions, to facilitate user comparison and discovery.",
      "output_format": "The response is a JSON object with the primary data, a list of similar items, nested under `data.product.compareSimilarItems.items`. Each item in this list is an object containing product details. Some fields, like `listPrice` within the `pricing` object or `productCompare`, can be null. The `additionalInformation` array contains nested tag objects that describe product specifications."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get common info about those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get home services for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get warranty information for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get pricing details for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get images of those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get financing options for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get detailed information about those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get reviews for those products"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-financing-offers\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Wayfair: products/get-financing-offers",
    "tool description": "Retrieves financing offers for a specific product based on product details. This API, which provides access to Wayfair.com's database of products and categories, uses real-time data to deliver tailored financing options, enabling users to explore payment plans directly within the broader product information framework.",
    "API name": "products/get-financing-offers",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a list of financing offers available for a specific Wayfair product. Each offer in the list includes a promotional message, a descriptive link text, a URL for more information, and any associated legal disclosures. The output can also return an empty list if no offers are available for a product, or indicate that the product itself could not be found.",
      "output_format": "The output is a JSON object with a nested structure. The main data is a list of financing offer objects found at the path `data.product.financing_offers`. This list can be empty. The parent `product` object can be null, which likely signifies that the product was not found or is unavailable."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "The financing offers are product-specific, so the same product SKU can be used to get additional common information"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "The financing offers are tied to product pricing, so the same product SKU can be used to get detailed pricing information"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The financing offers are product-specific, so the same product SKU can be used to get warranty information for purchase decision"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "name": "sku",
            "description": "The financing offers are product-specific, so the same product SKU can be used to get product images"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "The financing offers are product-specific, so the same product SKU can be used to get product reviews"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The financing offers are product-specific, so the same product SKU can be used to find similar items that might have different financing options"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in .../products/list or .../products/search endpoint.",
        "default": "W004939121"
      }
    ],
    "optional_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "For paging purpose",
        "default": "1"
      },
      {
        "name": "star",
        "type": "STRING",
        "description": "Leave empty or  1 to 5",
        "default": ""
      },
      {
        "name": "sort_order",
        "type": "STRING",
        "description": "One of the following : RELEVANCE|HELPFUL|DATE&#95;ASCENDING|DATE&#95;DESCENDING|IMAGE|RATING&#95;DESCENDING|RATING&#95;ASCENDING",
        "default": "RELEVANCE"
      }
    ],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/reviews/list\"\nquerystring = {\"page\": page, \"sku\": sku, \"sort_order\": sort_order}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Wayfair: reviews/list",
    "tool description": "Lists reviews for a specific product using the parent API's capability to query Wayfair.com's database, providing user-generated feedback to enhance product decisions. This endpoint taps into a comprehensive service designed to retrieve detailed information about categories, products, and related data, enabling efficient access to curated reviews that reflect real-world user experiences.",
    "API name": "reviews/list",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "Provides customer review information for a specified product SKU. The output includes summary statistics such as the average rating, total review count, and a histogram of rating distributions. It also contains a detailed list of individual reviews, each with the reviewer's name, location, rating, comments, and links to any associated customer photos.",
      "output_format": "The response is a JSON object with review data deeply nested under the path `data.product.customer_reviews`. This object contains both summary statistics and a list of individual review objects in the `reviews` key. If a product has no reviews, this list will be empty, and the summary fields (e.g., `rating_count`, `average_rating_value`) will be set to zero."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the reviews can be used to find similar items to the reviewed product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the reviews can be used to get more information about the reviewed product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the reviews can be used to get home services related to the reviewed product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the reviews can be used to get warranty information for the reviewed product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the reviews can be used to get images of the reviewed product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the reviews can be used to get financing options for the reviewed product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the reviews can be used to get pricing information for the reviewed product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the reviews can be used to get detailed information about the reviewed product"
          }
        ]
      },
      {
        "tool name": "Wayfair: auto-complete",
        "connect params": [
          {
            "param_name": "query",
            "description": "Product names or categories mentioned in reviews can be used as search queries"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "required_parameters": [
      {
        "name": "query",
        "type": "STRING",
        "description": "Any term or phrase that you are familiar with",
        "default": "red pillow"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/auto-complete\"\nquerystring = {\"query\": query}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Wayfair: auto-complete",
    "tool description": "Provides auto-suggestions for terms or phrases during searches. This endpoint leverages AI-powered search technology trained on Wayfair's product database to deliver relevant category and product recommendations in real-time, enhancing user navigation and discovery across the platform's extensive inventory.",
    "API name": "auto-complete",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a list of suggested search terms based on a user's input. The main output is a list of suggestion objects, each containing a string value that represents a potential search query. This information is intended to help users complete their searches on the Wayfair platform, guiding them toward relevant products or categories more efficiently.",
      "output_format": "The tool returns a single JSON object as its root. This object contains two keys: \"summary\", which holds a metadata object about the API transaction, and \"response\", which contains a JSON array of suggestion objects. Each object in the array represents one auto-complete suggestion and contains the suggestion text under the \"value\" key."
    },
    "connected tools": [
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": ""
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Lazada DataHub: Lazada - Item Search",
        "connect params": [
          {
            "name": "q",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Asos: v2/auto-complete",
        "connect params": [
          {
            "name": "q",
            "description": "Name of products"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Weee grocery API (sayweee.com) - browsing/searching/details",
    "parent tool description": "(FREE TRIAL)\nReal time scraping API from sayweee.com supports the entire pre-purchase flow.\nGrocery browsing and searching api based on location.\nProvides product details, reviews and shipment information given specific product id.\n",
    "tool name": "Weee grocery API (sayweee.com) - browsing/searching/details: product details (zipcode, product_id)",
    "tool description": "Provides detailed product information including price, availability, and shipment details based on a product ID and user's zipcode. This endpoint leverages a real-time scraping API from sayweee.com that supports the entire pre-purchase grocery shopping flow. The product ID should be obtained from the product search endpoint first, ensuring seamless integration within the grocery browsing and searching capabilities that are customized based on the user's location. Part of a FREE TRIAL service that delivers comprehensive product details and reviews from sayweee.com.",
    "required_parameters": [
      {
        "name": "zipcode",
        "type": "STRING",
        "description": "",
        "default": "77494"
      },
      {
        "name": "product_id",
        "type": "STRING",
        "description": "",
        "default": "85180"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weee-grocery-api-sayweee-com-browsing-searching-details.p.rapidapi.com/details\"\nquerystring = {\"zipcode\": \"77494\", \"product_id\": \"85180\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weee-grocery-api-sayweee-com-browsing-searching-details.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "product details (zipcode, product_id)",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns detailed information about a specific grocery product based on its ID and a user's zipcode. A successful response contains product attributes like name, price, availability (sold-out status), brand, categories, images, and predicted delivery date. The tool may also return a list of related search topics or a structured error message if the API is unreachable.",
      "output_format": "The output is a string that must be parsed into a JSON object. In a successful product detail response, the core information is deeply nested under the `data.detail.product` path. This `product` object contains numerous fields, some of which can be null or empty. The tool can also return differently structured JSON objects, either for a list of related topics (under `data.relatedTopicsData`) or for API errors (with a `messages` key)."
    },
    "connected tools": [
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "The product name from Weee grocery API can be used to search for similar products on BestBuy"
          }
        ]
      },
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param_name": "asin",
            "description": "If the product details include an Amazon ASIN reference, it could be used to get Amazon pricing"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Zappos Realtime Data",
    "parent tool description": "Zappos Realtime Data",
    "tool name": "Zappos Realtime Data: Zappos product detail by Product ID",
    "tool description": "Retrieves detailed, up-to-date product information from Zappos using a specific product_id as input. This endpoint connects to Zappos' realtime data system, allowing access to current product details, availability, pricing, and specifications at the moment of query. The realtime nature of this data ensures that information such as inventory levels, price changes, and product status reflects the most current state in Zappos' catalog, making it valuable for applications requiring accurate and timely product information.",
    "required_parameters": [
      {
        "name": "product_id",
        "type": "NUMBER",
        "description": "",
        "default": "9098084"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://zappos-realtime-data.p.rapidapi.com/product.php\"\nquerystring = {\"product_id\": product_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"zappos-realtime-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Zappos product detail by Product ID",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive, real-time data object for a specific Zappos product. This information includes core product details like name, brand, and description, as well as dynamic data such as availability, stock status, and available sizes. A significant portion of the output is a detailed summary of customer reviews, providing aggregated ratings, distributions for various attributes (comfort, fit, look), review counts, and the text of notable reviews.",
      "output_format": "The output is a single JSON object. The main product data is nested within a key named 'product', which is a JSON array that appears to always contain a single object. The structure is deeply nested, with complex objects for 'reviewSummary' and 'sizing'. The API uses null values, empty lists, and empty objects to represent the absence of data, such as for products with no reviews or undefined sizing."
    },
    "connected tools": [
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "The product name from Zappos product detail can be used as a search keyword"
          }
        ]
      },
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "name": "asin",
            "description": "If the Zappos product data contains an ASIN or product identifier that's compatible with Amazon"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "The product name or brand from Zappos product detail can be used as a search keyword"
          }
        ]
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": "The product name or brand from Zappos product detail can be used as a search query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Zappos Realtime Data",
    "parent tool description": "Zappos Realtime Data",
    "tool name": "Zappos Realtime Data: Zappos search product",
    "tool description": "Searches through realtime data from Zappos to find current product information and availability. This endpoint connects to Zappos' live inventory system, allowing users to access up-to-date product listings, pricing, stock levels, and promotions across their extensive catalog of shoes, clothing, and accessories. The realtime nature of this data ensures that search results reflect the most current information available from Zappos' online retail platform.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "crocs body"
      }
    ],
    "optional_parameters": [
      {
        "name": "sort",
        "type": "STRING",
        "description": "`best_seller , relevance, low_to_high, high_to_low, customer_rating, new_arrivals, brand_name`",
        "default": "new_arrivals"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://zappos-realtime-data.p.rapidapi.com/search.php\"\nquerystring = {\"keyword\": keyword, \"sort\": sort, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"zappos-realtime-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Zappos search product",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool's output provides a summary of a product search on Zappos. It includes the total number of products found and a detailed breakdown of search facets, such as gender and product type, with counts for each category. This faceted data is intended to help users refine their search. Although not shown in the examples, the output likely also contains a list of the actual products matching the search query.",
      "output_format": "The output is a single JSON object. It contains keys like `currentResultCount` and `totalResultCount`, which indicates the results are paginated. The primary data structure shown in the examples is the `facets` key, which holds an array of objects, where each object represents a filterable category and contains a list of its possible values and the count of products for each value. The examples appear to be truncated and do not include the list of individual product results."
    },
    "connected tools": [
      {
        "tool name": "Zappos Realtime Data: Zappos product detail by Product ID",
        "connect params": [
          {
            "name": "product_id",
            "description": "The product_id can be extracted from the search results of the source tool, which likely contains product listings with their IDs."
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "The facet information from the source tool can be used to refine search keywords for BestBuy products."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Aliexpress DataHub",
    "parent tool description": "\ud83e\udd47#1 Data Provider. Real-Time product data API you've been looking for. No manual rules or web-scraper maintenance is required.",
    "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
    "tool description": "Retrieves all comprehensive details of a single product item. This endpoint leverages the #1 Data Provider's real-time product data API, delivering complete and up-to-date information without requiring manual rule configuration or web-scraper maintenance. The service provides instant access to accurate product specifications, pricing, availability, and other critical details through its automated data collection infrastructure.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Aliexpress product ID.",
        "default": "1"
      },
      {
        "name": "loc",
        "type": "STRING",
        "description": "See '**locationList**' from '*Item Search 2 Filters*' Endpoint for this filter value. Eg.: US\n",
        "default": ""
      },
      {
        "name": "attr",
        "type": "STRING",
        "description": "See '**attributeList**'  from '*Item Search 2 Filters*' Endpoint for this filter value. Multiple values are separated with semicolons Eg.: 200000480:200004386;1186:200000072",
        "default": ""
      },
      {
        "name": "sort",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "switches",
        "type": "STRING",
        "description": "See '**switchesList**' from the response of this Endpoint and from '*Item Search 2 Filters*' Endpoint for this filter value. Eg.: 'freeShipping' and for multiple separate with coma Eg.: 'freeShipping,sale'. ",
        "default": ""
      },
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "iphone"
      },
      {
        "name": "locale",
        "type": "STRING",
        "description": "Locale parameter is used to display the titles and other content in selected language. All values are being validated and only the ones from the list are supported. Full list of supporting locale options, please use '**Locale List'** at '**Base**' group endpoints.",
        "default": ""
      },
      {
        "name": "region",
        "type": "STRING",
        "description": "Region parameter is used to accurately get the shipping costs and other promo/deals for specific geo location. All values are being validated and only the ones from the list are supported. Full list of supporting locale options, please use '**Country List**' at '**Base**' group endpoints.",
        "default": ""
      },
      {
        "name": "currency",
        "type": "STRING",
        "description": "Currency parameter is used to display the product price in selected currency. All values are being validated and only the ones from the list are supported. Full list of supporting currencies, please use '**Currency List**' at '**Base**' group endpoints.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://aliexpress-datahub.p.rapidapi.com/item_search_3\"\nquerystring = {\"page\": page, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"aliexpress-datahub.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Aliexpress - Item Search 3",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "This tool searches for products on Aliexpress based on a query and other filters. The output provides a paginated list of matching product items, including each item's ID, title, sales count, URL, and image. The response also includes metadata about the search itself, such as the total number of results, available sorting options, and filterable attributes.",
      "output_format": "The output is a single, nested JSON object. The main product data is located in a JSON array at `result.resultList`. Each object in this array represents a product. The response structure supports pagination, as indicated by the `totalResults` and `pageSize` fields. The root object also contains extensive metadata under the `status`, `settings`, and `base` keys, detailing the API call status and the search parameters used."
    },
    "connected tools": [
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param": "asin",
            "description": "If product IDs are compatible with Amazon ASINs, can use for price comparison"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lazada DataHub",
    "parent tool description": "Lazada API's",
    "tool name": "Lazada DataHub: Lazada - Item Search",
    "tool description": "Searches for complete item information across Lazada's marketplace platforms in Singapore, Vietnam, Thailand, Indonesia, Philippines, and Malaysia. This endpoint leverages Lazada's API infrastructure to provide comprehensive product details from Southeast Asia's leading e-commerce ecosystem, allowing users to access product listings with full specifications and availability. Additional filtering options can be requested to refine search results according to specific needs.",
    "required_parameters": [
      {
        "name": "region",
        "type": "STRING",
        "description": "Supported Sites:\n- Philippines **`PH`**:  [www.lazada.com.ph](https://www.lazada.com.ph)\n- Singapore **`SG`**: [www.lazada.sg](https://www.lazada.sg)\n- Indonesia **`ID`**: [www.lazada.co.id](https://www.lazada.co.id)\n- Malaysia **`MY`**: [www.lazada.com.my](https://www.lazada.com.my)\n- Thailand **`TH`**: [www.lazada.co.th](https://www.lazada.co.th)\n- Vietnam **`VN`**: [www.lazada.vn](https://www.lazada.vn)",
        "default": "TH"
      },
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "shoes"
      }
    ],
    "optional_parameters": [
      {
        "name": "locale",
        "type": "STRING",
        "description": "Available options for each **region** parameter:\n- Philippines **`PH`**:  `en_US` \n- Singapore **`SG`**: `en_SG`; `zn_CN`\n- Indonesia **`ID`**: `en_US`; `id_ID`\n- Malaysia **`MY`**: `en_MY`  ; `zn_CN`  ; ` ms_MY`\n- Thailand **`TH`**: `en_US`; `th_TH`\n- Vietnam **`VN`**: `en_SG`; `vi_VN`",
        "default": ""
      },
      {
        "name": "sort",
        "type": "STRING",
        "description": "",
        "default": ""
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://lazada-datahub.p.rapidapi.com/item_search\"\nquerystring = {\"region\": region, \"page\": page, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lazada-datahub.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Lazada - Item Search",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns product search results from Lazada's marketplace in various Southeast Asian countries. The output provides metadata about the search execution, the parameters used (query, region), and the total number of results found. It also includes comprehensive lists of available filters for refining the search, such as service promotions (e.g., 'LazMall', 'Free Shipping'), shipping locations, and product attributes (e.g., 'Size').",
      "output_format": "The output is a single JSON object with a root key 'result'. This object contains nested objects for status, settings, and the base search results. The base results include pagination details ('page', 'totalResults', 'pageSize') and lists of available filters, which are typically arrays of objects. The examples appear to be truncated, likely omitting the actual array of product items."
    },
    "connected tools": [
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": "Can use product names/keywords from Lazada search results to search for similar items on Aliexpress"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use product names/keywords from Lazada search results to find similar items on BestBuy"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Amazon Pricing and Product Info",
    "parent tool description": "Fullest product info\nAll Marketplaces\nCustomer support for API users\nBuy box info\nPrime &amp; FBA detection\nFast, scalable &amp; reliable API",
    "tool name": "Amazon Pricing and Product Info: Main Endpoint",
    "tool description": "Provides the main endpoint for accessing comprehensive Amazon product information across all marketplaces. This centralized access point delivers the fullest product details available, including buy box information and Prime & FBA detection, through a fast, scalable, and reliable API infrastructure. The endpoint serves as the primary interface for API users seeking complete product data, with integrated customer support to assist with implementation and troubleshooting needs.",
    "required_parameters": [
      {
        "name": "asin",
        "type": "STRING",
        "description": "",
        "default": "B07GR5MSKD"
      },
      {
        "name": "domain",
        "type": "STRING",
        "description": "",
        "default": "de"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://amazon-pricing-and-product-info.p.rapidapi.com/\"\nquerystring = {\"asin\": asin, \"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"amazon-pricing-and-product-info.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Main Endpoint",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a JSON object that indicates the success or failure of a product data request. For a successful request, it provides comprehensive information about a single Amazon product (identified by its ASIN), including its title, pricing, buy box seller details, and fulfillment status (Prime, FBA). In case of a failed request, the output provides an error message explaining the cause of the failure.",
      "output_format": "The output is a single, non-paginated JSON object. It contains a top-level boolean `requestSuccessful` flag. If true, product details are nested within a `responseData` object; if false, an error description is provided in the `responseErrors` string. Many fields within `responseData` can be `null` if the corresponding data is unavailable. Price-related fields like `buyBoxPrice` and `soldByAmazonPrice` may use negative numbers (e.g., -0.01) as sentinel values to indicate data is not applicable or found."
    },
    "connected tools": [
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use product title from source tool to find similar products on BestBuy"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use product title from source tool to find similar products on Zappos"
          }
        ]
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": "Can use product title from source tool to find similar products on Aliexpress"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BestBuy Product Data",
    "parent tool description": "BestBuy Product Data API\nContact me at: muktheeswaran.m@gmail.com for builing custom spiders or custom requests.",
    "tool name": "BestBuy Product Data: BestBuyProductData",
    "tool description": "Searches for products on BestBuy using a keyword and page number parameter, allowing you to find specific items like 'iphone', 'ps5', or 'sony tv'. This BestBuy Product Data API retrieves organized product information from BestBuy's catalog, with pagination support where page numbers start at 1 (maximum page depends on available product quantity). The API provides structured access to BestBuy's extensive inventory, enabling efficient product discovery and comparison for applications, research, or shopping assistance.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "iphone"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://bestbuy-product-data.p.rapidapi.com/bestbuy/\"\nquerystring = {\"keyword\": keyword, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bestbuy-product-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "BestBuyProductData",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a list of product data from BestBuy based on a search keyword. Each product entry contains detailed information such as title, price, rating, model number, and URLs for the product and its image. In cases where no products are found, the tool returns an error object with an explanatory message.",
      "output_format": "The primary output is a JSON array where each object represents a single product. In an error state, the output is a JSON object with a single key, \"Error\", containing a descriptive string. Several fields within the product objects, such as 'color', 'offer_percent', and 'regular_price', can be null or contain placeholder text like 'Not Given'. The tool supports pagination as described in its documentation."
    },
    "connected tools": [
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param_name": "asin",
            "description": "Could use model number from BestBuy product data to search for the same product on Amazon"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Could use product title from BestBuy data to search for similar products on Zappos"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Asos",
    "parent tool description": "Asos API helps to query for all information about categories, products, etc... as on the official website",
    "tool name": "Asos: v2/auto-complete",
    "tool description": "Gets autocomplete suggestions based on a partial product name input, helping users quickly find specific items they're looking for. This endpoint leverages the Asos API's comprehensive product database to deliver relevant search completions, functioning just like the autocomplete feature on the official Asos website. The API provides access to the same extensive catalog of categories, products, and related information that powers the Asos shopping platform.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "Name of products",
        "default": "bikini top"
      }
    ],
    "optional_parameters": [
      {
        "name": "store",
        "type": "STRING",
        "description": "The store code gotten from .../countries/list API",
        "default": "US"
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "The country code gotten from .../countries/list API",
        "default": "US"
      },
      {
        "name": "currency",
        "type": "STRING",
        "description": "The currency code gotten from .../countries/list API",
        "default": "USD"
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "The language code gotten from .../countries/list API",
        "default": "en-US"
      }
    ],
    "code": "import requests\n\nurl = \"https://asos2.p.rapidapi.com/v2/auto-complete\"\nquerystring = {\"store\": store, \"country\": country, \"currency\": currency, \"sizeSchema\": sizeschema, \"lang\": lang, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"asos2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "v2/auto-complete",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool provides a list of autocomplete suggestions based on a user's partial search query. For each suggestion, it returns the complete search term and the corresponding number of search results available on the Asos platform. This helps users refine their search to more easily discover products.",
      "output_format": "The output is a JSON object with a top-level key `suggestionGroups`, which is an array. This array contains objects, each having a `suggestions` array. The `suggestions` array holds the individual suggestion objects, each with a `searchTerm` (string) and `numberOfResults` (integer). If no suggestions are found, the `suggestions` array will be empty, but the parent structure remains."
    },
    "connected tools": [
      {
        "tool name": "Asos: categories/list",
        "connect params": []
      },
      {
        "tool name": "Wayfair: auto-complete",
        "connect params": [
          {
            "name": "query",
            "description": "Can use the searchTerm from autocomplete suggestions to get related suggestions on Wayfair"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use the searchTerm from autocomplete suggestions to search for similar products on BestBuy"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use the searchTerm from autocomplete suggestions to search for similar products on Zappos"
          }
        ]
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the searchTerm from autocomplete suggestions to search for similar products on Aliexpress"
          }
        ]
      },
      {
        "tool name": "Lazada DataHub: Lazada - Item Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the searchTerm from autocomplete suggestions to search for similar products on Lazada"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Asos",
    "parent tool description": "Asos API helps to query for all information about categories, products, etc... as on the official website",
    "tool name": "Asos: categories/list",
    "tool description": "Lists all available product categories from Asos, providing a structured overview of the shopping taxonomy. This endpoint taps into the comprehensive Asos API system that mirrors the official website's data architecture, allowing users to efficiently navigate through the complete category hierarchy before diving into specific product searches or filtering options.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "lang",
        "type": "STRING",
        "description": "The language code",
        "default": "en-US"
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "The two letters country code",
        "default": "US"
      }
    ],
    "code": "import requests\n\nurl = \"https://asos2.p.rapidapi.com/categories/list\"\nquerystring = {\"lang\": lang, \"country\": country}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"asos2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "categories/list",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool's output provides a comprehensive, hierarchical list of all product categories available on Asos. This structured data represents the website's navigation taxonomy, including main categories (e.g., 'Men') and their nested sub-categories. Each category entry contains details such as its title, a unique ID, and a web URL, which can be used to understand the site's layout and navigate to specific product sections.",
      "output_format": "The output is a single JSON object with a top-level key 'navigation', which contains an array of objects. The structure is deeply nested and recursive; each object can contain a 'children' key that holds an array of sub-category objects, forming a tree-like hierarchy. The provided examples appear to be truncated strings from a very large response object. Fields within the objects can be null."
    },
    "connected tools": [
      {
        "tool name": "Asos: v2/auto-complete",
        "connect params": [
          {
            "param_name": "q",
            "description": "The category names/titles from the source tool's output could be used as search queries"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "The category names from Asos could be used as search terms on Zappos"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "The category names from Asos could be used as search terms on BestBuy"
          }
        ]
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "param_name": "q",
            "description": "The category names from Asos could be used as search terms on Aliexpress"
          }
        ]
      },
      {
        "tool name": "Lazada DataHub: Lazada - Item Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "The category names from Asos could be used as search terms on Lazada"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Ikea API",
    "parent tool description": "This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.",
    "tool name": "Ikea API: Countries",
    "tool description": "Retrieves a complete list of all countries and languages supported by the unofficial Ikea API. This REST API provides developers with comprehensive access to Ikea's product catalog and search functionality through a scraper-based solution, allowing you to determine which regional markets and language options are available before making other API calls for product information and search capabilities.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ikea-api.p.rapidapi.com/countries\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ikea-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Countries",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a dictionary of all countries supported by the Ikea API, keyed by a two-letter country code. Each entry contains the country's name and a list of its regional websites. For each website, the output specifies the URL, the full language name, and the corresponding language code. This data allows developers to determine which regional markets and languages are available for use in other API calls.",
      "output_format": "The output is a single, non-paginated JSON object. The keys of this object are two-letter country codes ('ae', 'ca', etc.). The values are nested objects that include an array named 'sites', which in turn contains objects detailing each language-specific site for that country."
    },
    "connected tools": [
      {
        "tool name": "Asos: countries/list",
        "connect params": [
          {
            "param_name": "lang",
            "description": "The country data from Ikea API contains language codes that could be used to set the appropriate language for Asos API requests"
          }
        ]
      },
      {
        "tool name": "Asos: v2/auto-complete",
        "connect params": [
          {
            "param_name": "country",
            "description": "The two-letter country codes from Ikea API can be used to specify the country for Asos auto-complete"
          },
          {
            "param_name": "lang",
            "description": "The language codes from Ikea API can be used to set the appropriate language for Asos requests"
          }
        ]
      },
      {
        "tool name": "Asos: categories/list",
        "connect params": [
          {
            "param_name": "country",
            "description": "The two-letter country codes from Ikea API can be used to specify the country for Asos category listings"
          },
          {
            "param_name": "lang",
            "description": "The language codes from Ikea API can be used to set the appropriate language for Asos requests"
          }
        ]
      },
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param_name": "domain",
            "description": "The two-letter country codes from Ikea API can be used to specify the Amazon domain/region"
          }
        ]
      },
      {
        "tool name": "Lazada DataHub: Lazada - Item Search",
        "connect params": [
          {
            "param_name": "region",
            "description": "The two-letter country codes from Ikea API (for supported Southeast Asian countries) can be used to set the region for Lazada searches"
          },
          {
            "param_name": "locale",
            "description": "The language codes from Ikea API can be used to set the appropriate locale for Lazada"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-common-info",
    "tool description": "Retrieves common information services for a specific product, providing detailed data about the requested item. This API functions as part of Wayfair's comprehensive information system, allowing users to access the same product details available on wayfair.com, including specifications, features, and related information. The service connects to Wayfair's extensive product database, enabling queries that return structured information similar to what shoppers would find while browsing the retail website.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-common-info\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-common-info",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns detailed information for a specific Wayfair product, identified by its SKU. The output includes product identifiers (name, SKU, URL), manufacturer details, customer-generated content like reviews and ratings, and inventory status. This information mirrors what a customer would see on the product's page on the Wayfair website and can be used to answer specific questions about a product's features, popularity, or availability.",
      "output_format": "The output is a JSON object. A successful response contains a top-level 'data' key, which nests a 'product' object with all the detailed information. An unsuccessful query returns a top-level 'errors' key containing an array of error objects. Many fields within the 'product' object can be null, empty arrays, or contain default zero values if the corresponding data is unavailable for the given product."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get home services for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to find similar items to the product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get warranty information for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to retrieve images of the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get financing options for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to retrieve reviews for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get detailed information about the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The SKU from the source tool's output can be used to get pricing information for the same product"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-home-services",
    "tool description": "Retrieves detailed information about a specific product, providing comprehensive data on its features, specifications, and availability. This API is part of Wayfair's comprehensive data service that enables querying for all types of information available on wayfair.com, including categories, products, and other retail data, allowing users to access the same rich product information that powers the Wayfair shopping experience.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-home-services\"\nquerystring = {\"sku\": sku, \"postalCode\": postalcode}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-home-services",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "This tool returns information on optional home services, like professional assembly, that are available for a specific product. When a service is offered, the output includes the service name, type, price, and descriptive content such as overviews, value propositions, and testimonials. If no service is eligible for the product, the tool explicitly returns a null value.",
      "output_format": "The response is a JSON object with a deeply nested structure. The main data is located under the path `data.homeServices.homeServiceEligibleExperience`. This key's value is nullable; it will be an object with service details if a service is available, and null otherwise. The service details object contains nested arrays for testimonials, value propositions, and overviews."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU from the home services response can be used to get common information about the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU from the home services response can be used to find similar items"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU from the home services response can be used to get warranty information for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU from the home services response can be used to get pricing information for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU from the home services response can be used to get images of the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU from the home services response can be used to get financing offers for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU from the home services response can be used to get detailed information about the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU from the home services response can be used to get reviews for the same product"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-similar-items",
    "tool description": "Retrieves similar items related to a specific product, allowing users to discover alternative options that match their interests. This API provides comprehensive access to Wayfair.com's extensive product catalog, enabling queries for detailed information about categories, products, and related merchandise just as available on the main website. The service helps users explore comparable items when considering purchases, supporting more informed shopping decisions through Wayfair's complete product database.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-similar-items\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-similar-items",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a list of products that are considered similar to an initial query product. For each similar item found, the output provides comprehensive details including its name, SKU, manufacturer, pricing, customer ratings, and inventory status. It also includes an extensive list of product-specific attributes and features, such as materials, design, and assembly requirements, to help users compare options.",
      "output_format": "The output is a single, deeply nested JSON object. The core information is a JSON array of product objects, located at the path `data.product.compareSimilarItems.items`. Many fields within the response can be `null`, and some objects, like pricing, may have varying internal structures depending on the product. The SKU for the original product may be an empty string."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get common info about those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get home services for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get warranty information for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get pricing details for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get images for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get financing options for those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get detailed information about those products"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "Can use the SKU from similar items to get reviews for those products"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-warranty-services",
    "tool description": "Retrieves warranty service information for a specific product by its identifier. This endpoint leverages Wayfair's comprehensive product database API, which provides access to the same detailed information available on wayfair.com, including categories, specifications, pricing, and related product details. The warranty data returned helps customers understand protection options and coverage terms available for their selected items before making purchasing decisions.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-warranty-services\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-warranty-services",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The output returns information about available warranty services for a specific product. The data is nested within 'data' and 'product' keys. The core information is a list under the 'warranty_services' key, which would contain details about protection options and coverage. The output can indicate that a product was not found (by returning null for the 'product' object) or that a product was found but has no available warranties (by returning an empty list).",
      "output_format": "The tool returns a nested JSON object. The 'product' key within the 'data' object can be null, likely indicating the specified product was not found. The 'warranty_services' key contains a JSON array, which is empty in all provided examples."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The source tool's output contains product information that could be used to find similar items with the same SKU"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The source tool's output contains product information that could be used to retrieve images for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The source tool's output contains product information that could be used to check financing options for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The source tool's output contains product information that could be used to retrieve common information for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The source tool's output contains product information that could be used to check home services for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The source tool's output contains product information that could be used to check pricing for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The source tool's output contains product information that could be used to retrieve reviews for the same product"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-pricing",
    "tool description": "Retrieves pricing information for a specific product by its identifier. This API provides access to the same comprehensive product data available on wayfair.com, allowing you to query detailed pricing alongside other product attributes, category information, and specifications. The endpoint enables precise price lookups within Wayfair's extensive home goods and furniture catalog without having to navigate through the website interface.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [
      {
        "name": "options",
        "type": "STRING",
        "description": "The value of id fields under relevantAttributes JSON object returned right in this endpoint, pass this parameter multiple time for multiple options. Ex : \u2026&wfProductOptions=1234567890&wfProductOptions=special_offers&\u2026",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-pricing\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-pricing",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns detailed pricing information for a specific Wayfair product. The output includes the current customer price, the original list price, and details of any applied discounts, such as the percentage off and the dollar amount saved. If pricing information cannot be retrieved, the tool provides a structured error message explaining the failure.",
      "output_format": "The output is a serialized JSON object. In a successful response, the pricing data is deeply nested under the `data.product.pricing` key. In an error scenario, a top-level `errors` array is present with details about the failure, and the `data.product.pricing` key's value will be `null`. Several fields within the pricing object, like `previousSalePrice` or `suggestedRetailPrice`, can be `null` if not applicable."
    },
    "connected tools": [
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "name": "asin",
            "description": "The pricing information from Wayfair could be used for price comparison with Amazon products, though the specific ASIN would need to be determined separately."
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "The pricing information could be used to determine financing options based on the product's price."
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The pricing information could be used to find similar items at comparable price points."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-images",
    "tool description": "Retrieves images of a specific product, allowing you to access visual representations of items in Wayfair's catalog. This API provides comprehensive access to Wayfair.com's product information system, enabling queries for detailed data about categories, products, and other merchandise available on the platform. The service acts as a gateway to Wayfair's extensive product database, giving you the ability to obtain specific product imagery as part of your broader product information needs.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-images\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-images",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The output provides a list of images associated with a specific Wayfair product. For each image, the data includes a unique ID, a type identifier, and dimensions in pixels (width and height). The response also contains an array of any promotional statuses for the product, such as 'Clearance'.",
      "output_format": "The response is a JSON object with a nested structure. The main content is located under the `data.product` key, which contains an `images` array and a `promotionStatuses` array. Each object in the `images` array represents a single image. The `promotionStatuses` array can be empty if there are no active promotions."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-financing-offers",
    "tool description": "Gets financing offers available for a specific product, allowing users to view payment plan options and terms. This endpoint leverages Wayfair's comprehensive product information system that provides access to the same data available on wayfair.com, including categories, specifications, pricing, and financing details, enabling applications to present customers with accurate payment alternatives when considering purchases.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-financing-offers\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-financing-offers",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of financing or promotional offers available for a specific product. Each offer includes a marketing message, a URL to learn more, and any associated legal disclosures or footnotes. This information is intended to be displayed to customers to inform them of payment options or rewards, such as benefits from using a Wayfair credit card.",
      "output_format": "The response is a JSON object where the financing offers are contained within an array at `data.product.financing_offers`. This array may be empty if no offers are available. Each object in the array represents a single offer and contains details like `message`, `link_text`, `url`, and a nested `disclosures` array."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the financing offers response can be used to get more common information about the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the financing offers response can be used to get pricing details for the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the financing offers response can be used to get images of the same product"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the financing offers response can be used to find similar products that might have different financing options"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the financing offers response can be used to get warranty information that complements the financing options"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "param_name": "sku",
            "description": "The product SKU from the financing offers response can be used to get customer reviews for the same product"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/v2/detail (Deprecating)",
    "tool description": "Retrieves detailed information about a specific product, providing comprehensive data about its features, specifications, and availability. This API connects to Wayfair.com's extensive product database, allowing you to access the same complete product information that appears on the retail website, including categories, pricing, dimensions, materials, and other product attributes. The service helps developers and businesses integrate Wayfair's product catalog into their applications or systems with accurate and up-to-date product details.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/v2/detail\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/v2/detail (Deprecating)",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a detailed object for a specific Wayfair product. A successful response contains comprehensive product attributes, such as pricing, sale status, available quantity, and image details. It also includes aggregated customer review data and a list of individual customer reviews, mirroring the information on a retail product page.",
      "output_format": "The output is a single JSON object. All data is nested under a top-level `data` key, which contains a `product` object. This `product` object can be `null` if the product is not found. In case of an error, a top-level `errors` array will be present, and the `data` object may contain partial information. The structure is deeply nested with arrays for lists like images and reviews."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: reviews/list",
    "tool description": "Lists reviews related to a specific product, providing customer feedback and ratings for the item you're interested in. This API connects to Wayfair.com's comprehensive database, allowing you to access the same product review information available on the retail platform. The endpoint helps shoppers make informed purchasing decisions by retrieving authentic customer experiences, ratings, and opinions about furniture, home d\u00e9cor, and other items in Wayfair's extensive catalog.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in .../products/list or .../products/search endpoint.",
        "default": "W004939121"
      }
    ],
    "optional_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "For paging purpose",
        "default": "1"
      },
      {
        "name": "star",
        "type": "STRING",
        "description": "Leave empty or  1 to 5",
        "default": ""
      },
      {
        "name": "sort_order",
        "type": "STRING",
        "description": "One of the following : RELEVANCE|HELPFUL|DATE&#95;ASCENDING|DATE&#95;DESCENDING|IMAGE|RATING&#95;DESCENDING|RATING&#95;ASCENDING",
        "default": "RELEVANCE"
      }
    ],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/reviews/list\"\nquerystring = {\"page\": page, \"sku\": sku, \"sort_order\": sort_order}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "reviews/list",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns customer review data for a specific Wayfair product. The output provides aggregate statistics, including the product's SKU, average rating, total review count, and a histogram of ratings from 1 to 5 stars. It also includes a list of individual reviews, with details such as the reviewer's name, location, rating, comments, date, and links to customer-submitted photos.",
      "output_format": "The response is a JSON object with a nested structure. All review data is contained within the `data.product.customer_reviews` object. This object includes a `reviews` array, which lists individual review objects. If a product has no reviews, this array will be empty, and fields like `rating_count` will be 0. Some fields within a review, like `headline`, can be an empty string."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The SKU from the review data can be used to find similar products to the one being reviewed"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "The SKU from the review data can be used to get more information about the product being reviewed"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The SKU from the review data can be used to get home services related to the product being reviewed"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The SKU from the review data can be used to get warranty information for the product being reviewed"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "name": "sku",
            "description": "The SKU from the review data can be used to get images of the product being reviewed"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "The SKU from the review data can be used to get financing options for the product being reviewed"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "The SKU from the review data can be used to get pricing information for the product being reviewed"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "name": "sku",
            "description": "The SKU from the review data can be used to get detailed information about the product being reviewed"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: auto-complete",
    "tool description": "Retrieves auto suggestions based on a provided term or phrase, helping users quickly find relevant content. This API provides comprehensive search functionality for Wayfair's extensive catalog, allowing you to query for information about categories, products, and other offerings just as you would on wayfair.com. The service streamlines the discovery process by suggesting relevant terms as users type, making it easier to navigate through Wayfair's extensive home goods and furniture inventory.",
    "required_parameters": [
      {
        "name": "query",
        "type": "STRING",
        "description": "Any term or phrase that you are familiar with",
        "default": "red pillow"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/auto-complete\"\nquerystring = {\"query\": query}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "auto-complete",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of auto-complete search suggestions based on an initial user query. The main information is contained within the 'response' field, which is an array of suggestion objects. Each object includes a 'value' field that holds a relevant search term, designed to help users quickly find products or categories on Wayfair.",
      "output_format": "The output is a JSON object with a top-level 'response' key. This key contains a JSON array of objects, where each object represents a single search suggestion. The examples provided appear to be truncated strings, suggesting the full response may contain more entries."
    },
    "connected tools": [
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "The auto-complete suggestions can be used as search terms for BestBuy products"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "The auto-complete suggestions can be used as search terms for Zappos products"
          }
        ]
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": "The auto-complete suggestions can be used as search terms for Aliexpress products"
          }
        ]
      },
      {
        "tool name": "Lazada DataHub: Lazada - Item Search",
        "connect params": [
          {
            "name": "q",
            "description": "The auto-complete suggestions can be used as search terms for Lazada products"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "OpenCritic API",
    "parent tool description": "An API for accessing video game and video game review data",
    "required_parameters": [
      {
        "name": "criteria",
        "type": "STRING",
        "description": "",
        "default": "travis north"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://opencritic-api.p.rapidapi.com/author/search\"\nquerystring = {\"criteria\": criteria}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"opencritic-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "OpenCritic API: Author Search",
    "tool description": "Searches for an author's information using an API that provides access to video game and review data. This endpoint leverages the API's database of game developers, reviewers, and related content to retrieve detailed author profiles, enhancing user ability to explore game creation and critical analysis within the gaming industry.",
    "API name": "Author Search",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a list of authors from the OpenCritic database that match a given search query. Each author entry includes their unique ID, full name, and a distance score indicating how closely they match the search term. The results are sorted by relevance, with the closest match having a distance score of 0, making it easy to identify the correct author for further queries.",
      "output_format": "The output is a JSON array of objects. Each object represents an author and contains three keys: 'id' (integer), 'name' (string), and 'dist' (float). The 'dist' field is a distance/relevance score, with 0 being a perfect match. The array is sorted by this 'dist' field in ascending order. No fields appear to be nullable."
    },
    "connected tools": [
      {
        "tool name": "OpenCritic API: /game/hall-of-fame/{year}",
        "connect params": []
      },
      {
        "tool name": "OpenCritic API: General Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "The author name from the search results could be used as search criteria"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "The author name from the search results could be used to find games by that author"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type_1",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "open"
      },
      {
        "name": "series_type_2",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sub\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"series_type_1\": \"open\", \"series_type_2\": \"close\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: SUB",
    "tool description": "Subtracts the values of two specified time series to calculate their difference. This endpoint leverages the financial data platform's real-time and historical datasets, including stocks, forex, crypto, ETFs, and indices, to enable precise analysis of trends and discrepancies. By utilizing the platform's extensive financial infrastructure, users can derive actionable insights from comparative financial metrics, empowering data-driven decision-making in market analysis.",
    "API name": "SUB",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides the result of an arithmetic subtraction between two time series for a specified financial instrument. The response includes metadata detailing the symbol, time interval, currency, and the two series used in the calculation (e.g., 'open' and 'close' prices). The main data is a list of time-stamped values representing the calculated difference at each point in the series, enabling analysis of spreads, trends, or discrepancies over time.",
      "output_format": "The output is a single JSON object with two primary keys: 'meta' and 'values'. The 'meta' key contains a nested object with metadata about the financial instrument and the calculation performed. The 'values' key contains a JSON array of objects, where each object represents a data point with a 'datetime' (string) and the corresponding subtraction result under the 'sub' key (string). The 'values' array is sorted in reverse chronological order."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: VWAP",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the SUB output's metadata can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the SUB output's metadata can be used as input"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "required_parameters": [
      {
        "name": "level",
        "type": "string",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/raids/{level}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Lost Ark: get raids by level",
    "tool description": "Retrieves information about guardian raids categorized by their level. This endpoint is part of an API designed to provide game data for Lost Ark, leveraging the game's internal database to offer detailed raid specifications, enabling players to strategize effectively based on difficulty tiers.",
    "API name": "get raids by level",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool provides a list of guardian raids available in the game Lost Ark. Each raid in the list is detailed with its name and the required item level, which indicates its difficulty. This information is intended to help players identify suitable raids based on their character's gear level and to strategize for game progression.",
      "output_format": "The output is a JSON array of objects. Each object represents a guardian raid and contains a 'name' (string) and an 'itemLevel' (integer). The different example outputs suggest that the returned array is a specific subset of raids belonging to a particular tier or level category, rather than a comprehensive list of all raids."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Realtime Crypto Prices",
    "parent tool description": "Get the Fastest and Realtime Crypto Rates and more...",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "",
        "default": "BTC"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://realtime-crypto-prices.p.rapidapi.com/volume\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"realtime-crypto-prices.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Realtime Crypto Prices: Get Realtime Volume",
    "tool description": "Returns the real-time volume of a specific cryptocurrency in US Dollars. This endpoint leverages the parent tool's capability to deliver fast and real-time crypto rates, utilizing live blockchain data feeds and market analytics to provide accurate volume metrics. It enables users to track active trading volumes instantly, supporting informed decision-making in dynamic cryptocurrency markets.",
    "API name": "Get Realtime Volume",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides the real-time trading volume for a specific cryptocurrency. It includes the standard ticker symbol for the asset, the raw volume as a numerical value in US Dollars, and a formatted, human-readable string of the same volume with currency and magnitude indicators (e.g., 'B' for billions, 'M' for millions). This information is intended to help users quickly assess the current market activity and liquidity of a cryptocurrency.",
      "output_format": "The output is a single, flat JSON object. It is not an array, so pagination is not relevant. The object contains three key-value pairs, and based on the examples, all fields are likely non-nullable in a successful response."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: DIGITAL_CURRENCY_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The digital/crypto currency of your choice. It can be any of the currencies in the digital currency list. For example: symbol=BTC."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: CURRENCY_EXCHANGE_RATE (Crypto)",
        "connect params": [
          {
            "name": "from_currency",
            "description": "The cryptocurrency you want to convert from"
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Liquidity Value",
        "connect params": [
          {
            "name": "symbol",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Market Capitalization",
        "connect params": [
          {
            "name": "symbol",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Realtime Rates",
        "connect params": [
          {
            "name": "symbol",
            "description": "Crypto coin symbol"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Cryptocurrencies List",
        "connect params": [
          {
            "name": "currency_base",
            "description": "Filter by currency base"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Climate Change News_v5",
    "parent tool description": "An API showing latest Climate Change News around the world",
    "tool name": "Climate Change News_v5: All Climate Change News",
    "tool description": "Retrieves all climate change news from around the world. This endpoint provides access to a comprehensive collection of the latest articles, updates, and developments related to climate change globally, allowing users to stay informed about environmental issues, policies, scientific findings, and climate initiatives happening across different regions and countries.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://climate-change-news132.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change-news132.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "All Climate Change News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of news articles related to climate change. Each article in the list includes its title, the source of the publication, and a direct URL to the full story. This allows users to stay informed about current events, policies, and scientific findings concerning climate change from various global sources.",
      "output_format": "The output is a string-serialized JSON array. Each element in the array is a JSON object that represents a single news article. Each object contains three string keys: 'title', 'url', and 'source'. The 'title' field may contain extra whitespace and newline characters that require cleaning."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use climate change news titles or topics as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for climate change-related movies or documentaries based on news topics"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use climate change news titles or key topics as search keywords"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use climate change news topics to search for related Cameroon news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Radio World - 75,000+ Worldwide FM Radio stations..",
    "parent tool description": "This is one of the largest collection of FM Radios API from around the world. Listen Updated 79,000+ Radio stations. All the Stations are Updating Daily & Weekly basis, New stations are Adding As soon as possible. At least 100+ Stations Are adding and 1000+ Stations are fixing to this API Weekly (This is minium ratio).",
    "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: getStationByCountry",
    "tool description": "Retrieves a list of FM radio stations filtered by country ID, with options to limit results per page, specify page number, and set ordering preferences. This endpoint taps into one of the world's largest collections of FM radio stations, providing access to over 79,000 stations that are updated daily and weekly. The database is continuously expanding, with approximately 100+ new stations added and 1,000+ stations improved weekly, ensuring you have access to the most comprehensive and up-to-date radio station directory available.",
    "required_parameters": [
      {
        "name": "country_id",
        "type": "NUMBER",
        "description": "Country ID* to fetch stations (default: 26 (USA))",
        "default": "26"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Item limitation per page. (default: 10)",
        "default": "10"
      },
      {
        "name": "order",
        "type": "STRING",
        "description": "Ascending/Disascending order. (use only ASC or DESC)",
        "default": "ASC"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Page Number. (default: 1)",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/station_by_country.php\"\nquerystring = {\"limit\": \"10\", \"order\": \"ASC\", \"page\": \"1\", \"country_id\": \"26\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "getStationByCountry",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output is a paginated list of radio stations for a specific country. It provides metadata about the query, such as the total number of stations found and pagination details. For each station, it includes essential information like its name, streaming URL, image/logo, and genre, along with redundant country details like name and flag URL.",
      "output_format": "The output is a single JSON object. The primary data is within the 'stations' key, which holds a JSON array of station objects. The response includes pagination and query metadata at the top level, such as 'limit', 'pages', and 'total_radios'. The 'genre' field within a station object can be an empty string, indicating it might be optional or unavailable. The 'total_radios' value is represented as a string rather than an integer."
    },
    "connected tools": [
      {
        "tool name": "Miza: Song concatenation",
        "connect params": [
          {
            "name": "u1",
            "description": "Can use streaming URLs from radio stations as input sources for concatenation"
          },
          {
            "name": "u2",
            "description": "Can use additional streaming URLs from radio stations as input sources"
          },
          {
            "name": "u3",
            "description": "Can use additional streaming URLs from radio stations as input sources"
          }
        ]
      },
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Can use streaming URLs from radio stations as input source for trimming/extending"
          }
        ]
      },
      {
        "tool name": "Miza: Retrieve file",
        "connect params": [
          {
            "name": "path",
            "description": "Could potentially use paths extracted from radio station streaming URLs"
          }
        ]
      },
      {
        "tool name": "SoundCloud Scraper: Get Track Metadata (1-3 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "Could use streaming URLs from radio stations if they point to SoundCloud content"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "string",
        "type": "STRING",
        "description": "Search string that will enable a list of selection to be listed to the traveller.",
        "default": "New York"
      }
    ],
    "optional_parameters": [
      {
        "name": "sort",
        "type": "STRING",
        "description": "Enum: rank, name. Method of sorting the results. Valid options: rank, name",
        "default": ""
      },
      {
        "name": "get_airports",
        "type": "BOOLEAN",
        "description": "Include airports in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "order",
        "type": "STRING",
        "description": "Method of ordering the results of the search. Valid options: asc or desc.",
        "default": ""
      },
      {
        "name": "combine_regions",
        "type": "BOOLEAN",
        "description": "Enables the spell check option for the search string using either true or false.",
        "default": true
      },
      {
        "name": "get_pois",
        "type": "BOOLEAN",
        "description": "Include Points of Interest in search results. Valid Options: True or False",
        "default": true
      },
      {
        "name": "get_regions",
        "type": "BOOLEAN",
        "description": "Include Regions in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "get_cities",
        "type": "BOOLEAN",
        "description": "Include cities in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "show_all_cities",
        "type": "BOOLEAN",
        "description": "Will filter out cities with no hotels. Valid Options: False = filter out cities without hotels, True = show cities with and without hotels.",
        "default": true
      },
      {
        "name": "max_results",
        "type": "NUMBER",
        "description": "Number passed is the maximum number of results returned.",
        "default": ""
      },
      {
        "name": "get_hotels",
        "type": "BOOLEAN",
        "description": "Include hotels in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "spellcheck",
        "type": "BOOLEAN",
        "description": "Enables the spell check option for the search string using either true or false.",
        "default": false
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/autoSuggest\"\nquerystring = {\"sort\": \"\", \"get_airports\": true, \"order\": \"\", \"string\": \"New York\", \"combine_regions\": true, \"get_pois\": true, \"get_regions\": true, \"get_cities\": true, \"show_all_cities\": true, \"max_results\": \"\", \"get_hotels\": true, \"spellcheck\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Auto Suggest",
    "tool description": "Returns a list of cities and hotels based on a search query. This is part of Priceline.com's travel service, which allows users to search for hotels, cars, and flights. It leverages Priceline's extensive database of travel options to provide relevant results, helping users find suitable accommodations and destinations efficiently.",
    "API name": "Auto Suggest",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of suggested cities based on a search query. Each city result includes its name, country, geographic coordinates, the number of available hotels, and a list of nearby airports. This information is designed to help users quickly identify and select a destination for their travel search.",
      "output_format": "The output is a deeply nested JSON object. The primary results are located under the path `getHotelAutoSuggestV2.results.result.cities`. The collection of cities is presented as a JSON object with indexed keys (e.g., \"city_0\", \"city_1\") rather than a JSON array. A notable feature is the `nearby_airports_json` field, which contains a stringified JSON array of airport objects, requiring a second parsing step."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The city name from the auto-suggest results can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The city name from the auto-suggest results can be used as a market for Airbnb listings"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinates from the auto-suggest results can be used"
          },
          {
            "name": "lng",
            "description": "The longitude coordinates from the auto-suggest results can be used"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The city name from the auto-suggest results can be used as a market"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinates from the auto-suggest results can be used"
          },
          {
            "name": "lng",
            "description": "The longitude coordinates from the auto-suggest results can be used"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The city name from the auto-suggest results can be used as a search term"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "The city name from the auto-suggest results can be used as a search term"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "LGBTQ World News Live",
    "parent tool description": "API showing all the latest LGBTQ+ News around the World",
    "tool name": "LGBTQ World News Live: Get All LGBTQ+ News",
    "tool description": "Returns comprehensive news coverage about LGBTQ+ topics and events from around the world. This API aggregates and delivers the latest LGBTQ+ news stories, developments, and headlines from global sources, providing access to current information on LGBTQ+ rights, culture, politics, and community events worldwide.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lgbtq-world-news-live.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lgbtq-world-news-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All LGBTQ+ News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of news articles related to LGBTQ+ topics from around the world. Each article in the list includes a title, a URL to the full story, and the source of the publication. This information allows users to stay informed about current events, rights, culture, and politics within the LGBTQ+ community by providing direct links to the original articles.",
      "output_format": "The output is a string that contains a JSON array of objects. Each object represents a news article and has three string keys: 'title', 'url', and 'source'. The provided examples appear to be truncated, suggesting the full output may contain a longer list of articles."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use LGBTQ+ news article titles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for LGBTQ+ movie-related news using article titles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use LGBTQ+ news article titles as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Stock Sentiment API",
    "parent tool description": "Real-time social sentiment API to track news activity related to a certain stock",
    "required_parameters": [
      {
        "name": "ticker",
        "type": "STRING",
        "description": "",
        "default": "TSLA"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://stock-sentiment-api.p.rapidapi.com/stock_news_sentiment/\"\nquerystring = {\"ticker\": ticker}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"stock-sentiment-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Stock Sentiment API: News Sentiment Data",
    "tool description": "Retrieves a list of articles related to a specific stock along with their compound sentiment scores, providing real-time insights into market sentiment. This endpoint is part of a real-time social sentiment API that analyzes news activity and social media data to gauge public perception of stocks, leveraging AI to process and quantify sentiment from diverse sources for informed decision-making.",
    "API name": "News Sentiment Data",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a list of recent news articles related to a specific stock. For each article, it returns the publication date and time, the title, a URL link, and a numerical compound sentiment score. This information is intended to give users real-time insights into the market's perception of a stock based on news coverage.",
      "output_format": "The output is a JSON array of objects, where each object represents a single news article. Each object contains consistent keys: 'date' (string), 'time' (string), 'title' (string), 'link' (string), and 'compound' (float). There is no indication of pagination or null values in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Search Endpoint",
        "connect params": [
          {
            "name": "keywords",
            "description": "Can use stock symbols or company names extracted from news article titles"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols extracted from news article titles"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols extracted from news article titles"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols extracted from news article titles"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols extracted from news article titles"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols extracted from news article titles"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limit the Results",
        "default": ""
      },
      {
        "name": "states",
        "type": "STRING",
        "description": "Filter by States (by abbreviation)",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/stations\"\nquerystring = {\"limit\": \"\", \"states\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "National Weather Service: /stations",
    "tool description": "Retrieves a list of active weather stations and their metadata, filterable by parameters like state and limit. This endpoint is part of the National Weather Service API (api.weather.gov), which provides national weather data and historical records from NOAA. It leverages the NWS's standardized dataset to deliver accessible, real-time station information without field office configuration, enabling users to efficiently query specific geographic regions or data subsets.",
    "API name": "/stations",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a list of active weather stations, returning the data in a GeoJSON format. For each station, the output includes its unique identifier, name, geographic coordinates (latitude and longitude), elevation, and time zone. This information is primarily used to identify specific stations for further weather data queries. In case of an invalid request, the tool returns a structured JSON error object detailing the problem.",
      "output_format": "The successful response is a JSON object conforming to the GeoJSON 'FeatureCollection' standard. The main data is contained within a top-level 'features' key, which is an array of 'Feature' objects. Each 'Feature' object is nested and contains metadata and coordinates. Error responses are also JSON objects but follow a different, flatter structure with keys like 'title', 'status', and 'detail'."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "param_name": "latitude",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "longitude",
            "connection_type": "station coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Alpha Vantage",
    "parent tool description": "The simplest and most effective way to receive stock, ETF, forex, technical indicators, and cryptocurrency data.  Constantly ranked as a leading API provider for ease of use, accuracy, and price. [See the documentation](https://www.alphavantage.co/documentation/) and [read more](https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631) on the market data industry.  [Start now for free](https://www.alphavantage.co/support/#api-key).",
    "required_parameters": [
      {
        "name": "from_currency",
        "type": "STRING",
        "description": "The cryptocurrency you want to convert from ",
        "default": "BTC"
      },
      {
        "name": "function",
        "type": "STRING",
        "description": "The function of your choice. (In this case CURRENCY_EXCHANGE_RATE)",
        "default": "CURRENCY_EXCHANGE_RATE"
      },
      {
        "name": "to_currency",
        "type": "STRING",
        "description": "The currency you want to convert to",
        "default": "USD"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://alpha-vantage.p.rapidapi.com/query\"\nquerystring = {\"from_currency\": from_currency, \"function\": function, \"to_currency\": to_currency}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"alpha-vantage.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Alpha Vantage: CURRENCY_EXCHANGE_RATE (Crypto)",
    "tool description": "Returns real-time exchange rates for any pair of digital currency (e.g., Bitcoin) or physical currency (e.g., USD). This endpoint is part of a comprehensive financial data platform that provides stock, ETF, forex, technical indicators, and cryptocurrency data, leveraging a robust infrastructure renowned for accuracy and ease of use to deliver up-to-the-minute currency rates for informed decision-making.",
    "API name": "CURRENCY_EXCHANGE_RATE (Crypto)",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides real-time exchange rates between a specified pair of digital or physical currencies. A successful response includes the codes and names of the 'from' and 'to' currencies, the current exchange rate, bid and ask prices, and the last refresh timestamp. If the request is invalid, the tool returns an object containing an error message.",
      "output_format": "The output is a string representation of a JSON object. The top-level key indicates the status of the response: 'Realtime Currency Exchange Rate' for a successful query or 'Error Message' for a failure. In a successful response, the value is a nested object where all data, including numeric rates and timestamps, is provided as strings. The keys in this nested object are prefixed with numbers (e.g., '1. From_Currency Code')."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: FX_INTRADAY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "Can use the 'from' currency code from the exchange rate output"
          },
          {
            "name": "to_symbol",
            "description": "Can use the 'to' currency code from the exchange rate output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_DAILY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "Can use the 'from' currency code from the exchange rate output"
          },
          {
            "name": "to_symbol",
            "description": "Can use the 'to' currency code from the exchange rate output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_WEEKLY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "Can use the 'from' currency code from the exchange rate output"
          },
          {
            "name": "to_symbol",
            "description": "Can use the 'to' currency code from the exchange rate output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_MONTHLY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "Can use the 'from' currency code from the exchange rate output"
          },
          {
            "name": "to_symbol",
            "description": "Can use the 'to' currency code from the exchange rate output"
          }
        ]
      },
      {
        "tool name": "Exchange Rate API: Convert currency",
        "connect params": [
          {
            "name": "base",
            "description": "Can use the 'from' currency code from the exchange rate output"
          },
          {
            "name": "target",
            "description": "Can use the 'to' currency code from the exchange rate output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: DIGITAL_CURRENCY_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the digital currency code from the 'from' field of the exchange rate output"
          },
          {
            "name": "market",
            "description": "Can use the physical currency code from the 'to' field of the exchange rate output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/upgrade-downgrade-history\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
    "tool description": "Retrieves stock upgrade and downgrade history for a given symbol. This leverages the Mboum Finance API's comprehensive financial data infrastructure, accessing real-time market updates and SEC filings to provide historical analysis of analyst recommendations, enabling investors to track evolving sentiment and make informed decisions.",
    "API name": "stock/upgrade-downgrade-history/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a history of analyst rating changes (upgrades, downgrades, and reiterations) for a given stock symbol. Each historical entry includes the date of the rating change, the financial firm that issued it, the previous rating, and the new rating. This data allows users to track the evolution of analyst sentiment for a specific stock over time.",
      "output_format": "The output is a single JSON object containing a `body` key. The core information is within `body.history`, which is an array of objects. Each object in the array represents a single rating action and includes details like the firm, the change in grade, and the date of the action as a Unix epoch timestamp (`epochGradeDate`)."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the upgrade/downgrade history can be used to get current price information"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the upgrade/downgrade history can be used to retrieve daily time series data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the upgrade/downgrade history can be used to get historical price data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the upgrade/downgrade history can be used to get related news"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the upgrade/downgrade history can be used to get financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the upgrade/downgrade history can be used to get related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [
      {
        "name": "date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The UTC day of the data in the past in `YYYY-MM-DD` format.",
        "default": "2021-08-24"
      }
    ],
    "optional_parameters": [
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
        "default": "auto"
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/time_machine\"\nquerystring = {\"lat\": lat, \"units\": units, \"lon\": lon, \"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: historical_weather",
    "tool description": "Retrieves historical weather data for a specific day within the past 8 years, using GPS coordinates or a place_id from Location endpoints. This is part of a comprehensive weather service powered by advanced machine learning models, offering hyper-local forecasts and historical data, with all weather information updated in real-time to enable detailed analysis of past conditions for planning, research, or decision-making.",
    "API name": "historical_weather",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a detailed historical weather report for a specific location on a given day. It includes top-level metadata about the location (coordinates, timezone, units) and a primary data array. This array contains an hourly breakdown of weather conditions for the entire day, with each entry detailing temperature, wind, cloud cover, pressure, precipitation, and humidity.",
      "output_format": "The tool returns a single JSON object. The key 'data' contains a JSON array of hourly weather records. Each record within the array is a JSON object that includes nested objects for 'wind' and 'precipitation' details. The examples suggest the API returns all 24 hourly records for a day in a single response, with no pagination."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "year",
        "type": "NUMBER",
        "description": "the year",
        "default": "2024"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "latitude",
        "default": "28.0852473"
      },
      {
        "name": "lng",
        "type": "NUMBER",
        "description": "longitude",
        "default": "-16.7349705"
      },
      {
        "name": "range",
        "type": "NUMBER",
        "description": "range in meters from latitude and longitude point",
        "default": "500"
      },
      {
        "name": "month",
        "type": "STRING",
        "description": "the month",
        "default": "1"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/avgPricesByLatLng\"\nquerystring = {\"year\": year, \"lat\": lat, \"lng\": lng, \"range\": range, \"month\": month, \"bedrooms\": bedrooms, \"maxGuestCapacity\": maxguestcapacity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Prices and Availability by lat lng",
    "tool description": "Retrieves average prices, availability percentages, and processed property counts within a 20,000-meter radius of a geographical point, filterable by bedrooms and guest capacity. This analytics endpoint leverages the parent tool's access to daily-updated Airbnb data, providing insights into property availability and pricing trends to help users make informed decisions about accommodations.",
    "API name": "Prices and Availability by lat lng",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a statistical summary of Airbnb listings within a specified geographical radius. A successful response returns aggregated data, including the total number of properties, median prices for all and for available properties, and the overall availability percentage. This information is intended to help users understand local accommodation market trends. The tool also returns a simple error message object in cases of failure, such as an authentication or subscription issue.",
      "output_format": "The output is a single, flat JSON object. The structure differs for successful and failed requests. A successful response contains a set of keys like `totalProperties`, `mediumPrice`, and `availability`. An error response typically contains a single `message` key with a string value. There is no indication of nesting, arrays, or pagination."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's query"
          },
          {
            "name": "lng",
            "description": "Can use the same longitude from the source tool's query"
          },
          {
            "name": "range",
            "description": "Can use the same or adjusted range based on property density from source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's query"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/tema\"\nquerystring = {\"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 9, \"symbol\": \"AAPL\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: TEMA",
    "tool description": "Calculates the Triple Exponential Moving Average (TEMA) to identify trend directions in financial data, using historical price inputs. This endpoint leverages the parent tool's comprehensive financial data API, which provides real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to analyze market trends with reduced lag compared to traditional moving averages while enhancing trend detection accuracy through advanced statistical processing.",
    "API name": "TEMA",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a time series of Triple Exponential Moving Average (TEMA) values for a specified financial symbol. This data is used in technical analysis to identify market trends. The output also includes comprehensive metadata about the symbol (e.g., type, exchange, currency) and the specific parameters used for the TEMA calculation (e.g., time period, interval).",
      "output_format": "The output is a single JSON object with two main keys: `meta` and `values`. The `meta` key contains an object with descriptive information about the query and the financial instrument. The `values` key contains a JSON array of objects, each representing a data point in the time series with a `datetime` and the calculated `tema` value. The TEMA value is represented as a string."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The TEMA output contains symbol information that can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to retrieve time series data for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to calculate MACD for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to calculate RSI for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to calculate Bollinger Bands for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to calculate SMA for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to calculate EMA for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to calculate Stochastic Oscillator for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to calculate ADX for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from TEMA output can be used to retrieve financial data for the same asset"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mapilion - Vector and Raster Map Tiles",
    "parent tool description": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
    "required_parameters": [
      {
        "name": "style",
        "type": "string",
        "description": "",
        "default": "osm-bright"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/stylejson/{style}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Mapilion - Vector and Raster Map Tiles: Get Style Json",
    "tool description": "Returns pre-configured style JSONs for map rendering, including options like 'osm-bright', 'dark-matter', and hillshaded variants. This endpoint is part of Mapilion, a service delivering scalable vector and raster map tiles based on OpenStreetMap and OpenMapTiles data, enabling users to quickly implement standardized styles while allowing customization for advanced scenarios.",
    "API name": "Get Style Json",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object that represents a complete map style definition, conforming to the Mapbox Style Specification. This object contains all the necessary information for a map rendering client, including data sources, layer definitions, visual properties like colors and fonts, and metadata. The output is intended to be consumed by a mapping library (like Mapbox GL or MapLibre GL) to render a visually complete and interactive map.",
      "output_format": "The output is a single, deeply nested JSON object. Key top-level properties include 'version', 'name', 'metadata', 'sources', 'sprite', 'glyphs', and 'layers'. The 'layers' property is an array of objects, where each object defines the styling for a specific map feature (e.g., roads, water, buildings). The structure is complex but standardized."
    },
    "connected tools": [
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "maptype",
            "description": "Defines the maps appearence."
          }
        ]
      },
      {
        "tool name": "Mapilion - Vector and Raster Map Tiles: Get Vector Tile",
        "connect params": [
          {
            "name": "x",
            "description": ""
          },
          {
            "name": "y",
            "description": ""
          },
          {
            "name": "z",
            "description": ""
          }
        ]
      },
      {
        "tool name": "MapToolkit: Planet Vector Tiles",
        "connect params": [
          {
            "name": "x",
            "description": ""
          },
          {
            "name": "y",
            "description": ""
          },
          {
            "name": "z",
            "description": ""
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mapilion - Vector and Raster Map Tiles",
    "parent tool description": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
    "required_parameters": [
      {
        "name": "x",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      },
      {
        "name": "y",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      },
      {
        "name": "z",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/{z}/{x}/{y}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Mapilion - Vector and Raster Map Tiles: Get Vector Tile",
    "tool description": "Returns vector tiles following the OpenMapTiles schema, leveraging Mapilion's scalable infrastructure. This service utilizes OpenStreetMap data and the OpenMapTiles standard to deliver high-resolution vector maps, enabling detailed and customizable geographic representations at scale.",
    "API name": "Get Vector Tile",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a single binary vector tile containing geographic data. This data is organized into layers (e.g., 'water', 'aerodrome_label') and includes geometric features (points, lines, polygons) and their associated attributes (e.g., names in multiple languages, classifications). The output is intended to be consumed by a mapping library or GIS software to render a visual, interactive map.",
      "output_format": "The output is binary data, specifically a single vector tile in the Mapbox Vector Tile (MVT) format, which is based on Protocol Buffers (Protobuf). It is not a human-readable format like JSON and requires a specialized parser to interpret its contents. The data is self-contained within the single binary response and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "geojson",
            "description": "Can use the vector tile data after conversion to GeoJSON format for rendering geographic features on static maps"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Planet Vector Tiles",
        "connect params": [
          {
            "name": "x",
            "description": "Can use the same tile coordinates to retrieve complementary vector data"
          },
          {
            "name": "y",
            "description": "Can use the same tile coordinates to retrieve complementary vector data"
          },
          {
            "name": "z",
            "description": "Can use the same tile coordinates to retrieve complementary vector data"
          }
        ]
      },
      {
        "tool name": "Mapilion - Vector and Raster Map Tiles: Get Hillshading Tile",
        "connect params": [
          {
            "name": "x",
            "description": "Can use the same tile coordinates to overlay hillshading on the vector tile"
          },
          {
            "name": "y",
            "description": "Can use the same tile coordinates to overlay hillshading on the vector tile"
          },
          {
            "name": "z",
            "description": "Can use the same tile coordinates to overlay hillshading on the vector tile"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Hillshading",
        "connect params": [
          {
            "name": "x",
            "description": "Can use the same tile coordinates to overlay hillshading on the vector tile"
          },
          {
            "name": "y",
            "description": "Can use the same tile coordinates to overlay hillshading on the vector tile"
          },
          {
            "name": "z",
            "description": "Can use the same tile coordinates to overlay hillshading on the vector tile"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/balance-sheet\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
    "tool description": "Retrieves balance sheet data for stocks, including assets, liabilities, and equity, by company ticker or identifier. This endpoint is part of the Mboum Finance Official API, which offers comprehensive financial data such as stocks, options, ETFs, mutual funds, SEC filings, and news. It leverages real-time market data and extensive financial databases to provide accurate, up-to-date information, enabling investors to assess a company's financial health and make informed decisions.",
    "API name": "stock/balance-sheet/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides detailed historical balance sheet data for a specified stock ticker. The output includes both quarterly (`balanceSheetHistoryQuarterly`) and annual (`balanceSheetHistory`) reports, itemizing assets, liabilities, and equity. This allows users to perform in-depth financial analysis and evaluate a company's financial health over time.",
      "output_format": "The response is a nested JSON object. A top-level `body` key contains the financial data. Inside `body`, `balanceSheetHistoryQuarterly` and `balanceSheetHistory` objects each contain a `balanceSheetStatements` array. Each element in the array is a report for a single period. Financial figures within a report are presented as objects with raw numeric values (`raw`) and multiple formatted string representations (`fmt`, `longFmt`). The presence of specific financial metrics can vary between reports."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query daily time series data for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query weekly time series data for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query current price quotes for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query intraday time series data for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query monthly time series data for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to calculate technical indicators for the same stock"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve historical price data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve earnings history"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve complementary income statements"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve earnings details"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve institutional ownership details"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve insider holder information"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve key statistics"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve insider holder information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve company profile information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve calendar events"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve institutional ownership details"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve earnings information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cloud Cast",
    "parent tool description": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.",
    "tool name": "Cloud Cast: Get the forecast",
    "tool description": "Gets the weather forecast for the current city, providing real-time meteorological data. This service leverages Cloudcast's efficient API built with Node.js and Express to deliver up-to-date weather conditions including temperature, humidity, wind speed, and other vital meteorological information from locations worldwide. The simple interface allows quick access to comprehensive weather data for the user's present location.",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "New York"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cloud-cast.p.rapidapi.com/forecast/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cloud-cast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get the forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides weather forecast data for a specific location. The output consists of a list of forecast predictions at 3-hour intervals over several days. Each prediction includes detailed meteorological information such as temperature, humidity, pressure, wind speed, cloud cover, and a textual description of the weather conditions.",
      "output_format": "The successful output is a single JSON object containing a top-level key named 'list'. This key holds an array of JSON objects, where each object represents a single forecast for a specific timestamp and contains nested data structures. In the event of an application error, the tool may return an HTML error page as a string instead of the expected JSON object."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "The source tool provides weather data for a specific city that can be extracted"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "The source tool provides weather data for a specific city that can be extracted"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "The source tool provides weather data for a specific city that can be extracted"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "longitude",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "longitude",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "The source tool provides weather data for a specific city that can be extracted"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Foreca Weather",
    "parent tool description": "Everything you need to build a weather app",
    "tool name": "Foreca Weather: Hourly",
    "tool description": "Provides hourly weather forecasts with detailed atmospheric conditions broken down by the hour. This uses comprehensive meteorological data from a weather service that offers everything needed to build a complete weather application, including temperature trends, precipitation probabilities, wind conditions, and other atmospheric metrics throughout the day. The forecast information is presented in an organized timeline format, enabling users to plan activities with precision based on expected weather changes.",
    "required_parameters": [
      {
        "name": "location",
        "type": "string",
        "description": "",
        "default": "102643743"
      }
    ],
    "optional_parameters": [
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "Altitude (meters)",
        "default": "0"
      },
      {
        "name": "history",
        "type": "BOOLEAN",
        "description": "Whether to include 24 hours of past data.",
        "default": "0"
      },
      {
        "name": "dataset",
        "type": "STRING",
        "description": "Variable set",
        "default": "full"
      },
      {
        "name": "tz",
        "type": "STRING",
        "description": "Time zone in response (IANA time zone database names)",
        "default": "Europe/London"
      },
      {
        "name": "periods",
        "type": "NUMBER",
        "description": "Number of time steps (default 8, maximum 12)",
        "default": "8"
      },
      {
        "name": "windunit",
        "type": "STRING",
        "description": "Wind speed unit in response.",
        "default": "MS"
      },
      {
        "name": "tempunit",
        "type": "STRING",
        "description": "Temperature unit in response",
        "default": "C"
      }
    ],
    "code": "import requests\n\nurl = \"https://foreca-weather.p.rapidapi.com/forecast/hourly/{location}\"\nquerystring = {\"alt\": alt, \"history\": history, \"dataset\": dataset, \"tz\": tz, \"periods\": periods, \"windunit\": windunit, \"tempunit\": tempunit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"foreca-weather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Hourly",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a detailed hourly weather forecast for a given location. A successful response contains a chronological list of weather conditions for each upcoming hour, including temperature, precipitation probability, wind conditions, and other atmospheric metrics. In case of an error, such as providing an invalid location ID, the tool returns a simple string error message.",
      "output_format": "A successful output is a JSON object with a single top-level key, 'forecast', which contains a JSON array of objects. Each object in the array represents the forecast for a specific hour. Error outputs are plain strings, not structured JSON. The provided successful example is a stringified representation of the JSON object."
    },
    "connected tools": [
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MusicData API",
    "parent tool description": "Data for Youtube, Spotify music videos, tracks, albums, artist & more",
    "tool name": "MusicData API: /youtube/milestone/{milestone}",
    "tool description": "Identifies the fastest music videos to reach a specified milestone of views (X million) on YouTube, where X must be between 100-7000 million and increase in increments of 100 (e.g., 100M, 200M, 300M). This leverages comprehensive YouTube analytics data, providing insights into record-breaking performance metrics across music videos, tracks, albums, and artists. The tool analyzes viewing velocity trends from YouTube's vast database to determine which content achieved specific viewership milestones in the shortest timeframe.",
    "required_parameters": [
      {
        "name": "milestone",
        "type": "string",
        "description": "",
        "default": "500"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://musicdata-api.p.rapidapi.com/youtube/milestone/500\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"musicdata-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/youtube/milestone/{milestone}",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool provides a ranked list of the fastest music videos to reach a specified viewership milestone on YouTube. For each video, the output includes its rank, title, a direct YouTube URL, and the number of days it took to achieve the milestone. This information is used to analyze the performance and virality of music videos.",
      "output_format": "The output is a string representation of a JSON array, where each element is an object representing a music video. Each object contains four string keys: 'ranking', 'video' (the title), 'link' (the URL), and 'days'. Note that the 'ranking' and 'days' values are strings, not numbers. There is no evidence of pagination or nested structures in the provided examples, but some string values appear to be truncated."
    },
    "connected tools": [
      {
        "tool name": "Youtube Music API (Detailed): Get Song",
        "connect params": [
          {
            "name": "video_id",
            "description": "Can extract video ID from the YouTube URL in the source output"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Watch Playlist",
        "connect params": [
          {
            "name": "video_id",
            "description": "Can extract video ID from the YouTube URL in the source output"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Song Related",
        "connect params": [
          {
            "name": "browse_id",
            "description": "Can be derived from video information in the source output"
          }
        ]
      },
      {
        "tool name": "Miza: Song search",
        "connect params": [
          {
            "name": "search",
            "description": "Can use video title from the source output"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use video title from the source output"
          }
        ]
      },
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Can use YouTube URL from the source output"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Can use video title from the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_dcphase\"\nquerystring = {\"series_type\": \"close\", \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: HT_DCPHASE",
    "tool description": "Calculates the dominant cycle phase using Hilbert Transform techniques to analyze financial market cycles. This endpoint leverages the parent tool's financial data infrastructure, which provides real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to identify cyclical patterns in market behavior. Built on advanced signal processing methods described in *Rocket Science for Traders* by John F. Ehlers, it helps traders make informed decisions by detecting phase shifts in price movements, enhancing technical analysis capabilities within the broader financial data platform.",
    "API name": "HT_DCPHASE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The output provides the Hilbert Transform Dominant Cycle Phase (HT_DCPHASE) indicator for a given financial instrument over a series of time intervals. The response includes metadata about the instrument (e.g., symbol, interval, exchange) and a time-series list of data points. Each data point contains a datetime and its corresponding HT_DCPHASE value, which helps traders analyze market cycles and potential phase shifts.",
      "output_format": "The output is a single JSON object with two top-level keys: 'meta' and 'values'. The 'meta' key holds an object with descriptive information about the request and the instrument. The 'values' key holds a JSON array of data points, sorted in reverse chronological order (most recent first). Each object in the array contains a 'datetime' string and the 'ht_dcphase' value, which is also represented as a string."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: HT_SINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_TRENDLINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_TRENDMODE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_PHASOR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPERIOD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ICHIMOKU",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sma\"\nquerystring = {\"time_period\": 9, \"outputsize\": 30, \"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: SMA",
    "tool description": "Calculates the Simple Moving Average (SMA) by averaging the latest closing prices over a specified period. This endpoint leverages the financial data API's extensive scope, which provides real-time and historical data on stocks, forex, crypto, ETFs, and indices, enabling developers to analyze market trends and inform trading decisions with precise technical indicators.",
    "API name": "SMA",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a JSON object containing a time-series of Simple Moving Average (SMA) values for a specified financial instrument. The output includes a `meta` object that details the request parameters like the symbol, interval, and time period used for the calculation. The primary data is in a `values` array, where each entry contains a timestamp and its corresponding SMA value, intended for technical analysis of market trends.",
      "output_format": "The output is a single JSON object with top-level keys: `meta`, `values`, and `status`. The `meta` key holds an object with contextual metadata. The `values` key contains a JSON array of objects, representing the time-series data sorted in reverse chronological order. Numerical data, such as the `sma` value, is formatted as a string."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from SMA output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from SMA output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from SMA output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from SMA output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from SMA output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: VWAP",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from SMA output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from SMA output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from SMA output's meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from SMA output's meta data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Alpha Vantage",
    "parent tool description": "The simplest and most effective way to receive stock, ETF, forex, technical indicators, and cryptocurrency data.  Constantly ranked as a leading API provider for ease of use, accuracy, and price. [See the documentation](https://www.alphavantage.co/documentation/) and [read more](https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631) on the market data industry.  [Start now for free](https://www.alphavantage.co/support/#api-key).",
    "required_parameters": [
      {
        "name": "function",
        "type": "STRING",
        "description": "The time series of your choice. ",
        "default": "TIME_SERIES_WEEKLY"
      }
    ],
    "optional_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "The name of the equity of your choice. ",
        "default": "MSFT"
      },
      {
        "name": "datatype",
        "type": "STRING",
        "description": "By default, datatype=json. Strings json and csv are accepted with the following specifications: json returns the intraday time series in JSON format; csv returns the time series as a CSV (comma separated value) file.",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://alpha-vantage.p.rapidapi.com/query\"\nquerystring = {\"function\": function, \"symbol\": symbol, \"datatype\": datatype}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"alpha-vantage.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
    "tool description": "Returns weekly time series data for global equities, including the last trading day of each week, weekly open, high, low, close, and volume, based on a specified equity identifier. This endpoint is part of a comprehensive API platform that provides stock, ETF, forex, technical indicator, and cryptocurrency data, leveraging 20+ years of historical financial records to deliver accurate, actionable insights for market analysis and investment decision-making.",
    "API name": "TIME_SERIES_WEEKLY",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides historical weekly financial data for a specified equity symbol. The output contains two primary components: a metadata object that includes the stock symbol and the last refresh date, and a time series object. The time series object contains key-value pairs where each key is the date of the last trading day of a week, and the value is an object containing the open, high, low, close (OHLC) prices and trading volume for that week.",
      "output_format": "The output is a single JSON object. It contains a top-level key named `Meta Data` and another key for the time series data, typically `Weekly Time Series`. The time series data is a nested JSON object where keys are date strings (YYYY-MM-DD). The values for prices and volume are returned as strings, not numbers. The keys for the OHLCV data are prefixed with a number (e.g., `1. open`)."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The weekly time series provides stock symbol data that can be used for technical analysis"
          },
          {
            "name": "series_type",
            "description": "The weekly time series provides open, high, low, close data that can be used as series input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the weekly time series can be used to query the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the weekly time series can be used for SMA calculation"
          },
          {
            "name": "series_type",
            "description": "The weekly OHLC data can be used as input for the SMA calculation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the weekly time series can be used for EMA calculation"
          },
          {
            "name": "series_type",
            "description": "The weekly OHLC data can be used as input for the EMA calculation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the weekly time series can be used for MACD calculation"
          },
          {
            "name": "series_type",
            "description": "The weekly OHLC data can be used as input for the MACD calculation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the weekly time series can be used for RSI calculation"
          },
          {
            "name": "series_type",
            "description": "The weekly OHLC data can be used as input for the RSI calculation"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the weekly time series can be used to get detailed company information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the weekly time series can be used to get additional financial data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Plant Hardiness Zone",
    "parent tool description": "Retrieve the USDA Plant Hardiness Zone for a ZIP code",
    "required_parameters": [
      {
        "name": "zipcode",
        "type": "string",
        "description": "",
        "default": "90210"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://plant-hardiness-zone.p.rapidapi.com/zipcodes/{zipcode}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"plant-hardiness-zone.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Plant Hardiness Zone: Retrieve the Hardiness Zone",
    "tool description": "Retrieves the USDA Plant Hardiness Zone for a given ZIP code by accepting the ZIP in the endpoint path and returning an object containing the ZIP code and its corresponding hardiness zone. This endpoint leverages a specialized agricultural database mapping ZIP codes to USDA zones, enabling users to quickly determine climate suitability for plants in their specific region, which is critical for gardening and landscaping planning.",
    "API name": "Retrieve the Hardiness Zone",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is an object that provides the specific USDA Plant Hardiness Zone for a given US ZIP code. This output also includes the original ZIP code for confirmation. This information is primarily used by gardeners, landscapers, and agricultural professionals to determine which plants are most likely to thrive in a specific geographic location based on its climate.",
      "output_format": "The output is a single, flat JSON object containing two string key-value pairs: 'hardiness_zone' and 'zipcode'. There is no nesting, and since the tool maps a single ZIP code to a single zone, the output is not an array and does not involve pagination."
    },
    "connected tools": [
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for weather forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for wind speed data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for humidity data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for weather forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for current weather"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for weather updates"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "name": "ZIPCODE",
            "description": "The zipcode from the hardiness zone tool can be used directly to search for location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "The zipcode from the hardiness zone tool can be used directly to get weather data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "The zipcode from the hardiness zone tool can be used directly to get forecast data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Yahoo Finance_v2",
    "parent tool description": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "string",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/qu/quote/AAPL/calendar-events\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Yahoo Finance_v2: stock/calendar-events",
    "tool description": "Retrieves stock-related calendar events such as earnings dates, splits, and dividends. This endpoint leverages the Yahoo Finance API, which provides comprehensive financial data on stocks, options, ETFs, mutual funds, and news, utilizing real-time market information and historical records to keep users informed about critical financial schedules and updates.",
    "API name": "stock/calendar-events",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool retrieves financial calendar event information for a specific stock symbol. The output includes upcoming earnings report dates, associated earnings and revenue estimates (average, low, and high), and dividend-related dates such as the ex-dividend and dividend payment dates. This data is intended to help users track key corporate events that may influence a stock's performance.",
      "output_format": "The tool returns a JSON object. A successful response contains a 'meta' object with request metadata and a 'body' object with the calendar data. The 'body' is deeply nested, containing an 'earnings' object and fields for dividend dates. Dates and financial figures are often provided in multiple formats: a raw number (like a Unix timestamp or float) and a formatted string. Some fields, like 'exDividendDate' and 'dividendDate', can be an object if data is available or an empty array if not. Error responses have a different, flatter structure, typically containing a 'messages' key."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from calendar events can be used to fetch daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from calendar events can be used to get current price information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from calendar events can be used to get financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from calendar events can be used to get options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from calendar events can be used to get related news"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from calendar events can be used to get time series data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hotels com Provider",
    "parent tool description": "Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one",
    "tool name": "Hotels com Provider: Domains List",
    "tool description": "Retrieves a comprehensive list of available domains, domain codes, currencies, and locales for the Hotels.com platform. This endpoint provides essential reference data needed to properly configure and localize hotel searches through the Hotels.com service, which offers access to hotel listings, pricing information, property photos, and guest reviews. The data returned helps ensure that search queries are formatted correctly for specific regions and that results can be displayed with appropriate currency and language settings.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://hotels-com-provider.p.rapidapi.com/v2/domains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hotels-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Domains List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive dictionary of localization and configuration data for the Hotels.com platform. Each key in the dictionary is a domain code (e.g., 'US', 'CA'), and its value is an object containing details like the domain's URL, country code, currency, and a list of supported locales. This reference data is used to correctly format API requests for specific regions and display results with the appropriate language and currency.",
      "output_format": "The output is a single, non-paginated JSON object that acts as a dictionary. The top-level keys are two-letter domain codes, and each value is a nested object containing domain-specific details. This includes a `supported_locales` object which itself contains nested objects for each locale. Some fields, such as `language_code`, can be null."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "param_name": "currency",
            "description": "Can use currency information from Hotels.com domains list to set appropriate currency"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Spotify_v3",
    "parent tool description": "Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.",
    "tool name": "Spotify_v3: Get radio playlist",
    "tool description": "Gets a personalized radio playlist based on a specific artist or song, delivering a curated stream of similar music. This endpoint leverages Spotify's vast database of millions of songs, artists, albums, and audio content to generate recommendations that match the musical style and characteristics of your selected seed. The radio feature analyzes audio attributes and listener patterns across Spotify's extensive catalog to create a continuous listening experience that maintains the vibe of your chosen artist or track.",
    "required_parameters": [
      {
        "name": "uri",
        "type": "STRING",
        "description": "Artist or song URI",
        "default": "spotify:artist:2w9zwq3AktTeYYMuhMjju8"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://spotify81.p.rapidapi.com/seed_to_playlist\"\nquerystring = {\"uri\": \"spotify:artist:2w9zwq3AktTeYYMuhMjju8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify81.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get radio playlist",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool output provides a reference to a single, personalized radio playlist generated by Spotify. The main piece of information is the playlist's unique Spotify URI, which is located within a `mediaItems` array. This URI can be used by other tools or applications to locate and play the specific radio playlist.",
      "output_format": "The output is a JSON object serialized as a string. It contains a top-level integer key `total` (which appears to always be 1) and a key `mediaItems`, which is an array. This array contains a single object, and that object holds the playlist's identifier under the `uri` key."
    },
    "connected tools": [
      {
        "tool name": "SoundCloud Scraper: Download Lyrics on Spotify (2 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "The playlist URI can be used to identify tracks for lyric retrieval"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Youtube Music API (Detailed)",
    "parent tool description": "Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.",
    "tool name": "Youtube Music API (Detailed): Get Song",
    "tool description": "Returns metadata and streaming information about a song or video, providing comprehensive details on the content's attributes and playback capabilities. This endpoint leverages the detailed YouTube Music API, which offers extensive access to music-related data including lyrics, trends, albums, artists, songs, users, and playlists across the YouTube Music platform. The returned information helps applications integrate with or analyze content from one of the world's largest music streaming services.",
    "required_parameters": [
      {
        "name": "video_id",
        "type": "STRING",
        "description": "",
        "default": "RS0FhoKAHvA"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://youtube-music-api-detailed.p.rapidapi.com/get_song\"\nquerystring = {\"video_id\": video_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get Song",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object containing detailed metadata and streaming information for a song or video from YouTube Music. This includes data such as content description, a list of countries where it's available, deep-linking information for mobile applications, and content category. The information is designed to help applications integrate with or analyze content from the YouTube Music platform.",
      "output_format": "The output is a single, deeply nested JSON object. The root key is 'microformat', which contains a 'microformatDataRenderer' object with the song's metadata. Fields can be strings, booleans, or arrays of strings (like 'availableCountries'). The provided examples are truncated, so the full structure is not visible."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use song title/artist information from YouTube Music API output"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Can use song title/artist information from YouTube Music API output"
          }
        ]
      },
      {
        "tool name": "SoundCloud Scraper: Download Lyrics on Spotify (2 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "Can use song information to find equivalent on SoundCloud"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Song Related",
        "connect params": [
          {
            "name": "browse_id",
            "description": "Can use browse_id if available in the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
        "default": "en"
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.",
        "default": "auto"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      },
      {
        "name": "timezone",
        "type": "STRING",
        "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
        "default": "auto"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/current\"\nquerystring = {\"language\": language, \"units\": units, \"lon\": lon, \"timezone\": timezone, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: current",
    "tool description": "Retrieves current weather conditions using GPS coordinates or a place_id from location endpoints, updated every 10 minutes. This leverages the parent tool's real-time weather data powered by machine learning models, drawing from a global network of weather stations to deliver accurate, hyper-local current conditions as part of a comprehensive weather data suite that includes historical records, statistics, and hour-by-hour forecasts.",
    "API name": "current",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool output provides the current weather conditions for a given location (specified by coordinates or place_id). A successful response includes location metadata (latitude, longitude, timezone) and a detailed 'current' object containing meteorological data like temperature, wind speed, precipitation, cloud cover, and UV index. The tool can also return an error object if the provided location is invalid or missing.",
      "output_format": "The output is a single JSON object. The structure depends on whether the call is successful or not. A successful response features a nested structure, where the main weather data is contained within a 'current' object, which in turn contains nested 'wind' and 'precipitation' objects. An error response is a simple, flat JSON object with a single 'detail' key explaining the error."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          },
          {
            "name": "timezone",
            "source_field": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          },
          {
            "name": "timezone",
            "source_field": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          },
          {
            "name": "timezone",
            "source_field": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          },
          {
            "name": "timezone",
            "source_field": "timezone"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "source_field": "latitude"
          },
          {
            "name": "longitude",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "source_field": "latitude"
          },
          {
            "name": "longitude",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [
      {
        "name": "text",
        "type": "STRING",
        "description": "Place name prefix to search for",
        "default": "fishermans wh"
      }
    ],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n\n",
        "default": "en"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix\"\nquerystring = {\"text\": text, \"language\": language}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: find_places_prefix",
    "tool description": "Searches for places by name prefix to retrieve a place_id and detailed geographical data (country, region, elevation, timezone, etc.) for use with Weather Forecast Endpoints. This endpoint enables precise location identification by accepting partial names and returning multiple results sorted by relevance, allowing selection via coordinates, country, region, or type. It leverages the parent tool's hyper-local weather forecasting capabilities, which combine real-time data and machine learning models to deliver historical weather, current conditions, and hour-by-hour forecasts, enhancing itinerary planning with accurate location-specific insights.",
    "API name": "find_places_prefix",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographical locations matching a search prefix. Each location in the list provides detailed data including its name, a unique `place_id`, administrative areas (state/province and county/municipality), country, and specific latitude/longitude coordinates. The output also includes the IANA timezone for the location, which is crucial for accurate weather forecasting. This information allows a user to identify and select the correct location from a list of possibilities for use in subsequent weather API calls.",
      "output_format": "The output is a JSON array of objects, with each object representing a distinct geographical location. Fields like `adm_area2` can be null if a secondary administrative area is not applicable. Latitude and longitude are provided as strings with cardinal direction suffixes (e.g., 'N', 'S', 'E', 'W'). The list appears to be sorted by relevance to the search query, but no explicit pagination or cursoring mechanism is visible in the examples."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Yahoo Finance_v2",
    "parent tool description": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "string",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/qu/quote/AAPL/insider-holders\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Yahoo Finance_v2: stock/insider-holders",
    "tool description": "Retrieves insider holder information for stocks, including transactions and holdings, based on a specified stock symbol. This endpoint is part of the Yahoo Finance API, which provides comprehensive data on stocks, options, ETFs, mutual funds, and news, leveraging real-time market information and historical financial records to offer insights into corporate ownership trends and investor behavior.",
    "API name": "stock/insider-holders",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool retrieves a list of corporate insider holders for a given stock symbol. For each insider, it provides their name, relationship to the company (e.g., Director, Officer), details about their latest transaction including the date and description, and their current share holdings. This data is useful for analyzing the trading behavior and ownership stakes of key individuals within a company.",
      "output_format": "The output is a single JSON object. The core information is a list of insider objects found under the path `body.holders`. Each insider object contains details about the individual. Numerical values and dates, such as `positionDirect` and `latestTransDate`, are often nested objects themselves, providing raw (e.g., Unix timestamp, integer), short-formatted (`fmt`), and long-formatted (`longFmt`) representations. The presence of specific holding fields like `positionDirect`, `positionIndirect`, or `positionSummary` can vary between different insiders within the list."
    },
    "connected tools": [
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the insider holders data can be used to retrieve historical insider transaction data."
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the insider holders data can be used to retrieve additional insider holder information."
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the insider holders data can be used to retrieve historical insider transaction data from the same company."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Alpha Email Verification",
    "parent tool description": "Email Validation Service. check if a specific e-mail address is valid. Is it a proper domain? Is the e-mail a temporary/disposable e-mail? Our API contains 180k disposable email domains and gives the most valid email",
    "required_parameters": [
      {
        "name": "email",
        "type": "string",
        "description": "",
        "default": "rahul@gmail.com"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://alpha-email-verification.p.rapidapi.com/disposable/{email}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"alpha-email-verification.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Alpha Email Verification: Email Checker",
    "tool description": "Checks if an email address provided by the user is valid and identifies if it's a disposable email. This uses a database of 180,000 disposable email domains to verify legitimacy and detect temporary addresses, ensuring accurate email validation.",
    "API name": "Email Checker",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "The tool's output specifies whether a given email address is identified as disposable. It provides a single boolean key, 'disposable', which is set to 'false' if the email is from a legitimate domain and would presumably be 'true' if it's from a known temporary or disposable email provider.",
      "output_format": "The output is a JSON array containing one or more strings. Each string is a string-encoded JSON object. This inner object contains a single key, \"disposable\", with a boolean value. The key appears to be non-nullable."
    },
    "connected tools": [
      {
        "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
        "connect params": [
          {
            "param_name": "domain",
            "description": "The domain extracted from the email address that was checked by Alpha Email Verification"
          }
        ]
      },
      {
        "tool name": "Email Existence Validator: Check for Disposable emails",
        "connect params": [
          {
            "param_name": "email",
            "description": "The email address that was checked by Alpha Email Verification"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Binance Futures Leaderboard",
    "parent tool description": "Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://binance-futures-leaderboard1.p.rapidapi.com/v1/getLeaderboardRank\"\nquerystring = {\"statisticsType\": \"\", \"isShared\": \"true\", \"tradeType\": \"\", \"periodType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-futures-leaderboard1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Binance Futures Leaderboard: get_leaderboard_rank",
    "tool description": "Retrieves a user's current rank on the Binance Futures Leaderboard by querying real-time data from the Binance Futures Exchange. This endpoint is part of the Binance Futures Leaderboard API, which provides traders with insights into their performance relative to others, leveraging live market data to ensure accuracy and timeliness in rankings.",
    "API name": "get_leaderboard_rank",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The output is a single numerical value representing a user's current rank on the Binance Futures Leaderboard. This number indicates the user's trading performance relative to other participants on the exchange. It is used to quickly assess a trader's competitive standing in real-time.",
      "output_format": "The output format is ambiguous due to the provided empty examples. It is most likely a single, raw integer value (e.g., 123) representing the rank. It is a singular, non-nested value and not part of a larger object or array."
    },
    "connected tools": [
      {
        "tool name": "Binance Futures Leaderboard: search_leaderboard",
        "connect params": [
          {
            "name": "isTrader",
            "description": "Include only copytraders"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "dcj9",
    "parent tool description": "dcj9-unh",
    "tool name": "dcj9: dcj9_test",
    "tool description": "Insufficient information provided. Both the tool description ('test') and parent tool description ('dcj9-unh') lack substantive content about the tool's functionality, purpose, or usage patterns needed to create a meaningful fused description.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "get_test",
        "type": "STRING",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://dcj9.p.rapidapi.com/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dcj9.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "dcj9_test",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "This tool outputs the HTML source code for a static web page. The content of the page appears to be a fixed template, featuring placeholder text like \"DATASCIENCE Title Here\", headers, an image, and a mailto link. Given the tool's name, 'dcj9_test', the output is likely intended for testing purposes, such as verifying HTML rendering or basic web service functionality.",
      "output_format": "The output is a single string containing standard HTML markup. All provided examples are identical, which suggests the tool consistently returns the same static content without variation."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Numbers",
    "parent tool description": "An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"",
    "tool name": "Numbers: Get random fact",
    "tool description": "Retrieves a random number fact without requiring any input. This uses an API that provides a wealth of interesting trivia, mathematical properties, date-related events, and historical year facts about numbers. For example, you might learn that '5 is the number of platonic solids', '42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo', or discover that 'February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over'.",
    "required_parameters": [
      {
        "name": "type",
        "type": "STRING",
        "description": "One of \"trivia\", \"math\", \"date\", or \"year\"",
        "default": "trivia"
      }
    ],
    "optional_parameters": [
      {
        "name": "min",
        "type": "STRING",
        "description": "Minimum number, inclusive",
        "default": "10"
      },
      {
        "name": "max",
        "type": "STRING",
        "description": "Maximium number, inclusive",
        "default": "20"
      },
      {
        "name": "fragment",
        "type": "STRING",
        "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.",
        "default": true
      },
      {
        "name": "json",
        "type": "STRING",
        "description": "Specify \"true\" to return result as JSON instead of plaintext.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://numbersapi.p.rapidapi.com/random/trivia\"\nquerystring = {\"min\": \"10\", \"max\": \"20\", \"fragment\": true, \"json\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbersapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get random fact",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object containing a random fact about a number. The object includes the descriptive fact as a text string, the number the fact is about, and the category of the fact (e.g., 'math', 'date', 'year'). For date-related facts, a 'year' key may also be present.",
      "output_format": "The output is a single, non-nested JSON object. It does not support pagination. Some keys appear to be conditional; for example, the 'year' key is only present in the 'date' type example. It is assumed that if the 'found' key is false, other data fields might be null, but this is not shown in the examples."
    },
    "connected tools": [
      {
        "tool name": "Numbers: Get math fact",
        "connect params": [
          {
            "param_name": "number",
            "description": "The number from the random fact could be used to get specific mathematical properties"
          }
        ]
      },
      {
        "tool name": "Numbers: Get trivia fact",
        "connect params": [
          {
            "param_name": "number",
            "description": "The number from the random fact could be used to get additional trivia about the same number"
          }
        ]
      },
      {
        "tool name": "Numbers: Get year fact",
        "connect params": [
          {
            "param_name": "year",
            "description": "If the random fact is about a year or contains a year value, it could be used to get more information about that year"
          }
        ]
      },
      {
        "tool name": "Numbers: Get date fact",
        "connect params": [
          {
            "param_name": "month",
            "description": "If the random fact is about a date, the month component could be extracted and used"
          },
          {
            "param_name": "day",
            "description": "If the random fact is about a date, the day component could be extracted and used"
          }
        ]
      },
      {
        "tool name": "Numbers Translator: Numbers Translator",
        "connect params": [
          {
            "param_name": "text",
            "description": "The number from the random fact could be translated into its word form"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: get abyssal dungeons",
    "tool description": "Retrieves a comprehensive list of all abyssal dungeons available in Lost Ark. This endpoint taps into a specialized API database containing detailed information about the popular MMORPG Lost Ark, allowing users to access specific game content data without having to manually search through in-game menus or external wikis. The returned information can be useful for players planning their progression, comparing dungeon requirements, or creating guides for the community.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/abyssalDungeons\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "get abyssal dungeons",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of all Abyssal Dungeons available in the game Lost Ark. The output details each dungeon's name, its constituent parts or wings, and the minimum item level required to enter each part. This information is intended to help players plan their progression and check gear requirements for specific content without consulting external sources.",
      "output_format": "The output is a string representation of a single, nested JSON object. The top-level keys are the names of the Abyssal Dungeons. Each dungeon key maps to an object containing a 'parts' key, which in turn holds another object. In this final nested object, keys are the names of the dungeon's sections, and their values are objects specifying the required 'itemLevel' as an integer."
    },
    "connected tools": [
      {
        "tool name": "Lost Ark: get raids by level",
        "connect params": [
          {
            "name": "level",
            "description": "Could use the item level requirements from abyssal dungeons to find raids with similar level requirements"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get a specific item",
        "connect params": [
          {
            "name": "name",
            "description": "Could search for items that match the minimum item level requirements from the abyssal dungeons"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get classes",
        "connect params": [
          {
            "description": "Could use the dungeon information to find suitable classes for specific abyssal dungeons based on item level progression"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get raids",
        "connect params": [
          {
            "description": "Could compare abyssal dungeon requirements with raid requirements for progression planning"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "DEI",
    "parent tool description": "The Diversity, Equity, and Inclusion (DEI) API offers the learning resources, conferences, stories and other information.",
    "tool name": "DEI: GetSamples",
    "tool description": "Retrieves success stories related to Diversity, Equity, and Inclusion (DEI) initiatives. This endpoint provides access to a collection of real-world examples and case studies showcasing successful DEI implementations, drawing from a comprehensive database of learning resources, conferences, and informational content focused on promoting diversity, equity, and inclusion across organizations and industries.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dei2.p.rapidapi.com/samples/page/{page}/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dei2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "GetSamples",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool provides a paginated list of success stories, case studies, and other content related to Diversity, Equity, and Inclusion (DEI). Each entry includes a title, excerpt, publication date, media type (e.g., video), and various URLs (source, web, original). This information is designed to offer real-world examples of successful DEI implementations from different providers like TIME and Fortune.",
      "output_format": "The successful output is a JSON object. This object contains a `value` key, which holds an array of sample objects. The response supports pagination, indicated by a top-level `page` key. In case of an error or if a resource is not found, the tool can return an HTML 404 error page instead of a JSON object."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Geocode - Forward and Reverse",
    "parent tool description": "Forward and reverse geocoding using Google Geocoding API.",
    "tool name": "Geocode - Forward and Reverse: Forward geocode",
    "tool description": "Converts a street address into precise latitude and longitude coordinates. This endpoint uses Google's Geocoding API to transform human-readable addresses into geographic coordinates that can be used for mapping, distance calculations, or location-based services. The service provides reliable forward geocoding capabilities backed by Google's extensive global location database.",
    "required_parameters": [
      {
        "name": "address",
        "type": "STRING",
        "description": "",
        "default": "2795 Hastings St, Vancouver, BC V5K 1Z8"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://geocode-forward-and-reverse.p.rapidapi.com/forward\"\nquerystring = {\"address\": address}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geocode-forward-and-reverse.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Forward geocode",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool output provides the precise geographic coordinates (latitude and longitude) corresponding to a given street address. In addition to the coordinates, it returns the full, standardized address as resolved by Google's service and a unique Google Place ID. This information is intended for use in mapping applications, location-based services, and distance calculations.",
      "output_format": "The output is a single JSON object containing string and numeric values. It features a nested object under the 'location' key, which holds the latitude ('lat') and longitude ('lng') as floating-point numbers. There is no indication of arrays, pagination, or cursoring, suggesting the tool returns a single best-fit result for each query."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The coordinates from the geocoding result in format 'longitude,latitude'"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The coordinates from the geocoding result in format 'longitude,latitude'"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The coordinates from the geocoding result in format 'longitude,latitude'"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The coordinates from the geocoding result in format 'longitude,latitude'"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "lon",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "Address From To Latitude Longitude: Coordinates  (latitude longitude) to Address",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "lng",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "lng",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/reversegeocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "lon",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Billboard API_v2",
    "parent tool description": "Billboard charts API: Weekly Billboard Hot 100, Weekly Billboard 200, Weekly Artist 100, Weekly Billboard Weekly Global 200, Weekly Catalog Albums, Weekly Independent Albums, Weekly Billboard U.S. Afrobeats Songs. Year End Hot 100 Songs, Year End Billboard 200 Albums, Year End Billboard  Global 200, Year End Top Artists, Year End Top Artists \u2013 Duo/Group, Year End Top Labels, Year End Top New Artists, Year End Top Artists \u2013 Male, Year End Top Artists \u2013 Female. \nAll Greatest of All Time Charts....",
    "tool name": "Billboard API_v2: Billboard U.S. Afrobeats Songs",
    "tool description": "Retrieves the weekly Billboard U.S. Afrobeats Songs chart data, defaulting to last week's rankings if no specific week is provided. If a date is supplied but isn't a Saturday, the system automatically adjusts to the Saturday of that week. This endpoint is part of the comprehensive Billboard charts API, which offers access to a wide range of music industry rankings including the Hot 100, Billboard 200, Artist 100, Global 200, and specialized charts like Catalog Albums and Independent Albums, along with various year-end rankings and Greatest of All Time charts that track artist, label, and song performance across different categories.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "week",
        "type": "DATE (YYYY-MM-DD)",
        "description": "",
        "default": "2022-10-08"
      }
    ],
    "code": "import requests\n\nurl = \"https://billboard-api5.p.rapidapi.com/api/charts/billboard-u-s-afrobeats-songs\"\nquerystring = {\"week\": \"2022-10-08\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"billboard-api5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Billboard U.S. Afrobeats Songs",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output provides the weekly Billboard U.S. Afrobeats Songs chart data. It returns a list of ranked songs, including details for each entry such as title, artist, cover art URL, and position metrics like last week's rank, peak position, and total weeks on the chart. The output also includes metadata for the specific chart week, along with links to the previous and next weeks' charts.",
      "output_format": "The output is a JSON object containing a primary 'chart' object. The core data is found in the 'chart.entries' key, which holds a JSON array of objects, each representing a song on the chart. Each song object includes a nested 'position' object that details its chart performance history."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use song titles or artist names from the Afrobeats chart as search queries"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query",
            "description": "Can use song titles or artist names from the Afrobeats chart as search queries"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Can use song titles or artist names from the Afrobeats chart as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "market",
        "type": "STRING",
        "description": "",
        "default": "Tenerife"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "Number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/countByMarket\"\nquerystring = {\"market\": market, \"bedrooms\": bedrooms, \"maxGuestCapacity\": maxguestcapacity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Count listings by market",
    "tool description": "Retrieves the count of Airbnb listings in a specified market, filtered by bedrooms and maximum guest capacity. This endpoint is part of a comprehensive service providing real-time access to Airbnb data, including listing details, future prices, availability, and reviews. By leveraging a database of listings updated daily, it enables users to analyze accommodation trends and make data-driven decisions, supported by 24-hour response times for inquiries and scalability for detailed market insights.",
    "API name": "Count listings by market",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides the total count of Airbnb listings within a specific market, based on filters like the number of bedrooms and guest capacity. This numerical count, along with a unique request ID, allows users to quantify the accommodation supply in a given area. The information is primarily used for market analysis and tracking accommodation trends.",
      "output_format": "The output is a JSON object containing a `requestId` string and a `results` key. The `results` key holds a JSON array that consistently contains a single object. This nested object has one key, `totalListings`, whose value is a string representing the total count."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The count of listings could inform destination selection based on accommodation availability"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The market parameter can use the same market value that generated the count"
          },
          {
            "name": "bedrooms",
            "description": "The bedrooms filter can match what was used in the count query"
          },
          {
            "name": "maxGuestCapacity",
            "description": "The guest capacity filter can match what was used in the count query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ln\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30, \"format\": \"json\", \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: LN",
    "tool description": "The Natural Logarithm (LN) endpoint transforms data points using the natural logarithm, applying this mathematical function to financial data provided by the Twelve Data API. This allows developers to normalize and analyze real-time and historical financial data\u2014such as stock prices, forex rates, and crypto metrics\u2014enabling more accurate trend identification and modeling. By leveraging the API's extensive dataset, including real-time and historical data across multiple asset classes, the endpoint empowers developers to perform advanced analytics and insights, streamlining complex financial data processing workflows.",
    "API name": "LN",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output is a time-series of natural logarithm values for a specific financial instrument, such as a stock, forex pair, or cryptocurrency. Each data point includes a timestamp and its corresponding natural logarithm value. The output also contains a metadata object that provides context, including the instrument's symbol, the time interval between data points, and the type of asset.",
      "output_format": "The output is a single JSON object containing two main keys: 'meta' and 'values'. The 'meta' key holds an object with descriptive metadata. The 'values' key holds a JSON array of data point objects. Each data point object consists of a 'datetime' string and an 'ln' string, which represents the numerical logarithm value. The examples do not indicate any pagination or cursoring mechanisms."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: ADD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DIV",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EXP",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MULT",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUB",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: WMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DEMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: TEMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: TRIMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: KAMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MAMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: T3MA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SQRT",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LN metadata"
          },
          {
            "name": "interval",
            "description": "Can use the interval from the LN metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Bybit",
    "parent tool description": "Public Data Bybit. Cryptocurrency prices and charts. Derivatives, Futures, Spot, USDC Contract",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Symbol",
        "default": "BTCUSDT"
      },
      {
        "name": "category",
        "type": "STRING",
        "description": "Derivatives products category. For now, *linear* *inverse* *option* are available",
        "default": "linear"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Optional value 25 or 500. Default 25.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://bybit4.p.rapidapi.com/derivatives/v3/public/order-book/L2\"\nquerystring = {\"symbol\": symbol, \"category\": category}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bybit4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Bybit: Get Order Book",
    "tool description": "Retrieves the orderbook data with a depth of 25 on each side, supporting up to 500 orders. This is part of Bybit's Public Data service, which provides cryptocurrency prices, charts, and derivatives information including Futures, Spot, and USDC Contracts, enabling traders to analyze market depth and make informed decisions based on real-time liquidity details.",
    "API name": "Get Order Book",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool output provides real-time order book data for a specific cryptocurrency pair. The primary data includes a list of buy orders (bids) and sell orders (asks), with each order represented by its price and quantity. This information allows users to assess market depth, liquidity, and the current supply and demand for the asset.",
      "output_format": "The output is a JSON object. The core order book data is nested within the 'result' key, which contains 'b' (bids) and 'a' (asks) as arrays of arrays. Each inner array is a pair of [price, quantity], with both values represented as strings. The root object also includes API status codes and timestamps. The output can be an empty string, likely in case of an error or if no data is available."
    },
    "connected tools": [
      {
        "tool name": "Bybit: Contract Info",
        "connect params": [
          {
            "name": "symbol",
            "description": "The order book data can provide the symbol name to query specific contract information"
          }
        ]
      },
      {
        "tool name": "Bybit: Latest Symbol Info",
        "connect params": [
          {
            "name": "symbol",
            "description": "The order book data can provide the symbol name to query detailed symbol information"
          }
        ]
      },
      {
        "tool name": "Bybit: Merged Order Book",
        "connect params": [
          {
            "name": "symbol",
            "description": "The order book data can provide the symbol name to query a merged view of the order book"
          }
        ]
      },
      {
        "tool name": "Bybit: Get Open Interest",
        "connect params": [
          {
            "name": "symbol",
            "description": "The order book data can provide the symbol name to query open interest information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Alpha Vantage",
    "parent tool description": "The simplest and most effective way to receive stock, ETF, forex, technical indicators, and cryptocurrency data.  Constantly ranked as a leading API provider for ease of use, accuracy, and price. [See the documentation](https://www.alphavantage.co/documentation/) and [read more](https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631) on the market data industry.  [Start now for free](https://www.alphavantage.co/support/#api-key).",
    "required_parameters": [
      {
        "name": "function",
        "type": "STRING",
        "description": "The time series of your choice.",
        "default": "FX_WEEKLY"
      },
      {
        "name": "from_symbol",
        "type": "STRING",
        "description": "A three-letter symbol from the forex currency list. For example: from_symbol=EUR",
        "default": "EUR"
      },
      {
        "name": "to_symbol",
        "type": "STRING",
        "description": "A three-letter symbol from the forex currency list. For example: to_symbol=USD",
        "default": "USD"
      }
    ],
    "optional_parameters": [
      {
        "name": "datatype",
        "type": "STRING",
        "description": "By default, datatype=json. Strings json and csv are accepted with the following specifications: json returns the weekly time series in JSON format; csv returns the time series as a CSV (comma separated value) file.",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://alpha-vantage.p.rapidapi.com/query\"\nquerystring = {\"function\": function, \"from_symbol\": from_symbol, \"datatype\": datatype, \"to_symbol\": to_symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"alpha-vantage.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Alpha Vantage: FX_WEEKLY",
    "tool description": "Returns the weekly time series (timestamp, open, high, low, close) for a specified FX currency pair, updated in real-time with the latest data point reflecting the current trading week. This endpoint is part of a comprehensive financial data API that delivers stock, ETF, forex, technical indicators, and cryptocurrency data, leveraging real-time updates and a robust infrastructure to ensure accuracy and reliability for informed decision-making.",
    "API name": "FX_WEEKLY",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides weekly time series data for a specified foreign exchange (FX) currency pair. It consists of two main parts: metadata, which includes the currency pair symbols and the last refresh timestamp, and the time series data itself. The time series is a collection of weekly open, high, low, and close (OHLC) prices, intended for financial analysis, charting, and identifying market trends over a weekly timeframe.",
      "output_format": "The output is a single JSON object. This object contains a 'Meta Data' object and a 'Time Series FX (Weekly)' object. The 'Time Series FX (Weekly)' object acts as a dictionary where each key is a date string (YYYY-MM-DD) representing the start of a week, and the value is another object containing the 'open', 'high', 'low', and 'close' prices for that week. All price values are returned as strings."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides FX currency pair data that can be used as input for technical analysis"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Customizable Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The FX currency pair from the source tool can be used as input for custom queries"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The FX currency pair from the source tool can be used as input for time series analysis"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_DAILY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "The source tool provides FX currency pair data that can be split to use as from_symbol"
          },
          {
            "name": "to_symbol",
            "description": "The source tool provides FX currency pair data that can be split to use as to_symbol"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_MONTHLY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "The source tool provides FX currency pair data that can be split to use as from_symbol"
          },
          {
            "name": "to_symbol",
            "description": "The source tool provides FX currency pair data that can be split to use as to_symbol"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: FX_INTRADAY",
        "connect params": [
          {
            "name": "from_symbol",
            "description": "The source tool provides FX currency pair data that can be split to use as from_symbol"
          },
          {
            "name": "to_symbol",
            "description": "The source tool provides FX currency pair data that can be split to use as to_symbol"
          }
        ]
      },
      {
        "tool name": "Exchange Rate API: Convert currency",
        "connect params": [
          {
            "name": "base",
            "description": "The source tool provides FX currency pair data that can be split to use as base currency"
          },
          {
            "name": "target",
            "description": "The source tool provides FX currency pair data that can be split to use as target currency"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/obv\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"series_type\": \"close\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: OBV",
    "tool description": "The On Balance Volume (OBV) endpoint generates a momentum indicator by analyzing volume flow to forecast upcoming price changes. This is part of the Financial Data API, which provides developers with instant access to real-time and historical data across stocks, forex, crypto, ETFs, and indices. By leveraging the platform's comprehensive dataset, OBV helps traders identify potential market trends through volume analysis, offering actionable insights for informed decision-making.",
    "API name": "OBV",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides On Balance Volume (OBV) time series data for a specified financial instrument, such as a stock, forex pair, or cryptocurrency. The output includes metadata about the instrument (symbol, interval, type) and a list of historical data points, each containing a datetime and its corresponding OBV value. This information is used by traders as a momentum indicator to analyze volume flow and forecast potential price changes.",
      "output_format": "The output is a single JSON object containing two top-level keys: `meta` and `values`. `meta` is an object with metadata about the request. `values` is an array of objects, where each object represents a data point with a `datetime` string and an `obv` value, which is also a string. The format of the `datetime` string can vary (e.g., 'YYYY-MM-DD' or 'YYYY-MM-DD HH:MM:SS') depending on the requested time interval. The fields within the `meta` object may differ slightly based on the asset type (e.g., stocks vs. currency pairs)."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The OBV output contains symbol information in the meta object that can be used to query the same instrument"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the OBV output's meta object can be used to analyze the same security with different technical indicators"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the OBV output can be used to perform additional technical analysis on the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the OBV output can be used to calculate RSI for the same instrument to complement volume analysis with momentum indicators"
          }
        ]
      },
      {
        "tool name": "Twelve Data: VWAP",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the OBV output can be used to calculate VWAP, which pairs well with OBV for volume-based analysis"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the OBV output can be used to get current price quotes for the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the OBV output can be used to calculate Bollinger Bands, which can be analyzed alongside OBV for comprehensive technical analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MFI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the OBV output can be used to calculate Money Flow Index, which complements OBV as another volume-based indicator"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Email Existence Validator",
    "parent tool description": "API which checks if email really exist on server or not.\nIt check for different parameters for giving end results .\nCheck for MX records, SMTP deliverability, Disposable check and many more.",
    "tool name": "Email Existence Validator: Get the MX Records",
    "tool description": "Retrieves MX (Mail Exchange) records associated with a given email address. This endpoint is part of an email verification API that checks if an email truly exists on a server by examining multiple parameters including MX records, SMTP deliverability, and disposable email detection. The service analyzes the domain's mail server configuration to help determine email validity as part of a comprehensive verification process.",
    "required_parameters": [
      {
        "name": "email",
        "type": "STRING",
        "description": "",
        "default": "example@gmail.com"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://email-existence-validator.p.rapidapi.com/getmx\"\nquerystring = {\"email\": email}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"email-existence-validator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get the MX Records",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "The output provides the results of a Mail Exchange (MX) record lookup for a given email's domain. It includes the status of the request, a timestamp, and the MX records themselves. When records are found, they are presented as a list of servers and their corresponding priority numbers. If no records are found, a descriptive string message is provided instead.",
      "output_format": "The output is a single JSON object. The `mx` key is polymorphic: its value is an array of arrays when records are found (e.g., [[priority, server_name], ...]), but it becomes a single string when no records are found or a DNS error occurs. There is no pagination."
    },
    "connected tools": [
      {
        "tool name": "Easy Email Validation: Validate Email",
        "connect params": [
          {
            "name": "email",
            "description": "The email address whose domain's MX records were retrieved by the source tool"
          }
        ]
      },
      {
        "tool name": "Email Address Validator: Validate Email Address",
        "connect params": [
          {
            "name": "email",
            "description": "The email address whose domain's MX records were retrieved by the source tool"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: email Check SMTP",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain from the email whose MX records were retrieved by the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Airline data in json format",
    "tool description": "Returns a file containing a comprehensive list of airlines from the database. This endpoint is part of the Travelpayouts Data API, which provides valuable travel insights for websites and blogs, allowing you to access flight price trends and discover popular destinations that would appeal to your customers. The airline data serves as a foundation for analyzing travel patterns and presenting relevant flight options to users.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/en-GB/airlines.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Airline data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airlines in a JSON array format. Each object in the array represents an airline and contains its unique code, a boolean flag indicating if it is a low-cost carrier, and its name translated into English. This data is intended to be used as a foundational reference for flight-related applications or travel data analysis.",
      "output_format": "The output is a JSON array of objects. Each object has a `name` field (which can be null), a string `code`, a boolean `is_lowcost` flag, and a nested `name_translations` object. The `name_translations` object contains the airline's name in English under the 'en' key."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airlineSearch",
        "connect params": [
          {
            "param_name": "iata",
            "description": "The IATA code of the airline"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline"
          },
          {
            "param_name": "name",
            "description": "The name or part of the name of the airline, case insensitive"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineInfo",
        "connect params": [
          {
            "param_name": "iata",
            "description": "The IATA code of the airline, must have a length of 3"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4"
          },
          {
            "param_name": "name",
            "description": "The name of the airline. Not case sensitive"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineStatistics",
        "connect params": [
          {
            "param_name": "iata",
            "description": "The IATA code of the airline, must have a length of 3"
          },
          {
            "param_name": "icao",
            "description": "The ICAO code of the airline, must have a length of 4"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "param_name": "flnr",
            "description": "The flight number to request"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Miza",
    "parent tool description": "A multipurpose API that includes many image, video, and audio operations. Please see https://ko-fi.com/mizabot if you'd like premium features on the Discord bot itself!",
    "tool name": "Miza: Song search",
    "tool description": "Searches for songs across popular music platforms including YouTube (default), SoundCloud (prefix with *scsearch:*), Spotify (prefix with *spsearch:*), or BandCamp (prefix with *bcsearch:*). This endpoint is part of a multipurpose API that handles various image, video, and audio operations, and uniquely offers unlimited free usage when accessed directly through http://i.mizabot.xyz/ytdl?search= instead of the RapidAPI forwarded URL. While other endpoints in this service have rate limits for direct access, this search functionality remains unrestricted, making it particularly valuable for audio discovery needs.",
    "required_parameters": [
      {
        "name": "search",
        "type": "STRING",
        "description": "",
        "default": "Despacito"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://miza.p.rapidapi.com/ytdl\"\nquerystring = {\"search\": search}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"miza.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Song search",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a list of songs based on a search query. For each song found, it provides the title, a direct URL to the content on its host platform (e.g., YouTube, SoundCloud), the duration in seconds, and a URL for a thumbnail icon. The output is intended for audio discovery, enabling users to find and access songs across multiple services.",
      "output_format": "The primary output is a string-serialized JSON array. Each element in the array is an object representing a single song with string keys: 'name', 'url', 'icon', and a float key 'duration'. The tool can return multiple results in the array. One output example contains raw binary data for a JPEG image, which is inconsistent with the others and may be an erroneous response or an undocumented alternative output type (e.g., fetching the icon directly)."
    },
    "connected tools": [
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Can use the URL from song search results to trim or extend the song"
          }
        ]
      },
      {
        "tool name": "Miza: Song concatenation",
        "connect params": [
          {
            "name": "u1",
            "description": "Can use the URL from song search results as the first song to concatenate"
          },
          {
            "name": "u2",
            "description": "Can use the URL from song search results as the second song to concatenate"
          },
          {
            "name": "u3",
            "description": "Can use the URL from song search results as the third song to concatenate"
          }
        ]
      },
      {
        "tool name": "Miza: Retrieve file",
        "connect params": [
          {
            "name": "path",
            "description": "Can use path information extracted from the song URL"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Can use the song name from search results to search for more details"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the song name from search results to search on Spotify"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Song",
        "connect params": [
          {
            "name": "video_id",
            "description": "Can extract YouTube video ID from YouTube URLs in search results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Kubric: The Comprehensive Movie News API",
    "parent tool description": "Stay up-to-date with Kubric, your ultimate movie news API. Access top sources, search by title or keyword, and experience visually engaging cinema updates and insights.",
    "tool name": "Kubric: The Comprehensive Movie News API: Sources",
    "tool description": "Returns the sources used for articles based on your current subscription tier. This endpoint leverages Kubric's comprehensive movie news API, which aggregates content from top industry sources to deliver cinema updates and insights. Your tier level determines which source attributions are accessible, allowing you to track information origins while staying up-to-date with the latest film industry news, reviews, and developments through this visually engaging platform.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kubric-the-comprehensive-movie-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Sources",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of movie news sources that are available based on the user's subscription tier. For each source, the output provides a unique ID, name, base and search URLs, and the name of the access tier. This allows users to identify the origin of news content and understand which sources are included in their plan.",
      "output_format": "The output is a JSON object containing a 'body' key. The value of 'body' is a JSON array where each element is an object representing a single news source. Each source object contains a nested 'urls' object."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Flixbus",
    "parent tool description": "A service that provides flixbus travel search, available cities, stations, timetables and routes. Site: www.flixbus.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
    "tool name": "Flixbus: cities",
    "tool description": "Retrieves a comprehensive list of cities served by Flixbus transportation network. This endpoint connects to Flixbus's extensive travel service database (www.flixbus.com), allowing you to access all available departure and destination cities within their intercity bus and train network. The data provided forms the foundation for searching routes, timetables, and available stations across Flixbus's European and international transportation system.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flixbus.p.rapidapi.com/v1/cities\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "cities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a comprehensive list of all cities served by the Flixbus transportation network. Each entry in the list is a city object containing details like its name, unique ID, geographic coordinates, country, and a list of associated station and route pair IDs. This information serves as a foundational dataset for discovering available destinations and for use in subsequent route and timetable searches.",
      "output_format": "The output is a JSON array of objects, with each object corresponding to a city. The city object contains nested objects for 'coordinates' and 'country', and arrays of integers for 'stations' and 'pairs'. The examples do not show any pagination or cursoring mechanism, suggesting the entire list of cities is returned in a single response."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude coordinates from Flixbus: cities output"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude coordinates from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "param_name": "string",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      }
    ]
  }
]