[
  {
    "parent tool name": "AI News - Global",
    "parent tool description": "Global News produced by AI",
    "required_parameters": [
      {
        "name": "region",
        "type": "string",
        "description": "One of the region's key code in the list of **Get Regions** method.",
        "default": "us"
      },
      {
        "name": "version",
        "type": "string",
        "description": "",
        "default": "v1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ai-news-global.p.rapidapi.com/get_news/v1/us\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-news-global.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "AI News - Global: Get News",
    "tool description": "Retrieves region-specific news updates by leveraging the AI-powered Global News platform, which analyzes global data sources to deliver personalized content based on user-selected regions. This endpoint uses advanced machine learning models trained on diverse international publications and real-time feeds to curate relevant stories, enabling users to stay informed about local events and global developments in their specified geographic areas.",
    "API name": "Get News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a dictionary where keys represent news categories (e.g., 'business', 'general') and the values contain the news data for that category. When successful, the value is a JSON string containing a list of articles, each with a title, description, source, and URL. However, the tool is unreliable and frequently returns HTML error pages or empty strings instead of the expected JSON data.",
      "output_format": "The output is a string representation of a dictionary. The dictionary's keys are news categories. The values are highly inconsistent; they can be a JSON string, an empty string, or an HTML string (typically a Cloudflare security challenge page). When the value is a valid JSON string, it contains an object with a status, total results count, and an array of 'articles' objects. Fields within an article object, such as 'author' or 'content', can be null."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles or keywords from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location information from news articles to get region-specific coronavirus news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie titles or related keywords extracted from entertainment news articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or topics from news articles to find related news"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords or topics from news articles to search for related Cameroon news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "apple"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/search\"\nquerystring = {\"q\": \"apple\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "BizToc: Search",
    "tool description": "Searches the BizToc.com API's comprehensive business and finance news index from the last 14 days, requiring all provided search terms without support for operators. As the web's most extensive hub for financial and business news, it delivers timely, curated content to keep users informed.",
    "API name": "Search",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of business and finance news articles that match the search query. Each article in the list provides a title, a body snippet, the source domain, a publication timestamp, a relevance score, and a direct URL. The output is intended to provide users with timely and relevant news content from a wide range of financial news sources.",
      "output_format": "The output is a string containing a JSON array of objects. Each object represents a single news article. Not all fields are guaranteed to be present in every object; for example, the 'img' object (which contains image URLs) can be absent."
    },
    "connected tools": [
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles or keywords from BizToc search results to search for related movie news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or phrases from BizToc search results to find related news"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords from BizToc search results to search Cameroon news"
          }
        ]
      },
      {
        "tool name": "Medium: /stories/{topic}",
        "connect params": [
          {
            "name": "topic",
            "description": "Can use topics or keywords from BizToc search results to find related Medium stories"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use keywords or topics from BizToc search results as tags to search India Today news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "required_parameters": [
      {
        "name": "page_id",
        "type": "string",
        "description": "",
        "default": "main"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/tags/main\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "BizToc: Tags / Trending",
    "tool description": "Retrieves a list of trending tags for a specified {page_id}, sorted by popularity, which can then be utilized with the Tag/News endpoint. This endpoint is part of the Official BizToc.com API, the Web's most comprehensive hub for business and finance news, leveraging BizToc's extensive database to provide real-time trending tags that enhance user navigation and content discovery.",
    "API name": "Tags / Trending",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of trending tags related to business, finance, and technology news, sorted by popularity. Each item in the list is an object containing a single string tag. These tags provide a real-time overview of popular topics and are intended to be used with other tools to retrieve specific news articles.",
      "output_format": "The output is a JSON array of objects. Each object has a single key, \"tag\", whose value is a string. The top-level array can be empty (`[]`) if no trending tags are available for the specified page. There is no pagination or cursoring information in the output."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Uses a trending tag from the source tool as a search query to find relevant business news"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Uses a trending tag from the source tool to search for related news articles on India Today"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Uses a trending tag from the source tool as a search query for movie-related news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Uses a trending tag from the source tool as a keyword to search for relevant news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "required_parameters": [
      {
        "name": "page_id",
        "type": "string",
        "description": "",
        "default": "main"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/news/latest/main\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "BizToc: News / Latest / Page",
    "tool description": "Retrieves the latest news stories in chronological order, filtered by {page_id}, utilizing the Official BizToc.com API\u2014The Web's most comprehensive hub for business & finance news\u2014to deliver structured, up-to-date information tailored to specific topics or regions.",
    "API name": "News / Latest / Page",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of recent news articles. Each article in the list is represented as an object containing its title, a body or preview text, the source domain, creation timestamp, a URL to the full story, and associated tags. This output provides a structured feed of the latest business and finance news.",
      "output_format": "The output is a JSON array of objects. Each object corresponds to a single news article. The array can be empty if no news is found. Some fields within an article object, like `img` or `body_preview`, can be null or empty. The `img` field, when present, is a nested object containing URLs for various image sizes. The tool's description implies pagination is handled via the `{page_id}` parameter."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or keywords from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or keywords from business news articles related to entertainment/movies"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use titles or keywords from news articles as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "required_parameters": [
      {
        "name": "source_id",
        "type": "string",
        "description": "",
        "default": "bbc"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/news/source/bbc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "BizToc: News / Source",
    "tool description": "Retrieves the latest news stories for a specific {source_id} in chronological order. This endpoint is part of the Official BizToc.com API, the web's most comprehensive hub for business and finance news, providing timely and organized access to curated content from verified sources.",
    "API name": "News / Source",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of the latest business and finance news articles from a specific source. Each article in the list includes a title, a snippet of the body text, a publication timestamp, a URL to the full article, and an optional object containing links to associated images.",
      "output_format": "The output is a JSON array of objects. Each object represents a news article. The `img` field is nullable and will be null if no image is available. The key for the article's text snippet is inconsistent, appearing as `body` in some examples and `body_preview` in others."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search term from article title or body text"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search term from article title or body text"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Search term from article title or body text"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Search term from article title or body text"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Coronavirus Smartable",
    "parent tool description": "The coronavirus Stats and News API offers the latest and historic COVID-19 stats and news information per country or state. ",
    "required_parameters": [
      {
        "name": "location",
        "type": "string",
        "description": "ISO 3166-2 location code.  For example, use \"FR\" for coronavirus news in France; use \"US\" for coronavirus news in US;  use \"US-CA\" for coronavirus news in the US California state.  Use \"global\" to retrieve global news. ",
        "default": "US"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://coronavirus-smartable.p.rapidapi.com/news/v1/US/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"coronavirus-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Coronavirus Smartable: GetNews",
    "tool description": "Retrieves the latest coronavirus news for global, country, or state-level regions. This is part of the Coronavirus Stats and News API, which provides up-to-date and historical COVID-19 statistics and news information, offering critical insights for tracking the pandemic's impact and developments worldwide.",
    "API name": "GetNews",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of recent coronavirus-related news articles. The output is structured around a specific location (country, state, or global), providing geographical context alongside the news. Each news item includes a title, excerpt, URL to the full article, publication date, and details about the source provider.",
      "output_format": "The output is a single JSON object. This object contains a `location` object and a `news` key, which holds a JSON array of news article objects. The `location` object's fields can be null if the query is global. Fields within each news article object, such as `images` or `updatedDateTime`, can also be null."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use coronavirus news topics or keywords from the source output"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for movie news related to coronavirus topics from the source output"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can search for coronavirus news using topics or locations from the source output"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetStats",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location information from the news output to get corresponding statistics"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Coronavirus Smartable",
    "parent tool description": "The coronavirus Stats and News API offers the latest and historic COVID-19 stats and news information per country or state. ",
    "required_parameters": [
      {
        "name": "location",
        "type": "string",
        "description": "ISO 3166-2 location code.  For example, use \"FR\" for coronavirus stats in France; use \"US\" for coronavirus stats in US;  use \"US-CA\" for coronavirus stats in the US California state.  Use \"global\" to retrieve global stats. ",
        "default": "US"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://coronavirus-smartable.p.rapidapi.com/stats/v1/US/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"coronavirus-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Coronavirus Smartable: GetStats",
    "tool description": "Retrieves the latest and historic coronavirus statistics, including confirmed cases, deaths, and recovered cases, for global or specific country/state regions. This endpoint is part of the Coronavirus Stats and News API, which provides comprehensive COVID-19 data and updates, drawing from real-time databases and historical records to support informed decision-making and situational awareness.",
    "API name": "GetStats",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns current and historical COVID-19 statistics for a specified location, which can be global, a country, or a state/province. The output includes the most recent totals for confirmed cases, deaths, and recoveries, alongside the number of new cases since the last update. It also provides a detailed daily history of these metrics, allowing for time-series analysis of the pandemic's progression in the requested region.",
      "output_format": "The output is a single JSON object. It contains a nested `location` object and a `stats` object. The `stats` object holds the primary data, including integer values for the latest case counts and a `history` key. The `history` key contains an array of objects, where each object represents a daily data point with a date string and integer counts. The `location` object's fields can be null, particularly for global queries."
    },
    "connected tools": [
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "The source tool provides location data that can be used to fetch news for the same region"
          }
        ]
      },
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use COVID-19 statistics to search for related business news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Election2020 Smartable",
    "parent tool description": "The Election API offers the 2020 U.S. election news, events, important people, FAQs, and other information. The data is tagged with democratic voice and republican voice, so it's up to the user to decide which opinion to follow.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://election2020-smartable.p.rapidapi.com/people/page/1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"election2020-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Election2020 Smartable: GetPeople",
    "tool description": "Retrieves 2020 U.S. election politicians and influencers, including their political affiliations, key issues, and influence metrics. This endpoint is part of the Election API, which aggregates comprehensive election data such as news, events, FAQs, and critical figures, with all content tagged by democratic or republican perspectives to enable users to analyze information through specific ideological lenses.",
    "API name": "GetPeople",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of political figures and influencers related to the 2020 U.S. election. The data is organized into collections, such as 'Democratic Senators'. For each individual, the output provides their name, a short biography, associated topics, an influence metric ('heat'), and profile images.",
      "output_format": "The primary output is a JSON object. It contains a top-level key, 'value', which is an array of 'collection' objects. Each collection object has a nested array, 'topItems', containing profiles of individuals. A 'page' key at the root level suggests that the results are paginated. In case of an error, the tool may return an HTML 'Page not found' page instead of a JSON object."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use politician names from GetPeople output to search for business/finance news about specific political figures"
          }
        ]
      },
      {
        "tool name": "Election2020 Smartable: GetPeopleByTopic",
        "connect params": [
          {
            "name": "topic",
            "description": "Can use topics associated with politicians from GetPeople output to find related political figures"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use politician names from GetPeople output to search for movie news related to these political figures"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use politician names or associated topics from GetPeople output as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Election2020 Smartable",
    "parent tool description": "The Election API offers the 2020 U.S. election news, events, important people, FAQs, and other information. The data is tagged with democratic voice and republican voice, so it's up to the user to decide which opinion to follow.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://election2020-smartable.p.rapidapi.com/events/page/1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"election2020-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Election2020 Smartable: GetEvents",
    "tool description": "Retrieves structured data on 2020 U.S. election events, including dates, locations, and key participants. This endpoint is part of the Election API, which provides comprehensive election-related information such as news, FAQs, and profiles of important figures, with content tagged by democratic and republican perspectives to help users navigate political contexts.",
    "API name": "GetEvents",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool retrieves a list of events related to the 2020 U.S. election. For each event, it provides structured details such as the title, a descriptive excerpt, start and end datetimes, location, and associated URLs. The output is intended to be used for tracking key dates and activities during the election cycle, like debates or Election Day itself.",
      "output_format": "The successful output is a single JSON object containing a `value` key, which holds an array of event objects. The top-level object includes a `page` number, indicating the results are paginated. Each event object within the array is richly detailed and may contain nested objects (e.g., `provider`) and arrays (e.g., `images`). In case of an error or if a resource is not found, the tool returns an HTML string for a 404 error page instead of JSON."
    },
    "connected tools": [
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use event titles or key terms from the events as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Election2020 Smartable",
    "parent tool description": "The Election API offers the 2020 U.S. election news, events, important people, FAQs, and other information. The data is tagged with democratic voice and republican voice, so it's up to the user to decide which opinion to follow.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      },
      {
        "name": "topic",
        "type": "string",
        "description": "",
        "default": "republican-voice"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://election2020-smartable.p.rapidapi.com/people/republican-voice/page/1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"election2020-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Election2020 Smartable: GetPeopleByTopic",
    "tool description": "Retrieves individuals related to a specific topic within the 2020 U.S. election context, such as candidates, officials, or influencers. This endpoint leverages the Election API's dataset, which aggregates 2020 U.S. election news, events, and key figures tagged with democratic and republican perspectives, to surface relevant people based on user-defined topics. By filtering and organizing data through political lenses, it enables users to explore election-related individuals and their affiliations with contextual clarity.",
    "API name": "GetPeopleByTopic",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool retrieves collections of people and individual profiles related to a specific topic within the 2020 U.S. election. The output includes lists of individuals (e.g., Democratic Senators) with details for each person, such as their name, biography, associated topics, and profile images. This information is intended to help users research and understand the key figures involved in the election.",
      "output_format": "The successful output is a JSON object containing a top-level key 'value', which is an array of objects. Each object in the array represents a collection of people and contains a nested array 'topItems' with profiles for each individual. However, the tool can also return an HTML 404 error page if the requested resource is not found, indicating that not all calls will result in a JSON response."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use person names from the GetPeopleByTopic output to search for business/finance news about specific election figures"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use person names from GetPeopleByTopic to search for movie news related to political figures"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use person names from GetPeopleByTopic as keywords to find relevant news articles"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Goverlytics",
    "parent tool description": "The Goverlytics API.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "",
        "default": ""
      },
      {
        "name": "active",
        "type": "BOOLEAN",
        "description": "",
        "default": ""
      },
      {
        "name": "province",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "municipality",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "level_of_government",
        "type": "ENUM",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://goverlytics1.p.rapidapi.com/politicians\"\nquerystring = {\"offset\": \"\", \"limit\": \"\", \"active\": \"\", \"province\": \"\", \"municipality\": \"\", \"level_of_government\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"goverlytics1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Goverlytics: politicians",
    "tool description": "Retrieves a list of politicians' data, including details like name, position, and affiliation. This endpoint is part of the Goverlytics API, which provides comprehensive political data and insights. It leverages a database of political figures and official records to deliver accurate, up-to-date information, enabling users to analyze political landscapes, track affiliations, and access detailed profiles efficiently.",
    "API name": "politicians",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of politicians from various levels of government, including federal, provincial, and municipal. Each politician's record contains their name, role (e.g., Member of Parliament, Councillor), party affiliation, and contact information. The output also includes jurisdictional details like constituency, country, or municipality, along with a unique ID and a URL to their official profile.",
      "output_format": "The output is a JSON object with a top-level key `data` that contains an array of objects. Each object in the array represents a single politician. The fields within each politician object are not consistent across all records; some fields like `role`, `party`, `constituency`, `province`, `country`, and `phone` appear to be optional or context-dependent based on the politician's level of government."
    },
    "connected tools": [
      {
        "tool name": "Goverlytics: politician/{goverlytics_id}",
        "connect params": [
          {
            "name": "goverlytics_id",
            "description": "The unique ID of a politician from the politicians list"
          }
        ]
      },
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search for news about a specific politician by name"
          }
        ]
      },
      {
        "tool name": "Election2020 Smartable: GetPeople",
        "connect params": [
          {
            "name": "page",
            "description": "Page number for retrieving politicians data"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search for movie news related to a politician"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Search for news about a specific politician by name"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Goverlytics",
    "parent tool description": "The Goverlytics API.",
    "required_parameters": [
      {
        "name": "goverlytics_id",
        "type": "string",
        "description": "",
        "default": "437c7e15-c66a-4b46-af9b-07e9b1317190"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://goverlytics1.p.rapidapi.com/politician/437c7e15-c66a-4b46-af9b-07e9b1317190\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"goverlytics1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Goverlytics: politician/{goverlytics_id}",
    "tool description": "Retrieves a politician's information using their unique 'goverlytics_id'. This endpoint is part of the Goverlytics API, which provides access to a comprehensive database of political figures and their details, enabling efficient and accurate data retrieval for analysis and research purposes.",
    "API name": "politician/{goverlytics_id}",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool retrieves and displays detailed information about a specific politician using their unique Goverlytics ID. The successful output contains the politician's name, role, municipality, contact information (phone, email), a profile image URL, and a link to their official webpage. In cases where the specified ID is not found, the tool returns an HTML page with a '404 Not Found' error.",
      "output_format": "The successful response is a JSON object with two top-level keys: 'data' and 'pagination'. The 'data' key contains a nested object with the politician's details. The 'pagination' key is also an object, but its 'next_url' and 'previous_url' fields are empty since only a single politician's record is returned. Error responses, such as for a non-existent ID, are returned as an HTML document."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the politician's name from the source tool output to search for business/finance news related to this politician"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the politician's name from the source tool output to search for movie news that might mention this politician"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "India Today Unofficial",
    "parent tool description": "The India Today Unofficial API is a third-party web service that provides access to news content from the India Today platform. It allows developers to retrieve articles, videos, images, and other information related to various topics. Please note that it is not an official API provided by India Today.",
    "required_parameters": [
      {
        "name": "tag",
        "type": "string",
        "description": "",
        "default": "India"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://india-today-unofficial.p.rapidapi.com/news/India\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"india-today-unofficial.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "India Today Unofficial: Tag Search",
    "tool description": "Retrieves news articles based on a specified tag. This endpoint is part of the India Today Unofficial API, a third-party web service that provides access to news content from the India Today platform. It leverages the API's database of articles, videos, and images to deliver curated news tailored to the selected tag, enabling developers to integrate topic-specific news into their applications. Unlike official channels, this tool offers flexible access to India Today's content through a developer-friendly interface, though it is not affiliated with or endorsed by India Today itself.",
    "API name": "Tag Search",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of news articles from India Today that correspond to a specified tag. Based on the provided examples, if no articles are found for the given tag, the tool returns an empty list. It is intended to be used to retrieve and display topic-specific news content.",
      "output_format": "The output is a JSON array. The provided examples consistently show an empty array (`[]`), which indicates the output when no results are found. It is assumed that a successful search would return an array populated with JSON objects, each representing a news article, but the structure of these objects is unknown."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use tags from India Today articles as search terms"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Could use tags or keywords from India Today articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use movie-related tags from India Today articles as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use tags or keywords from India Today articles as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Indonesia News",
    "parent tool description": "We are focused on delivering data from major news websites in Indonesia.",
    "required_parameters": [
      {
        "name": "guid",
        "type": "STRING",
        "description": "",
        "default": ".xml.2023.06.20.114935178"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://indonesia-news.p.rapidapi.com/detail/kompas\"\nquerystring = {\"guid\": \".xml.2023.06.20.114935178\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indonesia-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Indonesia News: kompas-detail",
    "tool description": "Retrieves detailed articles from Kompas, including content, metadata, and related links. This is part of a service focused on delivering data from major Indonesian news websites, leveraging a curated database of local news sources to provide in-depth information and context for readers.",
    "API name": "kompas-detail",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool retrieves a single, detailed news article from the Indonesian news outlet, Kompas. A successful output provides comprehensive article data, including the title, publication date, URL, a brief description, and the full article content presented as a list of HTML paragraphs. It also includes metadata such as categories, keywords, and details about embedded media like photos, which include URLs and captions. The tool can also return error messages indicating issues like subscription problems.",
      "output_format": "The output is a JSON object. A successful response contains a boolean 'status' field and a 'result' object which holds the nested article data. The article's main body is in the 'content' field, an array of HTML strings. An error response has a different structure, typically a single 'message' key with a string value. Some fields within a successful response can be empty arrays (e.g., 'videoblock') or empty strings, indicating they are optional."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article title or keywords from the Kompas article content"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related keywords from the Kompas article if it covers film topics"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or title from the Kompas article to find related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Instant Cameroon News",
    "parent tool description": "Instantly provide the latest news and the latest information on Cameroon. It is the easier way to  get latest news about Cameroon.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "rank",
        "type": "STRING",
        "description": "",
        "default": ""
      },
      {
        "name": "page",
        "type": "STRING",
        "description": "",
        "default": ""
      },
      {
        "name": "search",
        "type": "STRING",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://instant-cameroon-news.p.rapidapi.com/camerounnews\"\nquerystring = {\"rank\": \"\", \"page\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instant-cameroon-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Instant Cameroon News: Retrieve data",
    "tool description": "Retrieves news and information about Cameroon using parameters like page, search key, and data range. This endpoint is part of a service that delivers the latest updates on Cameroon, leveraging a curated database of current events to provide timely and relevant information, making it easier to access real-time insights about the country's developments.",
    "API name": "Retrieve data",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a paginated list of news or information about Cameroon. The response includes a 'data' array, which is expected to contain objects representing individual news articles or events. The output also contains metadata fields for managing pagination, such as the total number of available results, the number of results returned, and the active page number.",
      "output_format": "The output is a JSON object with a single root key, 'result'. This key contains an object with pagination metadata and a 'data' array for the results. The 'activepage' field has an inconsistent type, appearing as both a string and an integer in the examples. All provided examples show an empty 'data' array, so the structure of the objects within that array is unknown."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use keywords or topics from Cameroon news articles"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Could use topics or categories from Cameroon news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for movie news related to Cameroon topics"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use keywords or topics from Cameroon news"
          }
        ]
      },
      {
        "tool name": "Medium: /stories/{topic}",
        "connect params": [
          {
            "name": "topic",
            "description": "Could use topics or categories from Cameroon news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Kubric: The Comprehensive Movie News API",
    "parent tool description": "Stay up-to-date with Kubric, your ultimate movie news API. Access top sources, search by title or keyword, and experience visually engaging cinema updates and insights.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "superman"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "",
        "default": "10"
      },
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      }
    ],
    "code": "import requests\n\nurl = \"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/basic/search\"\nquerystring = {\"q\": \"superman\", \"limit\": \"10\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kubric-the-comprehensive-movie-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
    "tool description": "The /news/basic/search endpoint searches for movie news articles by title or keyword. This is part of Kubric, your ultimate movie news API, which aggregates data from top sources to deliver visually engaging cinema updates and insights, ensuring you stay informed with personalized and timely information.",
    "API name": "Basic Search",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of movie news articles based on a search query. Each article in the results includes its title, a snippet, the source publication, author, publication date, and a URL to the full article. The output also contains metadata like a unique ID, an image URL, and the sentiment of the article.",
      "output_format": "The output is a JSON object with a main `body` field. This `body` contains a `results` array, where each element is an object representing a single news article. A `totalArticles` field in the `body` suggests that the results are paginated, as it indicates a number higher than the count of items in the `results` array."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use movie titles, company names, or industry keywords from the source tool's results"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use movie titles or keywords from the source tool's results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "News API_v2",
    "parent tool description": "Google News and Bing News Alternative. The Best API to Search News from the 2500+ Publishers Around The World. ",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "en, zh-Hans, zh-Hant, id, cs, uk, he, ar, de, es-419, ja, ko, fr, it, lv, lt, ml, th, hu, nl, no, pl, pt-419, pt-150, ro, sk, sl, sv, vi, tr, el, bg, ru, sr, mr, hi, bn, ta, te",
        "default": "en"
      },
      {
        "name": "category",
        "type": "STRING",
        "description": "Possible options: business, science, sports, entertainment, health, technology\n\nDefault value: all categories",
        "default": "sports"
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "MY, GB, CN, TW, AU, BW, ET, KR, GH, IE, KE, LV, NA, IN, BD, TH, NZ, NG, PK, PH, SG, ZA, TZ, UG, ZW, ID, CZ, DE, AT, CH, AR, EG, CL, CO, CU, US, MX, PE, VE, LB, CA, FR, MA, SN, IT, LT, HK, JP, HU, BE, NL, NO, PL, BR, PT, RO, SK, SI, SE, VN, TR, GR, BG, RU, RS, UA, IL, AE, SA",
        "default": "us"
      }
    ],
    "code": "import requests\n\nurl = \"https://news-api14.p.rapidapi.com/top-headlines\"\nquerystring = {\"language\": \"en\", \"category\": \"sports\", \"country\": \"us\", \"sortBy\": \"\", \"pageSize\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-api14.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "News API_v2: Top Headlines",
    "tool description": "Retrieves top headlines news from 2500+ global publishers worldwide. This endpoint serves as part of a comprehensive news aggregation API, offering a reliable alternative to Google News and Bing News by leveraging a vast network of 2500+ publishers to deliver real-time, curated headlines tailored to user preferences and regional relevance.",
    "API name": "Top Headlines",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of recent news headlines from various global publishers. Each headline in the list includes the article's title, a URL to the full story, its publication date, and details about the publisher, such as their name and homepage URL. The output is intended to be used as a real-time feed of top news stories.",
      "output_format": "The output is a JSON object. It contains a top-level key 'articles' which holds an array of nested JSON objects, where each object represents a single news article. Each article object includes string values for 'title', 'url', 'published_date', and a nested 'publisher' object. The 'totalResults' field suggests that the full result set might be larger than the number of articles returned in a single response, implying potential for pagination."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use article titles from the source tool as search terms for business/finance news"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "param_name": "location",
            "description": "Can extract location information from news articles about specific countries/regions"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "param_name": "tag",
            "description": "Can extract relevant tags/topics from article titles or content summaries"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use movie-related titles or topics from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Moka News: By Source (New)",
        "connect params": [
          {
            "param_name": "source",
            "description": "Can use publisher information from source tool output"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use article titles or key topics from headlines as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "News Network",
    "parent tool description": "Global network of news.",
    "required_parameters": [
      {
        "name": "category",
        "type": "ENUM",
        "description": "",
        "default": "sports"
      },
      {
        "name": "region",
        "type": "ENUM",
        "description": "ae: United Arab Emirates\nar: Argentina\nat: Austria\nau: Australia\nbe: Belgium\nbg: Bulgaria\nbr: Brazil\nca: Canada\nch: Switzerland\ncn: China \nco: Colombia\ncu: Cuba\ncz:\tCzech Republic\nde: Germany\neg: Egypt\nfr: France\ngb: United Kingdom\ngr: Greece\nhk: Hong Kong\nhu: Hungray\nid: Indonesia\nie: Ireland\nil: Israel\nin: India\nit: Italy\njp: Japan\nkr: South Korea\nlt: Lithuania\nlv: Latvia\nma: Morocco\nmx: Mexico\nmy: Malaysia\nng: Nigeria\nnl: Netherlands\nno: Norway\nnz: New Zealand\nph: Philippines\npl: Poland\npt: Portugal\nro: Romania\nrs: Serbia\nru: Russia\nsa: Saudi Arabia\nse: Sweden\nsg: Singapore\nsi: Slovenia\nsk: Slovakia\nth: Thailand\ntr: Turkey\ntw: Taiwan\nua: Ukraine\nus: United States\nve: Venuzuela\nza: South Africa",
        "default": "us"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://news-network.p.rapidapi.com/get_news\"\nquerystring = {\"category\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-network.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "News Network: Get News",
    "tool description": "Retrieves a list of news articles filtered by specified region and category. This endpoint utilizes the Global network of news, drawing from a comprehensive database of regional and categorical news sources to deliver targeted and timely updates.",
    "API name": "Get News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of news articles filtered by a specific region and category. Each article in the list includes a title, a URL to the full story, the source, author, a content snippet, a description, and the publication date. This information is intended to be used to present users with relevant and timely news headlines and summaries.",
      "output_format": "The output is a JSON object. The top-level key is a two-letter country code (e.g., 'us', 'gb'). The value of this key is another object, where the key is the news category (e.g., 'business', 'sports'). This category key maps to an array of article objects. Fields within the article objects, such as 'author', 'content', 'urlToImage', and 'description', can frequently be null."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use article titles or topics from the news output as search terms"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "param_name": "location",
            "description": "Can use the country code from the news output (e.g., 'us', 'gb') to get coronavirus news for that region"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetStats",
        "connect params": [
          {
            "param_name": "location",
            "description": "Can use the country code from the news output (e.g., 'us', 'gb') to get coronavirus stats for that region"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "param_name": "tag",
            "description": "Can use topics or keywords extracted from news articles"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "param_name": "search",
            "description": "Can use keywords or topics from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use movie-related topics or titles extracted from entertainment news articles"
          }
        ]
      },
      {
        "tool name": "News API_v2: Top Headlines",
        "connect params": [
          {
            "param_name": "country",
            "description": "Can use the country code from the news output (e.g., 'us', 'gb')"
          },
          {
            "param_name": "category",
            "description": "Can use the category from the news output (e.g., 'business', 'sports')"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use topics, titles, or keywords from news articles as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI News - Global",
    "parent tool description": "Global News produced by AI",
    "tool name": "AI News - Global: Available Regions",
    "tool description": "Retrieves a complete list of all available geographic regions for news coverage. This endpoint is part of an AI-powered global news service that generates and delivers news content across different parts of the world, allowing users to access current events and stories specific to their regions of interest without having to manually search through multiple sources.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ai-news-global.p.rapidapi.com/get_regions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-news-global.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Available Regions",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The output provides a comprehensive list of all geographic regions supported by the AI news service. It is a key-value mapping where each key is a two-letter country or region code and the corresponding value is its full name. This information is intended to be used to identify valid region codes for other news-fetching tools.",
      "output_format": "The output is a single, flat JSON object. It is not an array and does not contain any nested structures. Based on the description of a \"complete list\", the output is not paginated."
    },
    "connected tools": [
      {
        "tool name": "AI News - Global: Get News",
        "connect params": [
          {
            "name": "region",
            "description": "One of the region's key code in the list of **Get Regions** method.",
            "reason": "The source tool provides a mapping of two-letter country/region codes to their full names, which directly corresponds to the region parameter required by this tool."
          }
        ]
      },
      {
        "tool name": "News Network: Get News",
        "connect params": [
          {
            "name": "region",
            "description": "Region code for news coverage",
            "reason": "The source tool provides region codes that can be used with this parameter, as both use two-letter country codes for region specification."
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "ISO 3166-2 location code",
            "reason": "The source tool provides two-letter country codes that match the ISO 3166-2 format required by this parameter."
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetStats",
        "connect params": [
          {
            "name": "location",
            "description": "ISO 3166-2 location code",
            "reason": "The source tool provides two-letter country codes that match the ISO 3166-2 format required by this parameter."
          }
        ]
      },
      {
        "tool name": "News API_v2: Top Headlines",
        "connect params": [
          {
            "name": "country",
            "description": "Country code for news filtering",
            "reason": "The source tool provides two-letter country codes that can be used to filter news headlines by country."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI News - Global",
    "parent tool description": "Global News produced by AI",
    "tool name": "AI News - Global: Get News",
    "tool description": "Retrieves news articles filtered by specific geographic regions. This endpoint leverages AI-generated global news content, providing access to current events and stories from around the world that are produced through artificial intelligence rather than traditional human reporting. The service offers a technology-driven alternative to conventional news sources, allowing users to stay informed about regional developments through algorithmically created news content.",
    "required_parameters": [
      {
        "name": "region",
        "type": "string",
        "description": "One of the region's key code in the list of **Get Regions** method.",
        "default": "us"
      },
      {
        "name": "version",
        "type": "string",
        "description": "",
        "default": "v1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ai-news-global.p.rapidapi.com/get_news/v1/us\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-news-global.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool returns news articles categorized by topic, such as 'business' or 'general'. When successful, the output for a category is a list of articles, each including a title, description, source, author, and a URL to the full story. The tool may return HTML error pages instead of news content for categories where data retrieval fails.",
      "output_format": "The output is a string that serializes a dictionary. The keys of this dictionary are news categories (e.g., 'business', 'general'). The value for each key is either a JSON string containing the news data or an HTML string indicating an error. The successful JSON string contains an object with a top-level 'articles' key, which holds an array of article objects. Some fields within an article object, such as 'author' or 'source.id', can be null."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles or keywords from news content as search terms"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location information mentioned in news articles"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use topics or keywords extracted from news articles"
          }
        ]
      },
      {
        "tool name": "Indonesia News: kompas-detail",
        "connect params": [
          {
            "name": "guid",
            "description": "If news articles contain specific IDs that match kompas format"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords or topics from news articles"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related keywords from entertainment news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords, titles, or topics from news articles"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "ALL Crypto News Feed",
    "parent tool description": "All news about crypto. Tweets, listing news, .gov announcements, blogs etc.",
    "tool name": "ALL Crypto News Feed: Get Blogs Feed",
    "tool description": "Returns a feed of crypto-related blog posts from various sources. This endpoint is part of a comprehensive crypto news aggregation service that collects and organizes diverse information including tweets, exchange listing announcements, government regulatory updates, and blog content from across the cryptocurrency ecosystem, providing users with a centralized source for staying informed about developments in the crypto space.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-crypto-news-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get Blogs Feed",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a feed of recent, crypto-related blog posts aggregated from multiple sources. Each entry in the feed includes the article's title, a direct URL, publication time, and social engagement metrics like likes and dislikes. Additionally, if the article mentions specific cryptocurrencies, the output includes associated coin symbols and exchange listing information.",
      "output_format": "The output is a string containing a JSON array of objects. Each object represents a single blog post. Some fields, like 'firstPrice' and 'suggestions', appear to be conditional and are not present in every object. The 'time' field is a numerical Unix timestamp, likely in milliseconds."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use cryptocurrency symbols or names from the blog feed as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for movies related to cryptocurrencies mentioned in the blog feed"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use cryptocurrency symbols or names from the blog feed as keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "ALL Crypto News Feed",
    "parent tool description": "All news about crypto. Tweets, listing news, .gov announcements, blogs etc.",
    "tool name": "ALL Crypto News Feed: Get Twitter Feed",
    "tool description": "Returns a Twitter feed focused on cryptocurrency topics. This endpoint delivers real-time tweets from the comprehensive crypto news aggregation service that collects information from various sources including social media, listing announcements, government regulatory updates, and influential crypto blogs. Access the latest conversations, market sentiment, and breaking news directly from Twitter's crypto community.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://all-crypto-news-feed.p.rapidapi.com/get_tweet_feed\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-crypto-news-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get Twitter Feed",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of recent tweets related to cryptocurrency. Each item in the list represents a single tweet and includes its full text content, a URL to the original tweet, the author's icon, and a timestamp. The output also contains structured metadata, such as whether the tweet is a reply or retweet, and most importantly, an array of suggestions that identify any mentioned cryptocurrencies and list the exchanges and trading symbols associated with them.",
      "output_format": "The tool returns a JSON array of objects, where each object corresponds to a tweet. Some fields can be nullable or empty, such as the 'image' field (an empty string if no image is attached) or the 'suggestions' array (empty if no cryptocurrencies are detected). The tweet's content is in the 'title' field, and the timestamp is a numerical value in the 'time' field."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use cryptocurrency names or topics mentioned in tweets"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for movies mentioned alongside cryptocurrencies in tweets"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can search for cryptocurrency names or topics mentioned in tweets"
          }
        ]
      },
      {
        "tool name": "Crypto News_v2: Get All Crypto News",
        "connect params": []
      },
      {
        "tool name": "ALL Crypto News Feed: Get Blogs Feed",
        "connect params": []
      },
      {
        "tool name": "ALL Crypto News Feed: Get ALL Feed",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "ALL Crypto News Feed",
    "parent tool description": "All news about crypto. Tweets, listing news, .gov announcements, blogs etc.",
    "tool name": "ALL Crypto News Feed: Get ALL Feed",
    "tool description": "Returns all available news feeds including Tweets, Blogs, Binance announcements, and US Government statements related to cryptocurrency. This comprehensive crypto news aggregator collects and organizes the latest information from multiple sources, providing a centralized access point for staying updated on market trends, regulatory developments, social media discussions, and industry announcements in the cryptocurrency space.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://all-crypto-news-feed.p.rapidapi.com/get_all_feed\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-crypto-news-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get ALL Feed",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of recent news items related to cryptocurrency from multiple sources, including Twitter and blogs. Each news item includes a title, a URL to the source, a timestamp, and a list of suggested cryptocurrencies mentioned in the article, along with their corresponding trading symbols on various exchanges. This allows users to stay updated on market-moving news and identify the relevant tradable assets.",
      "output_format": "The output is a JSON array of objects, where each object represents a single news item. The fields within each object can vary depending on the 'source' of the news (e.g., a 'Twitter' source has an 'info' object with Twitter-specific metadata, which is absent in a 'Blogs' source). Some fields, like 'image', can be empty strings. The 'suggestions' field contains a nested array of objects."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use cryptocurrency names or topics from the news feed"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for movies related to cryptocurrencies mentioned in the news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use cryptocurrency names or topics from the news feed"
          }
        ]
      },
      {
        "tool name": "Crypto News_v2: Get All Crypto News",
        "connect params": [
          {
            "description": "Can be used to get additional crypto news to supplement the original feed"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Anime News Net",
    "parent tool description": "This anime news API allows users to get details about the latest anime news, including the news headline, category, publication date and a brief introduction. It also provides an image relevant to the news item and the full content of the news item. Users can use this API to stay updated on the latest anime news easily and quickly",
    "tool name": "Anime News Net: Get anime news list",
    "tool description": "Retrieves the most up-to-date anime list in real time, providing current information on available anime titles. This anime news API gives users access to comprehensive anime information as part of a service that delivers the latest anime news, including headlines, categories, publication dates, and brief introductions. The API also includes relevant images and full content for news items, enabling users to stay effortlessly informed about both current anime titles and breaking news in the anime world.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://anime-news-net.p.rapidapi.com/api/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"anime-news-net.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get anime news list",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of recent anime-related news articles. Each article in the list includes a title, summary, publication date, category, and topic. Additionally, it provides a URL to the full article, a link to a thumbnail image, and API-specific details for potentially fetching more information.",
      "output_format": "The output is a JSON array of objects. Each object represents a news article and contains two nested JSON objects: `article` and `details_api`. The `article` object holds the main content (title, summary, URL, etc.), while the `details_api` object contains metadata for subsequent API calls. Some string values, such as `title`, `category`, and `topic`, contain leading and trailing newline characters (`\\n`)."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use anime titles or topics from the anime news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can search for anime movie titles or related content mentioned in the anime news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use anime titles or topics from the anime news as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: CNN Arabic",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0633\u064a \u0627\u0646 \u0627\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0648\u0647\u0648 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 API \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u062a\u062c\u0645\u0639 \u0622\u062e\u0631 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0627\u0646 \u0627\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627. \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0627\u0644\u0631\u0627\u0626\u062f\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/cnnarabic\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "CNN Arabic",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool retrieves a list of the latest news articles from the CNN Arabic news website. Each article in the list includes a headline, a sub-headline, the main content or a snippet, the publication date, and URLs for both an associated image and the full article. The output is intended to provide a comprehensive summary of recent news stories from this specific Arabic news source.",
      "output_format": "The tool returns a JSON object containing a single key, \"results\". The value of this key is an array of objects, where each object represents a single news article. Each article object consistently contains the following string fields: 'headline', 'underHeadline', 'content', 'date', 'image', and 'url'."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use headlines from CNN Arabic articles as search terms"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location mentions from CNN Arabic articles about COVID-19"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use topics or keywords extracted from CNN Arabic headlines"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related keywords from CNN Arabic entertainment news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or topics from CNN Arabic headlines"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: Hibapress",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0647\u0628\u0629 \u0628\u0631\u064a\u0633\u060c \u0648\u0647\u0648 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u062a\u0642\u062f\u0645 \u0623\u062d\u062f\u062b \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0639\u0631\u0628\u064a\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627. \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646 \u0645\u062e\u062a\u0644\u0641 \u0627\u0644\u0645\u0646\u0635\u0627\u062a \u0627\u0644\u0625\u0639\u0644\u0627\u0645\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/morocco/hibapress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Hibapress",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of the latest news articles from the Hibapress Arabic news website. For each article, the output includes the headline, a content snippet, a URL to a relevant image, and a direct URL to the full article on the Hibapress site.",
      "output_format": "The output is a JSON object containing a single key, \"results\". The value of this key is an array of objects, where each object represents a news article. Each article object consistently contains four string fields: 'headline', 'content', 'image' (URL), and 'url' (URL). There is no information about pagination or cursoring in the examples."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use headlines from Hibapress articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use headlines or content from Hibapress articles as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use headlines or content from Hibapress articles as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: Youm7 - \u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0633\u0627\u0628\u0639",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0633\u0627\u0628\u0639 \u0627\u0644\u0645\u0635\u0631\u064a\u060c \u0648\u0647\u0648 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u062a\u0642\u062f\u0645 \u0622\u062e\u0631 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0639\u0631\u0628\u064a\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627. \u062a\u062a\u0645\u064a\u0632 \u0647\u0630\u0647 \u0627\u0644\u062e\u062f\u0645\u0629 \u0628\u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629\u060c \u0645\u0645\u0627 \u064a\u0648\u0641\u0631 \u0644\u0644\u0645\u0633\u062a\u062e\u062f\u0645 \u0645\u0635\u062f\u0631\u0627\u064b \u0634\u0627\u0645\u0644\u0627\u064b \u0644\u0644\u0623\u062e\u0628\u0627\u0631 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u0646 \u0645\u0646\u0635\u0629 \u0648\u0627\u062d\u062f\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/youm7\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Youm7 - \u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0633\u0627\u0628\u0639",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool retrieves a list of news articles from the Egyptian news website Youm7 (\u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0633\u0627\u0628\u0639). The output provides a collection of articles, where each article includes its title, a content snippet, publication date, a URL to the news section, an image URL, and a direct link to the full article. This is intended to provide users with up-to-date headlines and summaries from a specific Arabic news source.",
      "output_format": "The tool returns a JSON object with a single key, \"results\". The value of this key is a JSON array of objects, where each object represents a news article. Some fields within an article object, such as 'date' and 'image', can be an empty string, indicating they might be nullable or not always available."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles or content snippets from Youm7 as search terms for business/finance news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use article titles or content snippets from Youm7 as search terms for related news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related article titles or content from Youm7 to search for movie news"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use article titles or content snippets from Youm7 as search terms for related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: France24 Arabic",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0641\u0631\u0627\u0646\u0633 24 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0645\u0642\u062f\u0645\u0627\u064b \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0644\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u062c\u0627\u0631\u064a\u0629. \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0631 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 \u0623\u0634\u0645\u0644 \u062a\u062c\u0645\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627\u060c \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0627\u062a \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/france24arabic\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "France24 Arabic",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool retrieves a list of the most recent news articles from the France24 Arabic service. For each article, it provides the headline, a direct URL to the full story, the main source URL, and a set of image links corresponding to different resolutions. This allows users to get a quick overview of current events from this specific news source and access the articles directly.",
      "output_format": "The output is a JSON object containing a single key, \"results\". The value of this key is an array of objects, where each object represents a news article. Each article object includes the keys \"source\", \"title\", \"url\", and \"image\". The \"image\" field's value is a single string containing a space-separated list of URLs, similar to an HTML `srcset` attribute, providing different sizes for the same image."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles from France24 Arabic as search terms for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related article titles from France24 Arabic as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use article titles or key terms from France24 Arabic articles as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: Alarabiya - \u0627\u0644\u0639\u0631\u0628\u064a\u0629",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0646\u062a\u060c \u0645\u0642\u062f\u0645\u0627\u064b \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0644\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u062c\u0627\u0631\u064a\u0629. \u0647\u0630\u0647 \u0627\u0644\u062e\u062f\u0645\u0629 \u062c\u0632\u0621 \u0645\u0646 \u0646\u0638\u0627\u0645 \u0645\u062a\u0643\u0627\u0645\u0644 \u064a\u0648\u0641\u0631 \u062a\u063a\u0637\u064a\u0629 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0634\u0627\u0645\u0644\u0629 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0639\u0631\u0628\u064a\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627. \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a \u0627\u0644\u0639\u0631\u0628\u064a.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/alarabiya\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Alarabiya - \u0627\u0644\u0639\u0631\u0628\u064a\u0629",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of the latest news articles from the Alarabiya news service. For each article, it returns the headline, a content summary or the full text, the publication date, a URL for an associated image, and a direct URL to the full article on the Alarabiya website. This output is intended to give users a snapshot of current events as reported by Alarabiya.",
      "output_format": "The output is a JSON object with a single key, \"results\", which contains an array of article objects. Each article object includes the following string fields: 'headline', 'content', 'date', 'image' (as a URL), and 'url'. Based on the examples, the 'content' field may be truncated."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use headline or content from Alarabiya articles as search terms for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for movie-related content using keywords from Alarabiya articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use headline or key terms from Alarabiya articles to find related news"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords from Alarabiya articles to find related Cameroon news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: BBC Arabic",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0628\u064a \u0628\u064a \u0633\u064a \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0645\u0642\u062f\u0645\u0627\u064b \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0644\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u062c\u0627\u0631\u064a\u0629. \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0631 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 \u0623\u0648\u0633\u0639 \u062a\u062c\u0645\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627\u060c \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0627\u062a \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/bbcarabic\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "BBC Arabic",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of recent news articles from the BBC Arabic news service. For each article, it returns the headline, a URL to the full story, and a URL for a representative image. The output also includes a source URL, which appears to be a general topic or category page for the returned set of articles.",
      "output_format": "The output is a JSON object with a single key, \"results\". The value of this key is an array of objects, where each object represents a news article. Each article object contains the keys \"source\", \"title\", \"url\", and usually \"image\". The first object in the array sometimes lacks an \"image\" and can have an empty string for the \"title\", possibly representing a link to the main topic page."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles from BBC Arabic as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use article titles from BBC Arabic as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related article titles from BBC Arabic as search terms"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use article titles from BBC Arabic as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: RT Arabic",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0627\u0644\u0645\u0636\u0627\u0641\u0629 \u0625\u0644\u0649 \u0645\u0648\u0642\u0639 \u0631\u0648\u0633\u064a\u0627 \u0627\u0644\u064a\u0648\u0645\u060c \u0648\u0647\u0648 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 API \u0634\u0627\u0645\u0644\u0629 \u062a\u0648\u0641\u0631 \u0623\u062d\u062f\u062b \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0639\u0631\u0628\u064a\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627. \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646 \u0645\u062e\u062a\u0644\u0641 \u0627\u0644\u0645\u0646\u0635\u0627\u062a \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/rtarabic\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "RT Arabic",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of the latest news articles from the RT Arabic news website. Each item in the list represents a single news article and includes its title, a short content summary, the source category URL, and a direct link to the full article on the RT Arabic site.",
      "output_format": "The output is a string representation of a JSON object. This object has a top-level key named \"results\" which contains an array of article objects. Each article object has string values for 'source', 'title', 'content', and 'url'. The 'image' key is also present but was an empty string in all provided examples, suggesting it may be nullable or frequently empty."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or content from RT Arabic news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for movie-related content using keywords from RT Arabic articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use titles or content from RT Arabic articles as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: Aljazeera",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0648\u0647\u0648 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u062a\u0642\u062f\u0645 \u0622\u062e\u0631 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0639\u0631\u0628\u064a\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627. \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\u060c \u0645\u0645\u0627 \u064a\u0636\u0645\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/aljazeera\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Aljazeera",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of news articles from the Aljazeera news source. Each article in the list includes a headline, a content snippet, the publication date, a URL to the full article, and a URL for an associated image. This output is intended to provide users with the latest news and developments as reported by Aljazeera.",
      "output_format": "The output is a string containing a JSON object. This object has a single key, \"results\", which holds an array of article objects. Each article object contains string values for \"headline\", \"underHeadline\", \"content\", \"date\", \"image\", and \"url\". The \"underHeadline\" field can be an empty string. The \"image\" URL in the provided examples appears malformed, ending in \"undefined\"."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use headlines or content from Aljazeera articles as search terms"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location mentions from Aljazeera articles to search for related coronavirus news"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use topics or entities mentioned in Aljazeera articles as search tags"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related topics from Aljazeera entertainment news as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or topics from Aljazeera articles as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: Sky news Arabic",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0633\u0643\u0627\u064a \u0646\u064a\u0648\u0632 \u0639\u0631\u0628\u064a\u060c \u0645\u0642\u062f\u0645\u0627\u064b \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0644\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u062c\u0627\u0631\u064a\u0629. \u0647\u0630\u0647 \u0627\u0644\u062e\u062f\u0645\u0629 \u062c\u0632\u0621 \u0645\u0646 \u0646\u0638\u0627\u0645 \u0645\u062a\u0643\u0627\u0645\u0644 \u064a\u0648\u0641\u0631 \u062a\u063a\u0637\u064a\u0629 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0634\u0627\u0645\u0644\u0629 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0639\u0631\u0628\u064a\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627. \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0634\u0647\u062f \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a \u0627\u0644\u0639\u0631\u0628\u064a.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/skynewsarabic\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Sky news Arabic",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of the latest news articles from the Sky News Arabia website. For each article, it provides the headline (title), a direct URL to the full article, the source URL, and a placeholder for an image URL. This information is intended to give users a quick overview of current events with links for further reading.",
      "output_format": "The output is a string containing a JSON object. This object has a single top-level key, \"results\", which contains an array of news article objects. Each article object has string values for \"source\", \"title\", and \"url\". The \"image\" key was an empty string in the provided examples, suggesting it might be nullable or sometimes unpopulated."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles from Sky News Arabia as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles from Sky News Arabia as search terms for movie-related content"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "tool name": "BizToc: News / Hot",
    "tool description": "Retrieves trending topic clusters and their associated stories, ranked by a proprietary popularity algorithm that refreshes every 15 minutes. This endpoint taps into BizToc.com's comprehensive business and finance news ecosystem, providing access to the same trending content featured in the '/hot' section of the website. As the Web's most comprehensive hub for business and finance news, BizToc.com aggregates and organizes the most relevant and timely financial stories, allowing users to stay informed on rapidly developing business trends and market movements.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/news/hot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "News / Hot",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of trending business and finance news stories, which are grouped into topic clusters. For each story, it provides the title, a summary (body), the source domain, creation timestamp, and a URL to the full article. The content is ranked by popularity and refreshed frequently, allowing users to stay informed about current market movements and financial trends.",
      "output_format": "The output is a JSON array where each element is an object representing a topic cluster. Each topic object contains a \"posts\" key, which holds a nested array of individual story objects. Within a story object, fields like \"img\" (image) and \"title\" can be null."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or keywords from trending topic clusters to search for related news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related titles or keywords from trending business news to search for related movie news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use titles or keywords from trending business news to search for related news"
          }
        ]
      },
      {
        "tool name": "Indonesia News: kompas-detail",
        "connect params": [
          {
            "name": "guid",
            "description": "Can extract GUIDs from Kompas URLs if present in trending stories"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords from trending business news to search for related Cameroon news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "tool name": "BizToc: Sources",
    "tool description": "Lists all currently available source IDs (equivalent to news blocks on biztoc.com), noting that certain proprietary blocks like Twitter or Stock Tickers are not accessible. This endpoint connects to BizToc.com's official API, which serves as the web's most comprehensive hub for business and finance news, allowing access to the platform's extensive collection of news sources and content blocks.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/sources\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Sources",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of all news sources available through the BizToc API. For each source, it returns a unique identifier, the name of the source, and its website URL. This information is intended to be used to identify available news outlets and to use their specific IDs for other tool calls.",
      "output_format": "The output is a string representation of a JSON array. Each element in the array is a JSON object that represents a single news source. Each object contains three string fields: 'id', 'title', and 'web'. The examples provided are truncated, suggesting the full list is extensive."
    },
    "connected tools": [
      {
        "tool name": "BizToc: News / Source",
        "connect params": [
          {
            "name": "source_id",
            "description": "The source_id parameter can use the 'id' field from BizToc: Sources output to retrieve news from a specific source"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "tool name": "BizToc: Pages",
    "tool description": "Retrieves the list of available page IDs (such as 'crypto' or 'media') that can be used with other endpoints like Tags/Trending. This endpoint provides access to BizToc.com's comprehensive business and finance news ecosystem, allowing you to navigate through the platform's specialized content sections. BizToc.com serves as the web's most comprehensive hub for business and finance news, making this endpoint essential for properly structuring requests to the platform's various specialized content areas.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/pages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Pages",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of available page identifiers (IDs), such as 'crypto' or 'media', which represent specialized content sections on the BizToc news platform. These IDs are intended to be used as input parameters for other tools to retrieve section-specific content, like tags or trending news. This allows users to discover and navigate the different news categories available.",
      "output_format": "The output is a flat array of strings. Each string in the array represents a unique page ID. The examples provided are string representations of a Python list, but the logical structure is a simple array."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Tags / Trending",
        "connect params": [
          {
            "name": "page_id",
            "description": "Page ID to retrieve trending tags for",
            "type": "string"
          }
        ]
      },
      {
        "tool name": "BizToc: News / Latest / Page",
        "connect params": [
          {
            "name": "page_id",
            "description": "Page ID to filter news stories by",
            "type": "string"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Climate Change News_v5",
    "parent tool description": "An API showing latest Climate Change News around the world",
    "tool name": "Climate Change News_v5: All Climate Change News",
    "tool description": "Retrieves all climate change news from around the world. This endpoint provides access to a comprehensive collection of the latest articles, updates, and developments related to climate change globally, allowing users to stay informed about environmental issues, policies, scientific findings, and climate initiatives happening across different regions and countries.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://climate-change-news132.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change-news132.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "All Climate Change News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of news articles related to climate change. Each article in the list includes its title, the source of the publication, and a direct URL to the full story. This allows users to stay informed about current events, policies, and scientific findings concerning climate change from various global sources.",
      "output_format": "The output is a string-serialized JSON array. Each element in the array is a JSON object that represents a single news article. Each object contains three string keys: 'title', 'url', and 'source'. The 'title' field may contain extra whitespace and newline characters that require cleaning."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use climate change news titles or topics as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for climate change-related movies or documentaries based on news topics"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use climate change news titles or key topics as search keywords"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use climate change news topics to search for related Cameroon news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Crypto News_v2",
    "parent tool description": "Shows recent news articles in the cryptocurrency market. Find article by keyword search to find related news or return general information about crypto market. ",
    "tool name": "Crypto News_v2: Get All Crypto News",
    "tool description": "Returns all news articles about crypto and bitcoin from various websites across the internet. This endpoint aggregates cryptocurrency news content from multiple online sources, allowing you to stay informed about the latest developments in the crypto market without having to visit individual news sites. Part of a comprehensive crypto news service that enables both targeted keyword searches and general market information retrieval to keep you updated on cryptocurrency trends and developments.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://crypto-news34.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-news34.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All Crypto News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of cryptocurrency-related news articles. Each article is an object that includes a title, a URL to the full story, and the source website. This information is intended to keep users updated on the latest news and developments in the crypto market by aggregating content from multiple sources.",
      "output_format": "The output is a JSON array of objects. Each object represents a single news article and contains the keys 'title' (string), 'url' (string), and 'source' (string). The provided examples suggest that the list may contain duplicate entries and non-article links, such as advertisements or site navigation. There is no indication of pagination."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use cryptocurrency-related terms extracted from news article titles"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for movies related to cryptocurrency topics mentioned in the news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use cryptocurrency-related terms from news article titles to find more news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "dev-to-api",
    "parent tool description": "API that fetches the latest blogs from dev.to website",
    "tool name": "dev-to-api: Get the top articles of all time",
    "tool description": "Returns the top-rated articles of all time from the dev.to platform, allowing access to the most popular and highly-regarded content published on the site. This endpoint is part of an API that fetches blog content from dev.to, enabling users to discover influential technical articles, tutorials, and discussions that have received the highest engagement and recognition from the developer community over time.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dev-to-api1.p.rapidapi.com/articles/top/infinity\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dev-to-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get the top articles of all time",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of the top-rated articles of all time from the dev.to platform. For each article, the output includes its title and a direct URL to access the content. This information is intended to help users discover popular and highly-regarded technical articles and tutorials from the developer community.",
      "output_format": "The output is a list containing a single string element. This string is a JSON-serialized array of objects. Each object in the array represents an article and contains two string fields: 'title' and 'url'."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "The article titles from dev.to could be used as search terms to find related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Article titles related to movies/entertainment could be used as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Article titles could be used as search keywords to find related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "dev-to-api",
    "parent tool description": "API that fetches the latest blogs from dev.to website",
    "tool name": "dev-to-api: Get all the year's top articles",
    "tool description": "Returns the top articles from the dev.to website for a specified year. This endpoint is part of an API that fetches blog content from dev.to, allowing users to access popular programming articles, tutorials, and discussions that received the highest engagement during a particular year. The service helps developers stay informed about trending topics and valuable resources in the software development community without having to manually search through the site's archives.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dev-to-api1.p.rapidapi.com/articles/top/year\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dev-to-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all the year's top articles",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of the most popular articles from the dev.to website for a specified year. Each entry in the list represents an article, providing its title and a direct URL to the content. This information enables users to discover and access trending programming articles, tutorials, and discussions from a particular year.",
      "output_format": "The output is a JSON string that deserializes into an array of objects. Each object represents an article and contains at least a 'title' (string) and a 'url' (string). While the provided examples show only a single article in the array, the tool's purpose suggests the array can contain multiple articles."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use article titles from dev.to as search terms to find related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use programming article titles related to movies/entertainment tech as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use article titles from dev.to as search keywords to find related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "dev-to-api",
    "parent tool description": "API that fetches the latest blogs from dev.to website",
    "tool name": "dev-to-api: Get the month's top articles",
    "tool description": "Returns the month's top articles from the dev.to website, providing access to the most popular and trending content from this developer community platform. This API fetches curated blog posts that have received the highest engagement during the current month, allowing users to stay updated with the most influential technical content, tutorials, and discussions without having to manually sort through the entire site.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dev-to-api1.p.rapidapi.com/articles/top/month\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dev-to-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get the month's top articles",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of the most popular articles from the dev.to website for the current month. Each article in the list includes its title and a direct URL to the content. This allows users to discover and access the most engaging and influential technical posts and discussions from the developer community.",
      "output_format": "The output is a string that contains a JSON array of objects. Each object in the array represents a single article and contains two string properties: 'title' and 'url'."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use article titles as search terms for related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for movie news related to article titles about tech/movies"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use article titles as search terms for related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "dev-to-api",
    "parent tool description": "API that fetches the latest blogs from dev.to website",
    "tool name": "dev-to-api: Get all the top articles of the week by default",
    "tool description": "Returns a curated list of the week's top articles from the dev.to platform. This API endpoint fetches the most popular and trending content from dev.to, a community-driven website where developers share knowledge, experiences, and insights through blog posts. The service provides easy access to the most impactful developer-focused content without having to manually search through the site, helping users stay updated with current trends and valuable insights in the tech community.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dev-to-api1.p.rapidapi.com/articles/top\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dev-to-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all the top articles of the week by default",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of top-performing articles from the dev.to platform for the week. Each item in the list is an object containing the article's title and a direct URL to access it. This allows users to quickly discover and read popular and trending content within the developer community.",
      "output_format": "The output is a JSON array of objects. Each object represents a single article and contains two string fields: 'title' and 'url'. Based on the provided examples, these fields are always present and non-null."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Could use article titles from dev.to as search terms for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Could use dev.to article titles related to movies/entertainment as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Could use article titles from dev.to as keywords for searching related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "dev-to-api",
    "parent tool description": "API that fetches the latest blogs from dev.to website",
    "tool name": "dev-to-api: Get all the latest articles",
    "tool description": "Retrieves all the latest articles published on the dev.to platform. This endpoint connects to the dev.to website API to fetch the most recent blog posts, giving you immediate access to fresh content from the developer community without having to manually browse the site. The service provides a streamlined way to stay updated with new programming tutorials, tech discussions, and industry insights shared by developers on dev.to.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dev-to-api1.p.rapidapi.com/articles/latest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dev-to-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all the latest articles",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of the most recent articles from the dev.to platform. Each article in the list includes its title and a direct URL, which allows users to easily access and read the latest content on programming, technology, and developer insights.",
      "output_format": "The output is a JSON array of objects. Each object represents an article and contains two string fields: `title` and `url`. The provided examples are stringified representations of this JSON structure."
    },
    "connected tools": [
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use article titles from dev.to that mention movie names or cinema-related topics"
          }
        ]
      },
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use tech-related keywords from dev.to article titles to search for business/tech news"
          }
        ]
      },
      {
        "tool name": "Medium: /stories/{topic}",
        "connect params": [
          {
            "name": "topic",
            "description": "Could extract topics from dev.to article titles to find related Medium stories"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "dev-to-api",
    "parent tool description": "API that fetches the latest blogs from dev.to website",
    "tool name": "dev-to-api: Get all the relevant articles",
    "tool description": "Returns all relevant articles from the dev.to website, providing access to the latest blog content. This API fetches up-to-date posts from dev.to, allowing users to stay informed about current discussions, tutorials, and insights shared by the developer community on this popular tech blogging platform.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dev-to-api1.p.rapidapi.com/articles\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dev-to-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all the relevant articles",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of relevant articles from the dev.to website. Each item in the list is an object containing the title of an article and its corresponding URL, providing a direct way to access the content.",
      "output_format": "The output is a JSON array of objects. Each object represents a single article and consists of two key-value pairs: 'title' (a string) and 'url' (a string). The provided examples appear to be truncated, suggesting the full list may be longer."
    },
    "connected tools": [
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use article titles related to movies as search queries"
          }
        ]
      },
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use article titles related to business/finance as search queries"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use article titles as search keywords for related news"
          }
        ]
      },
      {
        "tool name": "Indonesia News: kompas-detail",
        "connect params": [
          {
            "name": "guid",
            "description": "If the dev.to article URL contains a guid parameter that matches the expected format"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Could use article titles related to Cameroon as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Election2020 Smartable",
    "parent tool description": "The Election API offers the 2020 U.S. election news, events, important people, FAQs, and other information. The data is tagged with democratic voice and republican voice, so it's up to the user to decide which opinion to follow.",
    "tool name": "Election2020 Smartable: GetTopics",
    "tool description": "Retrieves a list of key topics related to the 2020 U.S. presidential election. This endpoint taps into the Election API's comprehensive database of election news, events, important figures, and frequently asked questions, providing access to information that has been carefully tagged with both democratic and republican perspectives. Users can explore these topics to gain balanced insights into the election landscape, with the freedom to consider viewpoints from across the political spectrum.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://election2020-smartable.p.rapidapi.com/topics/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"election2020-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "GetTopics",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of topics related to the 2020 U.S. presidential election. Each topic includes its name, an ID, and a list of associated services (like news, people, and events) with specific API endpoints. This allows users to identify key areas of interest and provides the necessary URLs to retrieve more detailed information on each topic from various political viewpoints.",
      "output_format": "The output is a JSON object with a single key, \"value\", which contains a JSON array of topic objects. Each topic object can have nested structures, such as a 'services' array which contains more objects. Some fields within a topic object, like 'parent' and 'images', may not always be present."
    },
    "connected tools": [
      {
        "tool name": "Election2020 Smartable: GetPeopleByTopic",
        "connect params": [
          {
            "name": "topic",
            "description": "Can use topic ID or name from GetTopics output"
          }
        ]
      },
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use topic names from GetTopics output as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use topic names from GetTopics output as search terms if related to entertainment/movies"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use topic names from GetTopics output as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "German Police and Crime News Live",
    "parent tool description": "An API showing all the latest Police, Crime, Accident etc. News in Germany",
    "tool name": "German Police and Crime News Live: Get all Police News",
    "tool description": "Retrieves the latest news about police activities, crimes, accidents, and similar incidents specifically from Germany. This API aggregates and delivers current public safety and emergency-related news content from across German sources, providing up-to-date information on law enforcement operations, criminal incidents, traffic accidents, and other public safety events occurring throughout the country.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://german-police-and-crime-news-live.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"german-police-and-crime-news-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all Police News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of news articles related to police activities, crime, and public safety in Germany. Each article in the list includes a title, a URL to the full story, and the name of the news source. This allows users to get a summary of and links to current public safety news from various German media outlets.",
      "output_format": "The output is a JSON-formatted string that represents a top-level array of objects. Each object corresponds to a single news article and contains three string fields: 'title', 'url', and 'source'. Some 'title' fields may contain extra whitespace or newline characters."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use titles from German police news articles as search terms to find related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for movie news related to crime stories from German police news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use titles or key terms from German police news as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Greek News in English",
    "parent tool description": "An API showing all the latest Greek news  in English",
    "tool name": "Greek News in English: Get All Sources",
    "tool description": "Retrieves a complete list of news sources with their names and corresponding identification numbers. This endpoint is part of a comprehensive API that delivers the latest Greek news translated into English, allowing users to identify and select from available news outlets for subsequent content queries.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://greek-news-in-english.p.rapidapi.com/api/sources\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"greek-news-in-english.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All Sources",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of available Greek news sources. Each source is represented as an object containing its full name (e.g., \"Proto Thema\") and a unique identification code (e.g., \"pt\"). This allows users to discover available news outlets and use their corresponding IDs for subsequent queries to fetch news content from specific sources.",
      "output_format": "The output is a stringified JSON array of objects. Each object represents a single news source and contains two non-null string fields: 'id' and 'name'. The list appears to be a complete and static, with no indication of pagination."
    },
    "connected tools": [
      {
        "tool name": "Greek News in English: Get All News",
        "connect params": [
          {
            "name": "source",
            "description": "The source tool provides a list of news sources with their IDs, which can be used to filter news by specific sources"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Greek News in English",
    "parent tool description": "An API showing all the latest Greek news  in English",
    "tool name": "Greek News in English: Get All News",
    "tool description": "Retrieves all the latest Greek news from multiple sources. This endpoint aggregates current news content from across Greek media outlets and delivers it in English, providing comprehensive access to Greece's news landscape without language barriers.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://greek-news-in-english.p.rapidapi.com/api/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"greek-news-in-english.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of recent news articles sourced from various Greek media outlets, presented in English. Each article in the list includes a title, a hyperlink to the full story, a short description, a URL for a relevant image, and the name of the source publication. This output allows users to stay informed about current events in Greece without language barriers.",
      "output_format": "The output is a JSON array of objects. Each object represents a single news article and has a consistent structure with the following string keys: 'title', 'link', 'description', 'image', and 'site'. The provided examples do not indicate any pagination or cursoring mechanisms."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles or keywords from Greek news as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related keywords or titles from Greek news articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or topics from Greek news articles"
          }
        ]
      },
      {
        "tool name": "Indonesia News: kompas-detail",
        "connect params": [
          {
            "name": "guid",
            "description": "Can use article identifiers if Greek news references Kompas articles"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords or topics from Greek news articles related to Cameroon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "IEEE Spectrum API",
    "parent tool description": "The IEEE Spectrum News API is a simple HTTP-based API that allows developers and students to access the latest news and articles from the IEEE Spectrum website as well as integrate them as data into their own websites web applications or mobile apps. The API uses \"REST-Like\" operations over HTTP GET requests with parameters Header encoded into the request and its response encoded in JSON format.This API has been created for bringing the latest technology news provided by the  IEEE Spectrum Ne...",
    "tool name": "IEEE Spectrum API: Get the latest 30 News from IEEE Spectrum",
    "tool description": "Returns the latest 30 news articles from IEEE Spectrum as JSON objects containing title, URL, publication date, section, image source, and estimated reading time. This endpoint leverages the IEEE Spectrum News API, a simple HTTP-based REST-like service that enables developers and students to access and integrate current technology news and articles from IEEE Spectrum into their websites, web applications, or mobile apps. The API operates via HTTP GET requests with header-encoded parameters and delivers responses in JSON format, making it easy to incorporate the latest technology news into your projects.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ieee-spectrum-api.p.rapidapi.com/api\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ieee-spectrum-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get the latest 30 News from IEEE Spectrum",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of the 30 most recent news articles from IEEE Spectrum. Each article is represented as a JSON object containing its title, sub-headline, URL, publication date, relevant sections, an image source, and estimated reading time. This information is designed for developers to integrate and display up-to-date technology news in their own applications or websites.",
      "output_format": "The output is a single JSON array containing 30 JSON objects. Each object represents a news article and has a flat structure, with the exception of the 'newsSections' key which contains an array of strings. There is no pagination, as the tool is designed to return a fixed number of recent articles."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or keywords from IEEE Spectrum articles to search for related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use technology-related terms from IEEE Spectrum articles to find movie news about tech topics"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use titles or keywords from IEEE Spectrum articles to search for related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "India Today Unofficial",
    "parent tool description": "The India Today Unofficial API is a third-party web service that provides access to news content from the India Today platform. It allows developers to retrieve articles, videos, images, and other information related to various topics. Please note that it is not an official API provided by India Today.",
    "tool name": "India Today Unofficial: Get News",
    "tool description": "Retrieves all the latest news articles from the India Today platform. This uses a third-party web service that provides access to current news content, including articles, videos, and images across various topics from India Today's media network. The API allows developers to stay updated with recent news developments without having to manually browse the website, though it should be noted this is an unofficial API not directly provided by India Today.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://india-today-unofficial.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"india-today-unofficial.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of recent news articles from the India Today platform. Each article is represented as an object containing a category tag, the article's title, a brief content summary, and a URL ('href') linking to the full story on the India Today website.",
      "output_format": "The output is a JSON array of objects. Each object corresponds to a news article and contains the keys: 'tag', 'title', 'content', and 'href', all of which have string values."
    },
    "connected tools": [
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use the 'tag' value from the source tool's news articles to search for related articles"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the 'title' value from the source tool's news articles as search keywords"
          }
        ]
      },
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the 'title' value from the source tool's news articles as search keywords"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use the 'title' value from the source tool's news articles as search keywords"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use the 'title' value from the source tool's news articles as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Instant Cameroon News",
    "parent tool description": "Instantly provide the latest news and the latest information on Cameroon. It is the easier way to  get latest news about Cameroon.",
    "tool name": "Instant Cameroon News: Home page",
    "tool description": "Displays the Home and Welcome page that introduces the API for accessing the latest news and information about Cameroon. This service provides an easy way to stay updated with current events, developments, and important stories from Cameroon, offering users a convenient entry point to browse and discover comprehensive news coverage about the country.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://instant-cameroon-news.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instant-cameroon-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Home page",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a static HTML string that serves as a welcome page for the Instant Cameroon News API. The content introduces the API and provides instructions on how to retrieve actual news articles, such as by appending `/camerounnews` to the URL. This output does not contain any news articles itself.",
      "output_format": "The output is a single string containing a snippet of HTML code. It is not a structured JSON object or array. The content appears to be static, with no pagination or nesting."
    },
    "connected tools": [
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "page",
            "description": "This parameter could be used to navigate from the home page to specific news pages"
          },
          {
            "name": "search",
            "description": "This parameter could be used to search for specific news topics mentioned in the welcome page"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Kubric: The Comprehensive Movie News API",
    "parent tool description": "Stay up-to-date with Kubric, your ultimate movie news API. Access top sources, search by title or keyword, and experience visually engaging cinema updates and insights.",
    "tool name": "Kubric: The Comprehensive Movie News API: Sources",
    "tool description": "Returns the sources used for articles based on your current subscription tier. This endpoint leverages Kubric's comprehensive movie news API, which aggregates content from top industry sources to deliver cinema updates and insights. Your tier level determines which source attributions are accessible, allowing you to track information origins while staying up-to-date with the latest film industry news, reviews, and developments through this visually engaging platform.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kubric-the-comprehensive-movie-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Sources",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of movie news sources that are available based on the user's subscription tier. For each source, the output provides a unique ID, name, base and search URLs, and the name of the access tier. This allows users to identify the origin of news content and understand which sources are included in their plan.",
      "output_format": "The output is a JSON object containing a 'body' key. The value of 'body' is a JSON array where each element is an object representing a single news source. Each source object contains a nested 'urls' object."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Latest IPL News",
    "parent tool description": "An API showing all the latest IPL News around the world.",
    "tool name": "Latest IPL News: Get All IPL News",
    "tool description": "Returns comprehensive news coverage about the Indian Premier League (IPL) from sources worldwide. This endpoint aggregates the latest IPL news, updates, and developments from various global media outlets, providing a centralized source for cricket enthusiasts to stay informed about matches, player performances, team strategies, and other IPL-related events happening around the world.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://latest-ipl-news.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"latest-ipl-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All IPL News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of recent news articles about the Indian Premier League (IPL). Each article entry includes a title, a direct URL to the full story, and the name of the news source. The content covers various topics such as match viewership, player commentary, team performance, and financial news related to the IPL, serving as an aggregated news feed for followers of the league.",
      "output_format": "The output is a JSON-formatted string that represents an array of objects. Each object within the array corresponds to a single news article and contains three string keys: \"title\", \"url\", and \"source\". There is no indication of pagination or cursoring in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use IPL news titles or topics as search queries for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for movie news related to IPL or cricket personalities mentioned in IPL news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use IPL-related terms or team names from IPL news as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "LGBTQ World News Live",
    "parent tool description": "API showing all the latest LGBTQ+ News around the World",
    "tool name": "LGBTQ World News Live: Get All LGBTQ+ News",
    "tool description": "Returns comprehensive news coverage about LGBTQ+ topics and events from around the world. This API aggregates and delivers the latest LGBTQ+ news stories, developments, and headlines from global sources, providing access to current information on LGBTQ+ rights, culture, politics, and community events worldwide.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lgbtq-world-news-live.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lgbtq-world-news-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All LGBTQ+ News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of news articles related to LGBTQ+ topics from around the world. Each article in the list includes a title, a URL to the full story, and the source of the publication. This information allows users to stay informed about current events, rights, culture, and politics within the LGBTQ+ community by providing direct links to the original articles.",
      "output_format": "The output is a string that contains a JSON array of objects. Each object represents a news article and has three string keys: 'title', 'url', and 'source'. The provided examples appear to be truncated, suggesting the full output may contain a longer list of articles."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use LGBTQ+ news article titles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for LGBTQ+ movie-related news using article titles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use LGBTQ+ news article titles as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Malaysia Kini",
    "parent tool description": "Live News by Malaysia Kini",
    "tool name": "Malaysia Kini: Get Article by SID",
    "tool description": "Returns the full content of a specific news article based on the article's sid (story ID) that was previously obtained from the Get Latest Article List method. This endpoint is part of the Live News service by Malaysia Kini, providing access to current Malaysian news articles and their complete content for users seeking up-to-date information from this Malaysian news source.",
    "required_parameters": [
      {
        "name": "sid",
        "type": "NUMBER",
        "description": "Article id number return by **Get Latest Article List** method (stated as **sid**)",
        "default": "565154"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://malaysia-kini.p.rapidapi.com/get_article/565154\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"malaysia-kini.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get Article by SID",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool retrieves the full content and metadata of a specific news article from the Malaysian news source, Malaysia Kini, using a provided story ID (sid). The output includes the article's unique ID, title, and the complete text body. It can also provide supplementary information such as a URL for a top image and the publication date.",
      "output_format": "The tool returns a single, non-nested JSON object for one article. The fields 'id', 'title', and 'text' appear to be consistently present. Other fields, such as 'top-image' and 'publish-date', seem to be optional and may not be included in every response."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the article title or keywords from the article text as search terms for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related terms or titles extracted from the article text to search for movie news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use key topics or entities from the article as search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Medium",
    "parent tool description": "Unofficial API to search and find the latest stories written on medium.com",
    "tool name": "Medium: /stories/{topic}",
    "tool description": "Searches for and retrieves the latest stories published on Medium.com. This unofficial API provides access to Medium's content database, allowing you to discover recent articles, publications, and writers across various topics and interests without requiring official Medium platform integration.",
    "required_parameters": [
      {
        "name": "topic",
        "type": "STRING",
        "description": "Topic slug",
        "default": "technology"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Number of results to return",
        "default": 10
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Page offset",
        "default": 0
      },
      {
        "name": "filter",
        "type": "STRING",
        "description": "Page offset",
        "default": "latest"
      }
    ],
    "code": "import requests\n\nurl = \"https://medium16.p.rapidapi.com/stories/{topic}\"\nquerystring = {\"limit\": 10, \"page\": 0, \"topic\": \"\", \"filter\": \"latest\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"medium16.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/stories/{topic}",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of recent stories from Medium.com based on a specified topic. For each story, it provides comprehensive details including the title, URL, author information, engagement metrics like clap count and reading time, and the full article content structured as a list of paragraphs, each with a designated type (e.g., heading, paragraph, image).",
      "output_format": "The output is a JSON object with a single top-level key, \"data\", which contains an array of story objects. Each story object has nested objects for author details and an array of paragraph objects representing the article's content. Timestamps like `createdAt` and `firstPublishedAt` are large integers, likely representing milliseconds since the epoch."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use article titles or topics from Medium stories as search queries for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use movie-related topics or titles mentioned in Medium stories as search queries"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use topics, keywords, or titles from Medium stories as search terms for related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Moka News",
    "parent tool description": "A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  ",
    "tool name": "Moka News: Sources List (New)",
    "tool description": "Retrieves a complete list of all available news sources that can be accessed through the API. This endpoint connects you to a comprehensive news scraper service that aggregates the latest news content every minute from over 30 global news outlets (with plans to expand to hundreds of sources over time). The service continuously monitors and extracts fresh news content from diverse publications worldwide, allowing you to identify which sources are available for subsequent news retrieval operations.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://moka-news.p.rapidapi.com/sources.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moka-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Sources List (New)",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a comprehensive list of all news sources available through the Moka News API. Each entry in the list provides the full name of the news source, a unique numerical ID, and a machine-readable source code. This information is intended to be used to identify which sources are available for subsequent news retrieval operations, with the `source` code likely serving as a required parameter for other news-fetching tools.",
      "output_format": "The output is a string containing a serialized JSON array. Each element in the array is a JSON object representing a single news source. Each object contains a unique numerical `id`, a human-readable `sourceName`, and a machine-readable `source` code. The data is not paginated and appears to be a complete list."
    },
    "connected tools": [
      {
        "tool name": "Moka News: By Source (New)",
        "connect params": [
          {
            "name": "source",
            "description": "The source code from the Sources List can be used to specify which news source to retrieve articles from"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Moka News",
    "parent tool description": "A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  ",
    "tool name": "Moka News: By Source (New)",
    "tool description": "Retrieves the 50 most recent news items from a specific news source that you select from the available Sources list. This endpoint leverages a comprehensive news scraping API that continuously collects and updates news content every minute from over 30 global news outlets (with plans to expand to hundreds of sources). The system ensures you have access to fresh, timely information from diverse media organizations around the world without having to visit multiple websites.",
    "required_parameters": [
      {
        "name": "source",
        "type": "STRING",
        "description": "",
        "default": "cnn"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://moka-news.p.rapidapi.com/source.php\"\nquerystring = {\"source\": \"cnn\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moka-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "By Source (New)",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of up to 50 of the most recent news articles from a specified news source. For each article, the output includes the title, a link to the full article, a URL for an associated image, the publication date, the source's name, and the news category. This allows for a comprehensive overview of the latest news from a particular outlet.",
      "output_format": "The successful output is a JSON array of objects, where each object represents a single news article. In cases where there are no results or an error occurs, the tool returns a string which contains a dictionary-like structure with a single 'Error' key and a message string as its value."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles or keywords from the source tool's news articles"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related keywords or titles from the source tool's news articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords, names, or topics from the source tool's news articles"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords or topics from the source tool's news articles"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Moka News",
    "parent tool description": "A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  ",
    "tool name": "Moka News: Recent 100",
    "tool description": "Retrieves the 100 most recent news articles from various sources. This endpoint leverages a comprehensive news scraping API that continuously collects the latest headlines and stories every minute from over 30 diverse global news sources (with plans to expand to hundreds of sources over time). The service ensures you have access to up-to-date news content from around the world without having to visit multiple websites individually.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://moka-news.p.rapidapi.com/recent100.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moka-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Recent 100",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of the 100 most recent news articles gathered from over 30 global sources. Each article summary includes a title, a hyperlink to the full story, an associated image URL, the publication date, the source outlet, and the news category. This is intended to give users a broad and up-to-date overview of current events.",
      "output_format": "The output is a JSON array, serialized into a single string. Each element of the array is a JSON object representing one news article. There is no pagination, as the tool returns a fixed-size list of 100 articles."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use keywords/topics extracted from news articles"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location mentions from news articles about coronavirus"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie titles/topics extracted from entertainment news"
          }
        ]
      },
      {
        "tool name": "Moka News: By Source (New)",
        "connect params": [
          {
            "name": "source",
            "description": "Can use sources identified from news articles"
          }
        ]
      },
      {
        "tool name": "Moka News: by Category",
        "connect params": [
          {
            "name": "cat",
            "description": "Can use categories identified from news articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords/topics extracted from news articles"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords related to Cameroon extracted from news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Moka News",
    "parent tool description": "A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  ",
    "tool name": "Moka News: by Category",
    "tool description": "Retrieves the 50 most recent news articles filtered by a specific category such as Sports, World, or others. This endpoint leverages a comprehensive news scraping API that continuously collects and updates content every minute from over 30 global news sources (with plans to expand to hundreds of sources). The service ensures you have access to fresh, diverse news content from around the world, organized by topic for easy consumption and analysis.",
    "required_parameters": [
      {
        "name": "cat",
        "type": "STRING",
        "description": "",
        "default": "Sport"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://moka-news.p.rapidapi.com/category.php\"\nquerystring = {\"cat\": \"Sport\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moka-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "by Category",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of up to 50 recent news articles based on a specified category. Each article in the list includes a title, a URL link to the full article, a link to an associated image, the publication date, the source, and the category. In cases where no results are found, it returns an error object.",
      "output_format": "The successful output is a JSON array of objects, where each object represents a news article. Each object contains the keys: 'title', 'link', 'image', 'pubDate', 'source', and 'category'. The 'pubDate' value can be in various formats and timezones. If no articles are found for the requested category, the tool returns a JSON object with an 'Error' key and a descriptive string value."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use article titles or topics from the news articles as search queries"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use movie-related topics or titles from entertainment news articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use topics, entities, or keywords from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Medium: /stories/{topic}",
        "connect params": [
          {
            "param_name": "topic",
            "description": "Can use category or topic from news articles as Medium topic search"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Moka News",
    "parent tool description": "A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  ",
    "tool name": "Moka News: categories",
    "tool description": "Retrieves the complete list of Moka News categories, which is essential for subsequent queries targeting specific news categories. This endpoint leverages a comprehensive news scraping API that aggregates the latest news content from over 30 global sources (with plans to expand to hundreds of sources), refreshing every minute to ensure up-to-date information. Understanding the available categories allows for more precise filtering when accessing the continuously updated news database.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://moka-news.p.rapidapi.com/categories.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moka-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "categories",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The output provides a complete list of all available news categories. Each category is presented as an object containing a unique integer 'id' and its corresponding 'category' name. This list is intended to inform users of the valid categories that can be used to filter news in subsequent API calls.",
      "output_format": "The tool returns a JSON array of objects. Each object has a consistent structure with two keys: 'id' (integer) and 'category' (string). The response contains the full list of categories and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Moka News: by Category",
        "connect params": [
          {
            "name": "cat",
            "description": "The category parameter can use the category names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "News Network: Get News",
        "connect params": [
          {
            "name": "category",
            "description": "The category parameter can use the category names from the source tool's output"
          }
        ]
      },
      {
        "tool name": "News API_v2: Top Headlines",
        "connect params": [
          {
            "name": "category",
            "description": "The category parameter can use the category names from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Moka News",
    "parent tool description": "A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  ",
    "tool name": "Moka News: Recent 50",
    "tool description": "Retrieves the 50 most recent news articles from global sources. This endpoint leverages a comprehensive news scraping API that continuously collects fresh content every minute from over 30 diverse international news outlets (with plans to expand to hundreds of sources). The service ensures users have access to up-to-date information from around the world without needing to visit multiple news sites individually.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://moka-news.p.rapidapi.com/recent50.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"moka-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Recent 50",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of the 50 most recent news articles aggregated from over 30 global news outlets. For each article, it provides the title, a URL to the full story, a link to an associated image, the publication date, the source outlet, and the general category (e.g., Entertainment, Sport). This allows users to get a broad, up-to-date overview of global news.",
      "output_format": "The output is a JSON array of article objects, which is itself serialized into a single string. Each object in the array represents one news article and has a flat structure with key-value pairs. Based on the tool's name, the output is limited to 50 items, and there is no support for pagination or cursoring."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use news article titles or topics from the source tool's output as search terms"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location information extracted from news articles about specific countries/regions"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use topics or categories from news articles in the source tool's output"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords or topics from news articles in the source tool's output"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related topics or titles extracted from entertainment news in the source tool's output"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords, topics, or titles from news articles in the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Narco in Mexico",
    "parent tool description": "Narco in Mexico News",
    "tool name": "Narco in Mexico: Get All Narco News",
    "tool description": "Retrieves all available news articles related to narco activity in Mexico. This endpoint provides comprehensive access to the Narco in Mexico News service, which collects and curates news stories about drug cartels, trafficking operations, violence, and law enforcement efforts throughout Mexico. The service helps users stay informed about the ongoing narco situation in the country, tracking developments across different regions and providing context about cartel activities and their impact on Mexican society and security.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://narco-in-mexico.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"narco-in-mexico.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All Narco News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of news articles related to narco activity in Mexico. Each article entry includes a title, a URL path to the full story, and the name of the news source. This information is intended to help users stay current on developments in Mexico's drug trade, including cartel violence and law enforcement actions.",
      "output_format": "The output is a list of strings, where each string is a JSON-serialized array of objects. Each object within the array represents a single news article and contains the string keys 'title', 'url', and 'source'. The 'url' value appears to be a relative path, not a complete, absolute URL."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use narco-related article titles as search terms for business/finance news related to narco activities"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could search for movie news related to narco topics extracted from article titles"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "News Network",
    "parent tool description": "Global network of news.",
    "tool name": "News Network: Get News",
    "tool description": "Returns a curated list of news articles filtered by your selected region and category preferences. This endpoint leverages a global network of news sources to provide comprehensive coverage across different geographical areas and topic categories, giving you access to relevant news content from around the world. You can explore the functionality through their demo site at https://core-api.net/news/news.html.",
    "required_parameters": [
      {
        "name": "category",
        "type": "ENUM",
        "description": "",
        "default": "technology"
      },
      {
        "name": "region",
        "type": "ENUM",
        "description": "ae: United Arab Emirates\nar: Argentina\nat: Austria\nau: Australia\nbe: Belgium\nbg: Bulgaria\nbr: Brazil\nca: Canada\nch: Switzerland\ncn: China \nco: Colombia\ncu: Cuba\ncz:\tCzech Republic\nde: Germany\neg: Egypt\nfr: France\ngb: United Kingdom\ngr: Greece\nhk: Hong Kong\nhu: Hungray\nid: Indonesia\nie: Ireland\nil: Israel\nin: India\nit: Italy\njp: Japan\nkr: South Korea\nlt: Lithuania\nlv: Latvia\nma: Morocco\nmx: Mexico\nmy: Malaysia\nng: Nigeria\nnl: Netherlands\nno: Norway\nnz: New Zealand\nph: Philippines\npl: Poland\npt: Portugal\nro: Romania\nrs: Serbia\nru: Russia\nsa: Saudi Arabia\nse: Sweden\nsg: Singapore\nsi: Slovenia\nsk: Slovakia\nth: Thailand\ntr: Turkey\ntw: Taiwan\nua: Ukraine\nus: United States\nve: Venuzuela\nza: South Africa",
        "default": "us"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://news-network.p.rapidapi.com/get_news\"\nquerystring = {\"category\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-network.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a dictionary of news articles, keyed by the specified two-letter country code (e.g., 'us' for the United States). The value for each country code is an object intended to contain a list of curated news articles relevant to that region. This allows users to retrieve news content filtered by geographical area.",
      "output_format": "The output is a JSON object where keys are strings representing two-letter country codes. The values are nested objects. Although the examples show these nested objects as empty, the tool description implies they would contain a list of news articles. The full structure of the article objects is unknown."
    },
    "connected tools": [
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use the country code from News Network: Get News output as the location parameter"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetStats",
        "connect params": [
          {
            "name": "location",
            "description": "Can use the country code from News Network: Get News output as the location parameter"
          }
        ]
      },
      {
        "tool name": "News API_v2: Top Headlines",
        "connect params": [
          {
            "name": "country",
            "description": "Can use the country code from News Network: Get News output as the country parameter"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "News Network",
    "parent tool description": "Global network of news.",
    "tool name": "News Network: Search News",
    "tool description": "Searches for news articles based on a specified keyword, retrieving relevant results from a global network of news sources. This tool connects you to a comprehensive international news database, allowing you to find current events, stories, and media coverage matching your search terms. For a demonstration of the search capabilities and coverage, you can visit the demo site at https://core-api.net/news/news.html.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "Joe Biden"
      },
      {
        "name": "language",
        "type": "ENUM",
        "description": "\nar: arabic\nde: german\nen: english\nes: Spanish\nfr: French\nhe: hebrew\nit: italian\nnl: dutch\nno: norwegian\npt: portuguese\nru: russian\nse: swedish\nzh: chinese",
        "default": ""
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://news-network.p.rapidapi.com/search_news\"\nquerystring = {\"keyword\": \"Joe Biden\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-network.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Search News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of news articles that match a given search keyword. For each article, it provides comprehensive details including the title, author, source, a short description, a content snippet, the publication date, and URLs for both the full article and a related image. The tool supports multiple languages, returning articles that match the language of the keyword.",
      "output_format": "The output is a single JSON object. This object contains a key, 'articles', which holds a JSON array of article objects. Each object within this array has a nested 'source' object. The 'source.id' field was null in all provided examples, suggesting it may often be unpopulated. Other fields like 'author' or 'urlToImage' may also be nullable, depending on the source."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use keywords/topics from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use topics or keywords from news articles"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords or topics from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related keywords or titles from news articles"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "News Network",
    "parent tool description": "Global network of news.",
    "tool name": "News Network: Available Region List",
    "tool description": "Returns a list of available geographic regions for news coverage. This endpoint provides access to a global network of news sources, allowing users to discover which specific regions are available for monitoring or retrieving news content. The service aggregates news from various international sources, enabling comprehensive access to worldwide news coverage organized by regional boundaries.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://news-network.p.rapidapi.com/get_regions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-network.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Available Region List",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool output is a dictionary that maps two-letter country codes to their full country names. This list enumerates all the geographic regions for which the News Network provides news coverage. Users can reference this list to determine which regions are supported and to find the correct code for a specific country when using other related tools.",
      "output_format": "The output is a single, flat JSON object. The keys are strings representing two-letter country codes, and the values are strings of the corresponding full country names. The output is not paginated and returns the complete list in a single response. There appear to be some minor inconsistencies in the data, such as trailing spaces or misspellings (e.g., \"China \", \"Hungray\")."
    },
    "connected tools": [
      {
        "tool name": "News Network: Get News",
        "connect params": [
          {
            "name": "region",
            "description": "The region parameter can use the two-letter country codes from the source tool's output as valid input values."
          }
        ]
      },
      {
        "tool name": "AI News - Global: Get News",
        "connect params": [
          {
            "name": "region",
            "description": "The region parameter can use the two-letter country codes from the source tool's output as valid input values."
          }
        ]
      },
      {
        "tool name": "News API_v2: Top Headlines",
        "connect params": [
          {
            "name": "country",
            "description": "The country parameter can use the two-letter country codes from the source tool's output as valid input values."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Reuters Business and Financial News",
    "parent tool description": "Our Financial News API is a comprehensive and accurate data source of financial news from Reuters. This API allows users to retrieve the latest financial news articles and updates from Reuters, covering topics such as stocks, bonds, commodities, currencies, and more. The API is designed to provide real-time financial news updates, and allows users to filter news based on keywords, location, and date range. This data can be easily integrated into a wide range of use cases, such as financial an...",
    "tool name": "Reuters Business and Financial News: Get all Categories",
    "tool description": "Retrieves all available news categories from the Financial News API. This uses Reuters' comprehensive financial news database to provide a structured list of categories that can be used to filter and organize news content covering stocks, bonds, commodities, currencies, and more. The categorization system enables more targeted searches when accessing real-time financial news updates, allowing for better organization of information when integrating this data into financial analysis tools and platforms.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://reuters-business-and-financial-news.p.rapidapi.com/all-category\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reuters-business-and-financial-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all Categories",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of news categories available from the Reuters Financial News API. Each category in the list is an object containing a unique numeric ID and a corresponding descriptive name. This list is intended to be used to enable more targeted searches and filtering of financial news articles.",
      "output_format": "The output is a string that represents a JSON array of objects. Each object corresponds to a news category and contains two keys: 'id' (an integer) and 'name' (a string). The tool seems to return all categories in a single, non-paginated response."
    },
    "connected tools": [
      {
        "tool name": "Reuters Business and Financial News: Get all SubCategories",
        "connect params": [
          {
            "param_name": "category_id",
            "description": "The category IDs from the source tool could be used to retrieve subcategories for a specific category"
          }
        ]
      },
      {
        "tool name": "News API_v2: Top Headlines",
        "connect params": [
          {
            "param_name": "category",
            "description": "The category names from the source tool could be mapped to News API categories"
          }
        ]
      },
      {
        "tool name": "Moka News: by Category",
        "connect params": [
          {
            "param_name": "cat",
            "description": "The category names from the source tool could be mapped to Moka News categories"
          }
        ]
      },
      {
        "tool name": "News Network: Get News",
        "connect params": [
          {
            "param_name": "category",
            "description": "The category names from the source tool could be mapped to News Network categories"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Reuters Business and Financial News",
    "parent tool description": "Our Financial News API is a comprehensive and accurate data source of financial news from Reuters. This API allows users to retrieve the latest financial news articles and updates from Reuters, covering topics such as stocks, bonds, commodities, currencies, and more. The API is designed to provide real-time financial news updates, and allows users to filter news based on keywords, location, and date range. This data can be easily integrated into a wide range of use cases, such as financial an...",
    "tool name": "Reuters Business and Financial News: Get all SubCategories",
    "tool description": "Retrieves all available subcategories of financial news content. This endpoint uses Reuters' comprehensive financial news database to provide a structured categorization system, allowing users to discover and navigate through various specialized topics within financial markets such as stocks, bonds, commodities, currencies, and more. The subcategories enable more precise filtering of real-time financial news updates, which can be integrated into financial analysis platforms, investment tools, or market monitoring applications.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://reuters-business-and-financial-news.p.rapidapi.com/all-category-subcategory\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reuters-business-and-financial-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all SubCategories",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of all available financial news subcategories from Reuters. Each subcategory in the list is an object containing a unique integer `id` and its descriptive `name`. This information is intended to be used to discover available news topics and to populate user interfaces with filtering or navigation options.",
      "output_format": "The output is a JSON-formatted string which deserializes into a top-level array of objects. Each object represents a subcategory and contains an `id` (integer), `name` (string), and a `childs` key (array). The `childs` array suggests a potential for a nested, hierarchical structure, but it is empty in all provided examples, indicating the returned list is flat."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use subcategory names as search terms for business and finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use subcategory names related to entertainment finance or media business for targeted movie industry financial news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "fast Email verifier",
    "parent tool description": "APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.",
    "tool name": "fast Email verifier: Role Account",
    "tool description": "Checks the rols account associated with your domain, allowing you to verify domain-specific email configurations. This endpoint leverages APISOLUTION's comprehensive email validation and verification API, designed for developers working on start-ups and staff projects who need fast, reliable email infrastructure assessment.",
    "required_parameters": [
      {
        "name": "domain",
        "type": "STRING",
        "description": "",
        "default": "domain.org"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://fast-email-verifier.p.rapidapi.com/IsRoleAccount\"\nquerystring = {\"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"fast-email-verifier.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Role Account",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "This tool checks if a given email domain is classified as a \"RoleAccount domain\". Based on the examples, this appears to identify common free email providers (like gmail.com, yahoo.com) and distinguish them from what are presumably corporate or organizational domains. The output is a simple statement confirming the result of the check, or a \"Not Found\" message if the domain cannot be processed or is invalid.",
      "output_format": "The output format is inconsistent. A successful lookup returns a string that represents a single key-value pair, similar to a Python dictionary (`{'RoleAccount': '...'}`). An error or a case where the domain is not found returns a simple plain text string ('Not Found\\n'). The output is not serialized as a standard JSON object and is not nested or paginated."
    },
    "connected tools": [
      {
        "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain classification can be used to check if it's disposable"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Bybit",
    "parent tool description": "Public Data Bybit. Cryptocurrency prices and charts. Derivatives, Futures, Spot, USDC Contract",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Contract name",
        "default": "BTC-30SEP22-400000-C"
      },
      {
        "name": "status",
        "type": "STRING",
        "description": "Status, can be WAITING_ONLINE, ONLINE, DELIVERING, or OFFLINE",
        "default": "ONLINE"
      },
      {
        "name": "direction",
        "type": "STRING",
        "description": "prev: prev page, next: next page.",
        "default": ""
      },
      {
        "name": "cursor",
        "type": "STRING",
        "description": "API pass-through",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://bybit4.p.rapidapi.com/option/usdc/openapi/public/v1/symbols\"\nquerystring = {\"symbol\": symbol, \"status\": status}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bybit4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Bybit: Contract Info",
    "tool description": "Retrieves cryptocurrency price and chart data for all assets when no specific query is provided. This endpoint leverages Bybit's public data infrastructure, which provides real-time cryptocurrency price and chart data across derivatives, futures, spot markets, and USDC contracts, ensuring users receive comprehensive market insights even when no specific query is specified.",
    "API name": "Contract Info",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a response object indicating the status of a contract information request. This response includes a return code (`retCode`), a descriptive message (`retMsg`), and a result object. The provided examples exclusively show an error state where a contract is not available, resulting in an empty data list.",
      "output_format": "The output is a JSON object with a nested `result` object. This `result` object contains a `dataList` array, which is empty in the examples, a `resultTotalSize` integer, and a `cursor` string, which suggests the API supports pagination for fetching results in chunks."
    },
    "connected tools": [
      {
        "tool name": "Bybit: Latest Symbol Info",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the contract info response"
          }
        ]
      },
      {
        "tool name": "Bybit: Get Open Interest",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the contract info response"
          }
        ]
      },
      {
        "tool name": "Bybit: Get Option Delivery Price",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the contract info response"
          }
        ]
      },
      {
        "tool name": "Bybit: Order Book",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the contract info response"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type_2",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type_1",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "open"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mult\"\nquerystring = {\"series_type_2\": \"close\", \"format\": \"json\", \"series_type_1\": \"open\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MULT",
    "tool description": "Multiplies the values of two specified time series to generate a combined metric. This endpoint leverages the Financial Data API's access to real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to perform complex financial analysis by correlating and quantifying interrelated market data points.",
    "API name": "MULT",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides a calculated time series for a specified financial instrument (stock, forex, crypto). The output is a JSON object containing metadata (`meta`) about the instrument and the calculation, and a list of time-stamped values (`values`). Each value in the list is the result of multiplying two data series (e.g., open price * close price) for a specific datetime, enabling quantitative analysis.",
      "output_format": "The output is a single JSON object with two main keys: `meta` (an object) and `values` (an array). The `values` array contains a list of objects, each with a `datetime` string and a `mult` value, which is the calculated product returned as a string. The `meta` object's fields can vary slightly based on the asset type; for example, stocks may have a `currency` field, while forex pairs have `currency_base` and `currency_quote` fields. The data in the `values` array appears to be sorted in reverse chronological order. There is no indication of pagination in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: WMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DEMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: TEMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: TRIMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: KAMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MAMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: T3MA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CCI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: AROON",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: VWAP",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ICHIMOKU",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "zip",
        "type": "STRING",
        "description": "Zip/post code and country code divided by comma. Please use ISO 3166 country codes",
        "default": "E14,GB"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/geo/1.0/zip\"\nquerystring = {\"zip\": zip}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Coordinates by zip/post code",
    "tool description": "Retrieves geographic coordinates using a zip/postal code. This leverages a proprietary convolutional neural network that processes diverse data sources\u2014including global and local weather models, satellites, radars, and a network of weather stations\u2014to accurately determine location coordinates. By integrating these inputs, it provides precise geographic data to support weather-related analyses, ensuring reliability even in complex or remote regions. The service is optimized for speed, delivering results via light-speed APIs to enable real-time applications.",
    "API name": "Coordinates by zip/post code",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides the geographical details for a specific zip or postal code. This includes the city or area name, the precise latitude and longitude coordinates, and a two-letter country code. The information is primarily used to convert a postal code into geographic coordinates for use in downstream tasks, such as weather forecasting or mapping applications.",
      "output_format": "The output is a single, flat JSON object. The examples are provided as strings but represent a standard key-value object structure. No pagination or cursoring is indicated. It is unknown if fields can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Forecast: RapidApiGetForecastSummaryByCoordinates",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Forecast: RapidApiGetForecastHourlyByCoordinates",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Nearby Stations",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Plant Hardiness Zone: Retrieve the Hardiness Zone",
        "connect params": [
          {
            "name": "zipcode",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MusicData API",
    "parent tool description": "Data for Youtube, Spotify music videos, tracks, albums, artist & more",
    "tool name": "MusicData API: /youtube/milestone/{milestone}",
    "tool description": "Identifies the fastest music videos to reach a specified milestone of views (X million) on YouTube, where X must be between 100-7000 million and increase in increments of 100 (e.g., 100M, 200M, 300M). This leverages comprehensive YouTube analytics data, providing insights into record-breaking performance metrics across music videos, tracks, albums, and artists. The tool analyzes viewing velocity trends from YouTube's vast database to determine which content achieved specific viewership milestones in the shortest timeframe.",
    "required_parameters": [
      {
        "name": "milestone",
        "type": "string",
        "description": "",
        "default": "500"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://musicdata-api.p.rapidapi.com/youtube/milestone/500\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"musicdata-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/youtube/milestone/{milestone}",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool provides a ranked list of the fastest music videos to reach a specified viewership milestone on YouTube. For each video, the output includes its rank, title, a direct YouTube URL, and the number of days it took to achieve the milestone. This information is used to analyze the performance and virality of music videos.",
      "output_format": "The output is a string representation of a JSON array, where each element is an object representing a music video. Each object contains four string keys: 'ranking', 'video' (the title), 'link' (the URL), and 'days'. Note that the 'ranking' and 'days' values are strings, not numbers. There is no evidence of pagination or nested structures in the provided examples, but some string values appear to be truncated."
    },
    "connected tools": [
      {
        "tool name": "Youtube Music API (Detailed): Get Song",
        "connect params": [
          {
            "name": "video_id",
            "description": "Can extract video ID from the YouTube URL in the source output"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Watch Playlist",
        "connect params": [
          {
            "name": "video_id",
            "description": "Can extract video ID from the YouTube URL in the source output"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Song Related",
        "connect params": [
          {
            "name": "browse_id",
            "description": "Can be derived from video information in the source output"
          }
        ]
      },
      {
        "tool name": "Miza: Song search",
        "connect params": [
          {
            "name": "search",
            "description": "Can use video title from the source output"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use video title from the source output"
          }
        ]
      },
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Can use YouTube URL from the source output"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Can use video title from the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Genius - Song Lyrics",
    "parent tool description": "Genius - Song Lyrics, Artists, Albums, Knowledge & More API",
    "tool name": "Genius - Song Lyrics: Chart: Artists",
    "tool description": "Retrieves chart information about artists, displaying rankings and popularity metrics for musicians. This endpoint leverages Genius's comprehensive database of music industry data, which includes song lyrics, artist information, albums, and related knowledge. The API provides access to Genius's extensive collection of music content and metadata, allowing users to explore trending artists and their relative popularity within the music ecosystem.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "time_period",
        "type": "ENUM",
        "description": "Default: `day`. One of these:\n\n- day\n- week\n- month\n- all_time",
        "default": ""
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Paginated offset, (e.g., per_page=5&page=3 returns results 11\u201315)",
        "default": "1"
      },
      {
        "name": "per_page",
        "type": "NUMBER",
        "description": "Number of results to return per request",
        "default": "10"
      },
      {
        "name": "text_format",
        "type": "STRING",
        "description": "Format for text bodies related to the document. One or more of `dom`, `plain`, `markdown`, and `html`, separated by commas (defaults to html).",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://genius-song-lyrics1.p.rapidapi.com/chart/artists/\"\nquerystring = {\"page\": page, \"per_page\": per_page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"genius-song-lyrics1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Chart: Artists",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool provides a ranked list of popular artists from the Genius charts. For each artist, the output includes their name, unique ID, URLs for their Genius page and images, and verification status. The list represents a ranking of artists based on popularity or activity within the Genius music ecosystem.",
      "output_format": "The output is a JSON object containing a single key, \"chart_items\". This key holds an array of objects, each representing an artist on the chart. The actual artist data is nested within an \"item\" object. Some fields, like the 'iq' score (a likely popularity metric), can be null or absent for certain artists."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "The artist name from the chart_items can be used as a search query"
          },
          {
            "name": "type",
            "description": "Can be set to 'artists' to search for the charted artists"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query",
            "description": "The artist name from the chart_items can be used as a search query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Address From To Latitude Longitude",
    "parent tool description": "Free API to convert coordinates (latitude, longitude) to and from address \nAn Easy, Open, Worldwide, Free Geocoding API",
    "tool name": "Address From To Latitude Longitude: Coordinates  (latitude longitude) to Address",
    "tool description": "Converts a street address into latitude and longitude coordinates, requiring city/town, state, and street name for optimal accuracy. This free, open worldwide geocoding API transforms physical addresses into precise GPS coordinates, enabling geographic positioning for various applications without cost or restrictions.",
    "required_parameters": [
      {
        "name": "lng",
        "type": "NUMBER",
        "description": "",
        "default": "2.29451"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "",
        "default": "48.85824"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://address-from-to-latitude-longitude.p.rapidapi.com/geolocationapi\"\nquerystring = {\"lng\": lng, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Coordinates  (latitude longitude) to Address",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographic locations matching an input address. For each match, it provides a full, formatted address string, its constituent parts (like city, region, country, and postal code), and the precise latitude and longitude coordinates. The output also includes a 'Distance' value, which likely measures the proximity or relevance of the found address to the original query.",
      "output_format": "The output is a string-encoded JSON object. This object has a single key, \"Results\", which contains an array of result objects. Each object in the array represents a single location match. Fields within these objects can be optional and may not appear in every result (e.g., 'subregion', 'neighborhood', 'addressnumber')."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "TrueWay Geocoding: ReverseGeocode",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lng",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/reversegeocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use longitude,latitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: allUsaPrice",
    "tool description": "Provides the average current gasoline prices across states in America, delivering a broad market overview rather than individual station data. This service is part of a comprehensive fuel price tracking system that monitors gasoline and diesel prices at various fuel stations throughout different cities, allowing users to compare fuel costs across regions and make informed decisions about where and when to purchase fuel.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/allUsaPrice\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "allUsaPrice",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of average fuel prices for each state in the United States. Each item in the list represents a state and provides the current average prices for regular gasoline, mid-grade, premium, and diesel fuel. The prices are denominated in US dollars, allowing for a broad comparison of fuel costs across different regions.",
      "output_format": "The output is a JSON object with a 'result' key that contains an array of objects. Each object in the array corresponds to a U.S. state and includes its name, currency, and the prices for various fuel types (gasoline, midGrade, premium, diesel). The price values are formatted as strings."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "The state names from the gas price data could be used as destination inputs for trip planning"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "param_name": "state",
            "description": "The state names from the allUsaPrice output can be directly used as input for the stateUsaPrice endpoint to get more detailed information about a specific state"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "State names from the gas price data could be used as location search terms"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "State names from the gas price data could be used as location search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "hotel_ids",
        "type": "STRING",
        "description": "Comma separated string of PPN hotel ids (Semi Opaque Only)",
        "default": "700000000,700000001,700000002,700000003"
      }
    ],
    "optional_parameters": [
      {
        "name": "image_size",
        "type": "STRING",
        "description": "The size of the image returned. Valid Options: small (60px), medium(300 to 312px) or large(500 to 800px)",
        "default": "medium"
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/photos\"\nquerystring = {\"image_size\": \"medium\", \"hotel_ids\": \"700000000,700000001,700000002,700000003\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Hotel photos",
    "tool description": "Retrieves a list of photos for a specific hotel. This endpoint is part of Priceline.com's travel service, which enables users to search for hotels, rental cars, and flights, providing visual details of accommodations to enhance booking decisions.",
    "API name": "Hotel photos",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of image URLs for a specific hotel. A successful response includes the hotel's ID and a collection of URLs pointing to photos of the property. This is used to provide users with visual details of accommodations to help them make booking decisions. An error response is returned if no photos are found for the specified hotel.",
      "output_format": "The output is a single JSON object. The structure differs for success and error cases. In a successful response, the data is deeply nested under 'getHotelPhotos.results.hotel_photo_data.hotel_photos_0'. The actual photo URLs are in a 'photo_data' object, which uses numbered keys (e.g., 'photo_0', 'photo_1') instead of a JSON array. In an error case, the output contains an 'error' object with a status message and code."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The hotel ID can be extracted from the source tool's output to retrieve detailed information about the same hotel"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The hotel location information from the photo data could be used to plan a trip to that destination"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Spotify",
    "parent tool description": "Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.",
    "tool name": "Spotify: Concerts",
    "tool description": "Retrieves information about concerts and live music events for artists. This endpoint leverages Spotify's comprehensive data API, which provides access to millions of songs, podcasts, artists, albums, and playlists, allowing users to discover upcoming performances by their favorite musicians. The data includes details such as venue locations, dates, and ticket availability, drawing from Spotify's extensive artist database and music ecosystem to help users plan their live music experiences.",
    "required_parameters": [
      {
        "name": "gl",
        "type": "STRING",
        "description": "",
        "default": "US"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://spotify23.p.rapidapi.com/concerts/\"\nquerystring = {\"gl\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify23.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Concerts",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns detailed information about live music events and concerts. The output includes a list of events, each specifying the venue, location, date, and a comprehensive list of all performing artists. For each artist, details such as their name, Spotify URI, and image are provided. This information is intended to help users discover and plan for upcoming live music performances.",
      "output_format": "The output is a string-serialized JSON object. The primary data is contained within the 'events' key, which is an array of event objects. This data is deeply nested; each event contains a 'concerts' array, which in turn contains a 'concert' object with artist details. If no concerts are found, the tool returns a string representing an empty JSON array ('[]')."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Get artists",
        "connect params": [
          {
            "name": "ids",
            "description": "Artist IDs (you can use commas)",
            "connection_point": "The Spotify URIs of artists from concert events can be extracted and used as artist IDs"
          }
        ]
      },
      {
        "tool name": "Spotify Web: Get artists",
        "connect params": [
          {
            "name": "ids",
            "description": "Artist IDs (you can use commas)",
            "connection_point": "The Spotify URIs of artists from concert events can be extracted and used as artist IDs"
          }
        ]
      },
      {
        "tool name": "Spotify: Get radio playlist",
        "connect params": [
          {
            "name": "uri",
            "description": "Artist or song URI",
            "connection_point": "The Spotify URIs of artists from concert events can be used directly"
          }
        ]
      },
      {
        "tool name": "Spotify Web: Get radio playlist",
        "connect params": [
          {
            "name": "uri",
            "description": "Artist or song URI",
            "connection_point": "The Spotify URIs of artists from concert events can be used directly"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search query",
            "connection_point": "Artist names from concert events can be used as search queries"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query",
            "description": "Search query",
            "connection_point": "Artist names from concert events can be used as search queries"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "WeatherAPI.com",
    "parent tool description": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "tool name": "WeatherAPI.com: Time Zone API",
    "tool description": "Retrieves up-to-date time zone and local time information in JSON format. This endpoint is part of WeatherAPI.com, a comprehensive weather and geolocation service that provides extensive data including weather forecasts, historical weather, air quality, astronomy, and geolocation information. The Time Zone API specifically delivers accurate time data that complements the platform's broader suite of environmental and location-based services.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/timezone.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Time Zone API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The output is a JSON object containing detailed geolocation and time information for a specific location. It provides the location's name, region, country, and precise geographic coordinates (latitude and longitude). The primary data includes the IANA time zone identifier (e.g., 'America/New_York'), the current local time as a human-readable string, and the corresponding Unix epoch timestamp.",
      "output_format": "The tool returns a single JSON object. This object has one top-level key, \"location\", which contains a nested object with all the data fields. The provided examples do not show any evidence of pagination, cursoring, or nullable fields."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timeZoneId",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Alpha Vantage",
    "parent tool description": "The simplest and most effective way to receive stock, ETF, forex, technical indicators, and cryptocurrency data.  Constantly ranked as a leading API provider for ease of use, accuracy, and price. [See the documentation](https://www.alphavantage.co/documentation/) and [read more](https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631) on the market data industry.  [Start now for free](https://www.alphavantage.co/support/#api-key).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Time interval between two consecutive data points in the time series. The following values are supported: 1min, 5min, 15min, 30min, 60min",
        "default": "5min"
      },
      {
        "name": "function",
        "type": "STRING",
        "description": "The time series of your choice.",
        "default": "TIME_SERIES_INTRADAY"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "The equity of your choice.",
        "default": "MSFT"
      }
    ],
    "optional_parameters": [
      {
        "name": "datatype",
        "type": "STRING",
        "description": "By default, datatype=json. Strings json and csv are accepted with the following specifications: json returns the intraday time series in JSON format; csv returns the time series as a CSV (comma separated value) file.",
        "default": "json"
      },
      {
        "name": "output_size",
        "type": "STRING",
        "description": "Strings compact and full are accepted with the following specifications: compact returns only the latest 100 data points in the intraday time series; full returns the full-length intraday time series. The \\\"compact\\\" option is recommended if you would like to reduce the data size of each API call.",
        "default": "compact"
      }
    ],
    "code": "import requests\n\nurl = \"https://alpha-vantage.p.rapidapi.com/query\"\nquerystring = {\"datatype\": datatype, \"output_size\": output_size, \"interval\": interval, \"function\": function, \"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"alpha-vantage.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
    "tool description": "Returns intraday time series data (timestamp, open, high, low, close, volume) for a specified equity. This endpoint is part of a comprehensive API platform that provides stock, ETF, forex, technical indicator, and cryptocurrency data, leveraging real-time market feeds and historical databases to deliver accurate, actionable financial insights. Designed for ease of use, it empowers developers and analysts to integrate reliable market data into applications, enabling informed decision-making through precise, up-to-date financial information.",
    "API name": "TIME_SERIES_INTRADAY",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides intraday time series financial data for a specified equity. The output contains metadata about the data returned, including the stock symbol, refresh time, and interval. The primary content is a time series object where each key is a timestamp and its value is an object containing the open, high, low, close (OHLC) prices and volume for that specific time period.",
      "output_format": "The output is a single JSON object with two top-level keys: 'Meta Data' and a dynamic key like 'Time Series (Xmin/Xhour)'. The 'Time Series' key contains a nested object where keys are string-formatted timestamps and values are objects holding the OHLC and volume data. All numerical values, including prices and volume, are returned as strings."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the intraday data can be used"
          },
          {
            "name": "series_type",
            "description": "Can use open/high/low/close values from the intraday data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the intraday data can be used"
          },
          {
            "name": "series_type",
            "description": "Can use open/high/low/close values from the intraday data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the intraday data can be used"
          },
          {
            "name": "series_type",
            "description": "Can use open/high/low/close values from the intraday data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the intraday data can be used"
          },
          {
            "name": "series_type",
            "description": "Can use open/high/low/close values from the intraday data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the intraday data can be used"
          },
          {
            "name": "series_type",
            "description": "Can use open/high/low/close values from the intraday data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the intraday data can be used"
          },
          {
            "name": "series_type",
            "description": "Can use open/high/low/close values from the intraday data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: VWAP",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the intraday data can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          },
          {
            "name": "interval",
            "description": "The interval from the intraday data can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the intraday data can be used"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "market",
        "type": "STRING",
        "description": "",
        "default": "Tenerife"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "Number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/countByMarket\"\nquerystring = {\"market\": market, \"bedrooms\": bedrooms, \"maxGuestCapacity\": maxguestcapacity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Count listings by market",
    "tool description": "Retrieves the count of Airbnb listings in a specified market, filtered by bedrooms and maximum guest capacity. This endpoint is part of a comprehensive service providing real-time access to Airbnb data, including listing details, future prices, availability, and reviews. By leveraging a database of listings updated daily, it enables users to analyze accommodation trends and make data-driven decisions, supported by 24-hour response times for inquiries and scalability for detailed market insights.",
    "API name": "Count listings by market",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides the total count of Airbnb listings within a specific market, based on filters like the number of bedrooms and guest capacity. This numerical count, along with a unique request ID, allows users to quantify the accommodation supply in a given area. The information is primarily used for market analysis and tracking accommodation trends.",
      "output_format": "The output is a JSON object containing a `requestId` string and a `results` key. The `results` key holds a JSON array that consistently contains a single object. This nested object has one key, `totalListings`, whose value is a string representing the total count."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The count of listings could inform destination selection based on accommodation availability"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The market parameter can use the same market value that generated the count"
          },
          {
            "name": "bedrooms",
            "description": "The bedrooms filter can match what was used in the count query"
          },
          {
            "name": "maxGuestCapacity",
            "description": "The guest capacity filter can match what was used in the count query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cities Cost of Living",
    "parent tool description": "Get detailed information about the living expenses of 650+ cities around the world.",
    "tool name": "Cities Cost of Living: Get Currencies List",
    "tool description": "Retrieves a comprehensive list of all available currencies used in the database. This endpoint leverages a global cost-of-living database covering over 650 cities worldwide, allowing users to understand which currencies are tracked within the system. The currency information serves as a foundation for comparing and analyzing living expenses across different regions, helping travelers, expatriates, and researchers make informed financial decisions when evaluating or comparing costs between international locations.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cities-cost-of-living1.p.rapidapi.com/get_currencies_list\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cities-cost-of-living1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get Currencies List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a comprehensive list of all currency codes tracked within the cost-of-living database. This list consists of standard three-letter currency abbreviations (e.g., 'USD', 'EUR'). This information is intended to inform users about which currencies are supported and can be used for subsequent queries and comparisons.",
      "output_format": "The output is a JSON object containing a single key, \"currencies\". The value associated with this key is an array of strings, with each string representing a unique currency code. The list appears to be complete and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "currency",
            "description": "The source tool provides valid currency codes in ISO 4217 format that can be used to specify the currency for hotel pricing information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "",
        "default": "50"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "",
        "default": "50"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/air_pollution/forecast\"\nquerystring = {\"lat\": lat, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Forecast air pollution data",
    "tool description": "Generates 5-day air pollution forecasts with hourly data on pollutants like Carbon monoxide (CO), Nitrogen dioxide (NO2), PM2.5, and Ozone (O3), leveraging historical data from 27th November 2020. This uses a proprietary convolutional neural network that integrates global and local weather models, satellite imagery, radar systems, and a network of weather stations to process diverse data sources, ensuring accurate localized predictions by accounting for regional climate nuances.",
    "API name": "Forecast air pollution data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a 5-day air pollution forecast for a given latitude and longitude. The output contains a list of hourly data points, where each point includes the Air Quality Index (AQI) and the concentration of various pollutants like Carbon monoxide (CO), Nitrogen dioxide (NO2), PM2.5, and Ozone (O3). This information is intended for detailed, localized air quality monitoring and analysis.",
      "output_format": "The output is a single JSON object. The core data is within a top-level key named 'list', which contains a JSON array of objects, each representing an hourly forecast. Each object in the array contains a Unix timestamp ('dt'), the AQI (nested under 'main'), and a 'components' object with detailed pollutant concentrations. There is no pagination; the full forecast appears to be returned in one response."
    },
    "connected tools": [
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Data on the routes in json format",
    "tool description": "Returns a file containing a list of routes from the database, allowing you to access specific flight path information. This endpoint is part of the Travelpayouts Data API, which provides comprehensive travel insights for websites and blogs by delivering flight price trends and popular destination data that can help you better serve your customers with relevant travel options.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/routes.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Data on the routes in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of flight routes, where each route is an object containing details about a specific flight path. The information includes the airline and airport IATA codes, whether the flight is a codeshare, the number of transfers, and a list of aircraft models used on that route. This data is useful for populating travel websites or applications with specific flight details.",
      "output_format": "The output is a JSON-formatted string that represents a list of JSON objects. Each object corresponds to a single flight route. Some fields, such as `airline_icao`, `departure_airport_icao`, and `arrival_airport_icao`, can be null. The `planes` field is a list of strings."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightSearch",
        "connect params": [
          {
            "name": "flnr",
            "description": "Could use flight number if included in routes data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineSearch",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use airline IATA code from routes data"
          },
          {
            "name": "icao",
            "description": "Can use airline ICAO code from routes data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "name": "flnr",
            "description": "Could use flight number if included in routes data"
          },
          {
            "name": "aptFrom",
            "description": "Can use departure airport ident from routes data"
          },
          {
            "name": "aptTo",
            "description": "Can use arrival airport ident from routes data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use airport IATA code from routes data"
          },
          {
            "name": "icao",
            "description": "Can use airport ICAO code from routes data"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Could use city information derived from airport codes in routes data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MusicData API",
    "parent tool description": "Data for Youtube, Spotify music videos, tracks, albums, artist & more",
    "tool name": "MusicData API: /youtube/topartist_feat/{year}",
    "tool description": "Retrieves a list of top artists on YouTube for a specified year, including those who appeared as featured artists in music videos. This endpoint leverages a comprehensive database of YouTube and Spotify content, providing access to detailed information about music videos, tracks, albums, and artist collaborations across the platform. The data covers both primary artists and featured appearances, allowing users to track popularity trends and collaborative patterns in the music industry through YouTube's vast music video ecosystem.",
    "required_parameters": [
      {
        "name": "year",
        "type": "string",
        "description": "",
        "default": "2022"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://musicdata-api.p.rapidapi.com/youtube/topartist_feat/2022\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"musicdata-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/youtube/topartist_feat/{year}",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a ranked list of the most-viewed artists on YouTube for a given year. For each artist, it provides their rank, name, and total view count. The view count aggregates views from all videos where the artist is credited, including both primary and featured roles, making it useful for tracking overall artist popularity and collaborative impact.",
      "output_format": "The output is a JSON array of objects, where each object represents an artist. The objects contain three key-value pairs: 'ranking', 'artist', and 'views'. All values are formatted as strings, including the numerical rank and view count. The 'views' string includes commas as thousands separators."
    },
    "connected tools": [
      {
        "tool name": "K-POP: Idols",
        "connect params": [
          {
            "name": "q",
            "description": "Query to search\n(Required)"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Full name of songs or artists"
          }
        ]
      },
      {
        "tool name": "Shazam: auto-complete",
        "connect params": [
          {
            "name": "term",
            "description": "Any word or phrase of song, artist, etc... that you are familiar with"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search query"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query",
            "description": ""
          }
        ]
      },
      {
        "tool name": "MusiclinkssApi: Search by query",
        "connect params": [
          {
            "name": "q",
            "description": ""
          },
          {
            "name": "type",
            "description": ""
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minmax\"\nquerystring = {\"series_type\": \"close\", \"outputsize\": 30, \"interval\": \"1min\", \"format\": \"json\", \"symbol\": \"AAPL\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MINMAX",
    "tool description": "Retrieves the lowest and highest values of a financial asset over a specified period. This endpoint is part of Twelve Data's financial API, which provides developers with instant access to real-time and historical data for stocks, forex, crypto, ETFs, indices, and more. By leveraging this tool, users can analyze price fluctuations and trends, enabling data-driven decisions in market analysis and investment strategies.",
    "API name": "MINMAX",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a time series of minimum and maximum values for a specified financial asset (such as a stock, forex pair, or cryptocurrency) over a defined period. The output includes metadata about the asset (e.g., symbol, interval, exchange) and an array of timestamped data points. Each data point provides the lowest and highest values up to that time, enabling users to analyze price volatility and market trends.",
      "output_format": "The output is a single JSON object containing two main keys: `meta` (a JSON object) and `values` (a JSON array). The `values` array contains multiple objects, each with a `datetime` string and corresponding `min` and `max` values, which are also strings. The data points in the `values` array are sorted in reverse chronological order (most recent first). The structure of the `meta` object may vary slightly depending on the asset type."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MINMAX output's meta data can be used to query the same asset"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mapilion - Vector and Raster Map Tiles",
    "parent tool description": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
    "tool name": "Mapilion - Vector and Raster Map Tiles: Get Vector Tile",
    "tool description": "Returns vector tiles that follow the OpenMapTiles schema, providing standardized geographic data in vector format. This endpoint is part of Mapilion's comprehensive mapping service that delivers both vector and raster map tiles at scale, built on OpenStreetMap data and the OpenMapTiles specification. The vector tiles enable efficient rendering of map features with reduced bandwidth requirements compared to traditional raster tiles, making them ideal for interactive web and mobile mapping applications.",
    "required_parameters": [
      {
        "name": "x",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      },
      {
        "name": "y",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      },
      {
        "name": "z",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/{z}/{x}/{y}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get Vector Tile",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns geographic data packaged as a binary vector tile. This tile contains map features like water bodies, administrative boundaries, and buildings, organized into distinct layers with associated properties. The output is intended for programmatic use by map rendering engines to efficiently display interactive maps, rather than for direct human interpretation.",
      "output_format": "The successful output is a single binary file in the Protocol Buffers (PBF) format, specifically following the Mapbox Vector Tile (.mvt) specification. This is not a human-readable format like JSON. In case of an error (e.g., a 404), the tool returns a plain text string describing the error. The response is not paginated; it is a single, self-contained data file."
    },
    "connected tools": [
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "geojson",
            "description": "The vector tile can be converted to GeoJSON and used as input for map visualization"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Hillshading",
        "connect params": [
          {
            "name": "x",
            "description": "The vector tile coordinates can be used to request matching hillshading overlay"
          },
          {
            "name": "y",
            "description": "The vector tile coordinates can be used to request matching hillshading overlay"
          },
          {
            "name": "z",
            "description": "The vector tile coordinates can be used to request matching hillshading overlay"
          }
        ]
      },
      {
        "tool name": "Mapilion - Vector and Raster Map Tiles: Get Hillshading Tile",
        "connect params": [
          {
            "name": "x",
            "description": "The vector tile coordinates can be used to request matching hillshading overlay"
          },
          {
            "name": "y",
            "description": "The vector tile coordinates can be used to request matching hillshading overlay"
          },
          {
            "name": "z",
            "description": "The vector tile coordinates can be used to request matching hillshading overlay"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dice Roll Simulator",
    "parent tool description": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.",
    "tool name": "Dice Roll Simulator: Custom dice",
    "tool description": "Rolls any number of dice with any number of sides, allowing you to specify both the quantity of dice and how many faces each die has. This ultimate dice rolling API gives you complete flexibility to simulate multiple dice throws of various sizes, making it perfect for tabletop gaming, random number generation, probability demonstrations, or any scenario requiring customizable dice rolls.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "dice",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      },
      {
        "name": "sides",
        "type": "NUMBER",
        "description": "",
        "default": "8"
      }
    ],
    "code": "import requests\n\nurl = \"https://dice-roll-simulator.p.rapidapi.com/custom-dice\"\nquerystring = {\"dice\": dice, \"sides\": sides}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dice-roll-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Custom dice",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides the results of a simulated dice roll. It includes a list of integers representing the outcome of each individual die thrown. It also provides the sum total of all the dice rolls, which is useful for applications like tabletop gaming.",
      "output_format": "The output is a single JSON object with a flat structure. It contains a 'result' key, which holds an array of integers, and a 'total' key, which holds a single integer. The fields are not expected to be nullable."
    },
    "connected tools": [
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "Can use the length of the result array to determine how many dice were rolled"
          },
          {
            "name": "sides",
            "description": "Can infer the number of sides from the maximum value in the result array"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapFanAPI - Route",
    "parent tool description": "MapFan API \u306e\u30eb\u30fc\u30c8\u691c\u7d22\uff08\u7d4c\u8def\u63a2\u7d22\uff09API\u3067\u3059\u3002\u30ab\u30fc\u30ca\u30d3\u3067\u5b9f\u7e3e\u306e\u3042\u308b\u672c\u683c\u7684\u306a\u30eb\u30fc\u30c8\u691c\u7d22\u3001\u5927\u578b\u8eca\u898f\u5236\u3084\u6b69\u884c\u8005\u5411\u3051\u306a\u3069\u7279\u6b8a\u306a\u72b6\u6cc1\u3092\u8003\u616e\u3057\u305f\u30eb\u30fc\u30c8\u691c\u7d22\u306b\u52a0\u3048\u3001\u6307\u5b9a\u4f4d\u7f6e\u4ed8\u8fd1\u306e\u9053\u8def\u306e\u9053\u8def\u540d\u30fb\u4ea4\u5dee\u70b9\u540d\u30fb\u4fe1\u53f7\u6709\u7121\u7b49\u306e\u9053\u8def\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002",
    "tool name": "MapFanAPI - Route: altcalcroute",
    "tool description": "Provides multiple recommended route search functionality, returning up to three route options for a single set of search conditions, with 'Recommendation 1' being the standard calcroute result and 'Recommendation 2' and 'Recommendation 3' as alternatives (when available). This leverages MapFan API's sophisticated route search technology, which has proven reliability in car navigation systems, offering professional-grade route planning capabilities. The API can handle specialized routing scenarios including large vehicle restrictions and pedestrian-specific routes, while also providing detailed road information such as road names, intersection names, and traffic signal locations near specified positions. Note that response times may vary depending on route distance and search parameters.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "fmt",
        "type": "ENUM",
        "description": "### \u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n|\u30d5\u30a9\u30fc\u30de\u30c3\u30c8|\u5024|\n|---|---|\n|JSON|json |\n|XML|xml|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`json`\n\n#### \u6ce8\u8a18\n`callback`\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\u304c\u7834\u68c4\u3055\u308c\u3001JSONP\u5f62\u5f0f\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "passablearea",
        "type": "STRING",
        "description": "### \u901a\u884c\u53ef\u80fd\u30a8\u30ea\u30a2\n\u30eb\u30fc\u30c8\u691c\u7d22\u5bfe\u8c61\u3068\u306a\u308b\u30a8\u30ea\u30a2\u3092\u77e9\u5f62\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3055\u308c\u305f\u30a8\u30ea\u30a2\u5185\u306e\u307f\u3092\u901a\u884c\u3059\u308b\u30eb\u30fc\u30c8\u304c\u691c\u7d22\u3055\u308c\u307e\u3059\u3002\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n\n##### \u901a\u884c\u53ef\u80fd\u30a8\u30ea\u30a2\n`[\u30a8\u30ea\u30a2#1]|[\u30a8\u30ea\u30a2#2]|...|[\u30a8\u30ea\u30a2#n]`\n\n##### \u30a8\u30ea\u30a2\n`[\u5357\u897f\u7d4c\u5ea6\u306e\u5024],[\u5357\u897f\u7def\u5ea6\u306e\u5024],[\u5317\u6771\u7d4c\u5ea6\u306e\u5024],[\u5317\u6771\u7def\u5ea6\u306e\u5024]`\n\n#### \u7bc4\u56f2\n|n\uff08\u30a8\u30ea\u30a2\u306e\u500b\u6570\uff09|\u5024|\n|---|---|\n|\u6700\u5927|10|\n\n#### \u8a18\u8ff0\u4f8b\n`139.6965,35.6867,139.7029,35.6921|139.7000,35.6818,139.7044,35.6879`\n\n#### \u6ce8\u8a18\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u6e2c\u5730\u7cfb\u306f\u3001\u4e16\u754c\u6e2c\u5730\u7cfb\uff08JGD2011\uff09\u3068\u306a\u308a\u307e\u3059\u3002\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u5c0f\u6570\u70b9\u306f\u7b2c8\u4f4d\u307e\u3067\u8003\u616e\u3055\u308c\u3001\u305d\u308c\u3088\u308a\u5927\u304d\u3044\u5024\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n- \u6307\u5b9a\u3057\u305f\u77e9\u5f62\u3068\u6574\u5408\u6027\u306e\u7121\u3044`start`\u3001`destination`\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\uff08`I00104`\uff09\u306b\u306a\u308a\u307e\u3059\u3002\n- `passablearea`\u3068`impassablearea`\u3067\u91cd\u306a\u3063\u305f\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u3001`impassablearea`\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u3002\n- `travel=1`\u3068\u3057\u305f\u5834\u5408\u3001\u672c\u8a2d\u5b9a\u306f\u6307\u5b9a\u306f\u51fa\u6765\u307e\u305b\u3093\u3002\n- \u9577\u8ddd\u96e2\u30eb\u30fc\u30c8\u691c\u7d22\u6642\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u8fd4\u5374\u304c\u9045\u304f\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "callback",
        "type": "STRING",
        "description": "### JSONP\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u7528\u95a2\u6570\u540d\n\u95a2\u6570\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306fJSONP\u5f62\u5f0f\u3067\u7d50\u679c\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001`fmt`\u3067\u6307\u5b9a\u3055\u308c\u305f\u5f62\u5f0f\u3067\u7d50\u679c\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "saveresult",
        "type": "ENUM",
        "description": "### \u30eb\u30fc\u30c8\u691c\u7d22\u7d50\u679c\u306e\u4fdd\u5b58\u6709\u7121\n\u30eb\u30fc\u30c8\u691c\u7d22\u7d50\u679c\u3092\u4fdd\u5b58\u3059\u308b\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306b'routeResultId'\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\n|\u30eb\u30fc\u30c8\u691c\u7d22\u7d50\u679c\u306e\u4fdd\u5b58|\u5024|\n|---|---|\n|\u4fdd\u5b58\u3057\u306a\u3044|0|\n|\u4fdd\u5b58\u3059\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`\n\n#### \u6ce8\u8a18\n`routeResultId`\u306e\u6709\u52b9\u671f\u9650\u306f1\u30f6\u6708\u3068\u306a\u308a\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "daytime",
        "type": "ENUM",
        "description": "### \u65e5\u6642\u898f\u5236\n|\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u65e5\u6642\u898f\u5236\u3092\u7121\u52b9\u306b\u3059\u308b|0|\n|\u65e5\u6642\u898f\u5236\u306e\u6709\u52b9/\u7121\u52b9\u3092\u3001<br>generalroad\u3001tollroad\u3001regulations\u306e\u8a2d\u5b9a\u306b\u5f93\u3046|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`\n\n#### \u6ce8\u8a18\n`generalroad`\u3001`tollroad`\u3001`regulations`\u3068\u306e\u95a2\u4fc2\u6027\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u30eb\u30fc\u30c8\u691c\u7d22 \uff1e \u88dc\u8db3\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "generalroad",
        "type": "ENUM",
        "description": "### \u4e00\u822c\u9053\u898f\u5236\n\u7121\u52b9\u3068\u3057\u305f\u5834\u5408\u3001\u4e00\u822c\u9053\u306e\u898f\u5236\u3092\u7121\u8996\u3057\u305f\u30eb\u30fc\u30c8\u691c\u7d22\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\n\n|\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u4e00\u822c\u9053\u898f\u5236\u3092\u7121\u52b9\u306b\u3059\u308b|0|\n|\u4e00\u822c\u9053\u898f\u5236\u3092\u6709\u52b9\u306b\u3059\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`\n\n#### \u6ce8\u8a18\n`daytime`\u3001`regulations`\u3068\u306e\u95a2\u4fc2\u6027\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u30eb\u30fc\u30c8\u691c\u7d22 \uff1e \u88dc\u8db3\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "uturnavoid",
        "type": "ENUM",
        "description": "### \u7d4c\u7531\u5730\u3067\u306eU\u30bf\u30fc\u30f3\u56de\u907f\n|\u7d4c\u7531\u5730\u3067\u306eU\u30bf\u30fc\u30f3\u56de\u907f|\u5024|\n|---|---|\n|\u3057\u306a\u3044|0|\n|\u3059\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`priority`\u3067\u6307\u5b9a\u3057\u305f\u5024\u306b\u3088\u308a\u7570\u306a\u308a\u307e\u3059\u3002\n- `priority=3\u3001100\uff5e103`\u306e\u5834\u5408\n`0`\n- `priority`\u304c\u4e0a\u8a18\u4ee5\u5916\u306e\u5834\u5408\n`1`\n\n#### \u6ce8\u8a18\n- `travel=1`\u3068\u3057\u305f\u5834\u5408\u3001\u672c\u8a2d\u5b9a\u306f\u6307\u5b9a\u306f\u51fa\u6765\u307e\u305b\u3093\u3002\n- \u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f`uturn`\uff08U\u30bf\u30fc\u30f3\u306e\u3057\u6613\u3055\uff09\u3068\u306f\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "tollroad",
        "type": "ENUM",
        "description": "### \u9ad8\u901f\u9053\u898f\u5236\n\u7121\u52b9\u3068\u3057\u305f\u5834\u5408\u3001\u9ad8\u901f\u9053\u306e\u898f\u5236\u3092\u7121\u8996\u3057\u305f\u30eb\u30fc\u30c8\u691c\u7d22\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002\n\n|\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u9ad8\u901f\u9053\u898f\u5236\u3092\u7121\u52b9\u306b\u3059\u308b|0|\n|\u9ad8\u901f\u9053\u898f\u5236\u3092\u6709\u52b9\u306b\u3059\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`\n\n#### \u6ce8\u8a18\n- `daytime`\u3001`regulations`\u3068\u306e\u95a2\u4fc2\u6027\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u30eb\u30fc\u30c8\u691c\u7d22 \uff1e \u88dc\u8db3\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n- \u9ad8\u901f\u9053\u898f\u5236\u306e\u5bfe\u8c61\u3068\u306a\u308b\u9053\u306f\u3001\u9053\u8def\u7a2e\u5225100\u756a\u53f0\u306811\u756a\u306e\u9053\u3067\u3059\u3002\u9053\u8def\u7a2e\u5225\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u4ed8\u5247 \uff1e \u30eb\u30fc\u30c8\u6a5f\u80fd \uff1e \u9053\u8def\u7a2e\u5225\u4e00\u89a7\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "regulations",
        "type": "ENUM",
        "description": "### \u305d\u306e\u4ed6\u898f\u5236\n|\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u4e00\u65b9\u901a\u884c\u898f\u5236\u306e\u6709\u52b9/\u7121\u52b9\u3092\u3001<br>generalroad\u3001tollroad\u306e\u8a2d\u5b9a\u306b\u5f93\u3046|0|\n|\u4e00\u65b9\u901a\u884c\u898f\u5236\u3092\u6709\u52b9\u306b\u3059\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`\n\n#### \u6ce8\u8a18\n`daytime`\u3001`generalroad`\u3001`tollroad`\u3068\u306e\u95a2\u4fc2\u6027\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u30eb\u30fc\u30c8\u691c\u7d22 \uff1e \u88dc\u8db3\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "impassablearea",
        "type": "STRING",
        "description": "### \u901a\u884c\u4e0d\u53ef\u30a8\u30ea\u30a2\n\u30eb\u30fc\u30c8\u691c\u7d22\u5bfe\u8c61\u5916\u3068\u306a\u308b\u30a8\u30ea\u30a2\u3092\u77e9\u5f62\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3055\u308c\u305f\u30a8\u30ea\u30a2\u5185\u3092\u56de\u907f\u3059\u308b\u30eb\u30fc\u30c8\u304c\u691c\u7d22\u3055\u308c\u307e\u3059\u3002\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n\n##### \u901a\u884c\u53ef\u80fd\u30a8\u30ea\u30a2\n`[\u30a8\u30ea\u30a2#1]|[\u30a8\u30ea\u30a2#2]|...|[\u30a8\u30ea\u30a2#n]`\n\n##### \u30a8\u30ea\u30a2\n`[\u5357\u897f\u7d4c\u5ea6\u306e\u5024],[\u5357\u897f\u7def\u5ea6\u306e\u5024],[\u5317\u6771\u7d4c\u5ea6\u306e\u5024],[\u5317\u6771\u7def\u5ea6\u306e\u5024]`\n\n#### \u7bc4\u56f2\n|n\uff08\u30a8\u30ea\u30a2\u306e\u500b\u6570\uff09|\u5024|\n|---|---|\n|\u6700\u5927|10|\n\n#### \u8a18\u8ff0\u4f8b\n`139.6965,35.6867,139.7029,35.6921|139.7000,35.6818,139.7044,35.6879`\n\n#### \u6ce8\u8a18\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u6e2c\u5730\u7cfb\u306f\u3001\u4e16\u754c\u6e2c\u5730\u7cfb\uff08JGD2011\uff09\u3068\u306a\u308a\u307e\u3059\u3002\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u5c0f\u6570\u70b9\u306f\u7b2c8\u4f4d\u307e\u3067\u8003\u616e\u3055\u308c\u3001\u305d\u308c\u3088\u308a\u5927\u304d\u3044\u5024\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n- \u6307\u5b9a\u3057\u305f\u77e9\u5f62\u3068\u6574\u5408\u6027\u306e\u7121\u3044`start`\u3001`destination`\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\uff08`I00104`\uff09\u306b\u306a\u308a\u307e\u3059\u3002\n- `passablearea`\u3068`impassablearea`\u3067\u91cd\u306a\u3063\u305f\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u3001`impassablearea`\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u3002\n- `travel=1`\u3068\u3057\u305f\u5834\u5408\u3001\u672c\u8a2d\u5b9a\u306f\u6307\u5b9a\u306f\u51fa\u6765\u307e\u305b\u3093\u3002\n- \u9577\u8ddd\u96e2\u30eb\u30fc\u30c8\u691c\u7d22\u6642\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u8fd4\u5374\u304c\u9045\u304f\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "routeid",
        "type": "STRING",
        "description": "### \u30eb\u30fc\u30c8\u8b58\u5225\u5b50\n\u30eb\u30fc\u30c8\u691c\u7d22\u3092\u8b58\u5225\u3059\u308b\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u304c\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u305d\u306e\u307e\u307e\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n\u30eb\u30fc\u30c8\u691c\u7d22\u7d50\u679c\u306b\u5f71\u97ff\u306f\u3057\u307e\u305b\u3093\u3002\n\n#### \u6ce8\u8a18\n- URL\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305fUTF-8\u306e\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n- \u534a\u89d2\u306e\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f7f\u7528\u306f\u7981\u6b62\u3067\u3059\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u534a\u89d2\u8a18\u53f7\u3084\u5168\u89d2\u6587\u5b57\u306fURL\u30a8\u30f3\u30b3\u30fc\u30c9\u3092\u884c\u3063\u3066\u3044\u308c\u3070\u4f7f\u7528\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "uturn",
        "type": "ENUM",
        "description": "### U\u30bf\u30fc\u30f3\u306e\u3057\u6613\u3055\n|U\u30bf\u30fc\u30f3\u306e\u3057\u6613\u3055|\u5024|\n|---|---|\n|U\u30bf\u30fc\u30f3\u3092\u6bd4\u8f03\u7684\u884c\u3046|0|\n|U\u30bf\u30fc\u30f3\u3092\u6bd4\u8f03\u7684\u884c\u308f\u306a\u3044|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`\n\n#### \u6ce8\u8a18\n\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f`uturnavoid `\uff08\u7d4c\u7531\u5730\u3067\u306eU\u30bf\u30fc\u30f3\u56de\u907f\uff09\u3068\u306f\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "danger",
        "type": "ENUM",
        "description": "### \u5371\u967a\u7269\u7a4d\u8f09\u8eca\u4e21\n\u9053\u8def\u898f\u5236\u3067\u8003\u616e\u3059\u308b\u5371\u967a\u7269\u7a4d\u8f09\u8eca\u4e21\u3067\u3042\u308b\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n|\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u5371\u967a\u7269\u7a4d\u8f09\u8eca\u4e21\u3067\u306a\u3044|0|\n|\u5371\u967a\u7269\u7a4d\u8f09\u8eca\u4e21\u3067\u3042\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`",
        "default": ""
      },
      {
        "name": "width",
        "type": "NUMBER",
        "description": "### \u8eca\u5e45\n\u9053\u8def\u898f\u5236\u3067\u8003\u616e\u3059\u308b\u8eca\u5e45\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|0|\n\n#### \u6ce8\u8a18\n\u5358\u4f4d\u306f\u3001cm \u3067\u3059\u3002",
        "default": ""
      },
      {
        "name": "weight",
        "type": "NUMBER",
        "description": "### \u8eca\u91cd\n\u9053\u8def\u898f\u5236\u3067\u8003\u616e\u3059\u308b\u8eca\u91cd\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|0|\n\n#### \u6ce8\u8a18\n\u5358\u4f4d\u306f\u3001kg \u3067\u3059\u3002",
        "default": ""
      },
      {
        "name": "highwayspeed",
        "type": "NUMBER",
        "description": "### \u9ad8\u901f\u9053\u306e\u8d70\u884c\u901f\u5ea6\n\u9ad8\u901f\u9053\u306e\u8d70\u884c\u6642\u9593\u306e\u8a08\u7b97\u306b\u7528\u3044\u307e\u3059\u3002\n\n### \u8a18\u8ff0\u4f8b\n`90.0`\n\n#### \u6ce8\u8a18\n- \u5358\u4f4d\u306f\u3001km/h \u3067\u3059\u3002\n- \u7d4c\u8def\u7a2e\u5225\u3068\u306e\u95a2\u4fc2\u304a\u3088\u3073\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u4ed8\u5247 \uff1e \u30eb\u30fc\u30c8\u6a5f\u80fd \uff1e \u7d4c\u8def\u7a2e\u5225\u4e00\u89a7\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "height",
        "type": "NUMBER",
        "description": "### \u8eca\u9ad8\n\u9053\u8def\u898f\u5236\u3067\u8003\u616e\u3059\u308b\u8eca\u9ad8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|0|\n\n#### \u6ce8\u8a18\n\u5358\u4f4d\u306f\u3001cm \u3067\u3059\u3002",
        "default": ""
      },
      {
        "name": "loadage",
        "type": "NUMBER",
        "description": "### \u7a4d\u8f09\u91cf\n\u9053\u8def\u898f\u5236\u3067\u8003\u616e\u3059\u308b\u8eca\u4e21\u306e\u6700\u5927\u7a4d\u8f09\u91cf\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|0|\n\n#### \u6ce8\u8a18\n\u5358\u4f4d\u306f\u3001kg \u3067\u3059\u3002",
        "default": ""
      },
      {
        "name": "normalspeed",
        "type": "NUMBER",
        "description": "### \u4e00\u822c\u9053\u306e\u8d70\u884c\u901f\u5ea6\n\u4e00\u822c\u9053\u306e\u8d70\u884c\u6642\u9593\u306e\u8a08\u7b97\u306b\u7528\u3044\u307e\u3059\u3002\n\n### \u8a18\u8ff0\u4f8b\n`25.0`\n\n#### \u6ce8\u8a18\n- \u5358\u4f4d\u306f\u3001km/h \u3067\u3059\u3002\n- \u7d4c\u8def\u7a2e\u5225\u3068\u306e\u95a2\u4fc2\u304a\u3088\u3073\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u4ed8\u5247 \uff1e \u30eb\u30fc\u30c8\u6a5f\u80fd \uff1e \u7d4c\u8def\u7a2e\u5225\u4e00\u89a7\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "tollwayspeed",
        "type": "NUMBER",
        "description": "### \u6709\u6599\u9053\u306e\u8d70\u884c\u901f\u5ea6\n\u6709\u6599\u9053\u306e\u8d70\u884c\u6642\u9593\u306e\u8a08\u7b97\u306b\u7528\u3044\u307e\u3059\u3002\n\n### \u8a18\u8ff0\u4f8b\n`55.0`\n\n#### \u6ce8\u8a18\n- \u5358\u4f4d\u306f\u3001km/h \u3067\u3059\u3002\n- \u7d4c\u8def\u7a2e\u5225\u3068\u306e\u95a2\u4fc2\u304a\u3088\u3073\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u4ed8\u5247 \uff1e \u30eb\u30fc\u30c8\u6a5f\u80fd \uff1e \u7d4c\u8def\u7a2e\u5225\u4e00\u89a7\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "ferryspeed",
        "type": "NUMBER",
        "description": "### \u30d5\u30a7\u30ea\u30fc\u306e\u822a\u884c\u901f\u5ea6\n\u30d5\u30a7\u30ea\u30fc\u306e\u822a\u884c\u6642\u9593\u306e\u8a08\u7b97\u306b\u7528\u3044\u307e\u3059\u3002\n\n### \u8a18\u8ff0\u4f8b\n`27.0`\n\n#### \u6ce8\u8a18\n- \u5358\u4f4d\u306f\u3001km/h \u3067\u3059\u3002\n- \u7d4c\u8def\u7a2e\u5225\u3068\u306e\u95a2\u4fc2\u304a\u3088\u3073\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u4ed8\u5247 \uff1e \u30eb\u30fc\u30c8\u6a5f\u80fd \uff1e \u7d4c\u8def\u7a2e\u5225\u4e00\u89a7\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "vehicletype",
        "type": "ENUM",
        "description": "### \u8eca\u7a2e\n\u9053\u8def\u898f\u5236\u3092\u8003\u616e\u3059\u308b\u8eca\u7a2e\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n|\u8eca\u7a2e|\u5024|\n|---|---|\n|\u6307\u5b9a\u306a\u3057|0|\n|\u5927\u578b\u4e57\u7528\u81ea\u52d5\u8eca|1|\n|\u5927\u578b\u8ca8\u7269\u81ea\u52d5\u8eca|6|\n|\u5927\u578b\u7279\u6b8a\u81ea\u52d5\u8eca|11|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`",
        "default": ""
      },
      {
        "name": "tolltarget",
        "type": "ENUM",
        "description": "### \u6599\u91d1\u8a08\u7b97\u5bfe\u8c61\n|\u6599\u91d1\u8a08\u7b97\u5bfe\u8c61|\u5024|\n|---|---|\n|\u901a\u5e38\u6599\u91d1|0|\n|\u901a\u5e38\u6599\u91d1\uff0bETC\u5272\u5f15\u6599\u91d1|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`",
        "default": ""
      },
      {
        "name": "smartic",
        "type": "ENUM",
        "description": "## \u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u975e\u63a8\u5968\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\u3002 `etc` \u3092\u3054\u4f7f\u7528\u304f\u3060\u3055\u3044\u3002\n\n### \u30b9\u30de\u30fc\u30c8IC\u5229\u7528\u6709\u7121\n|\u30b9\u30de\u30fc\u30c8IC\u5229\u7528|\u5024|\n|---|---|\n|\u5229\u7528\u3057\u306a\u3044|0|\n|\u5229\u7528\u3059\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`",
        "default": ""
      },
      {
        "name": "cartype",
        "type": "ENUM",
        "description": "### \u6709\u6599\u9053\u8def\u5229\u7528\u6642\u306e\u8eca\u7a2e\n\u6709\u6599\u9053\u8def\u306e\u6599\u91d1\u8a08\u7b97\u306e\u307f\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n|\u8eca\u7a2e|\u5024|\n|---|---|\n|\u8efd\u81ea\u52d5\u8eca|0|\n|\u666e\u901a\u8eca|1|\n|\u4e2d\u578b\u8eca|2|\n|\u5927\u578b\u8eca|3|\n|\u7279\u5927\u8eca|4|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`",
        "default": ""
      },
      {
        "name": "date",
        "type": "STRING",
        "description": "### \u51fa\u767a\u65e5\u6642\n\u30eb\u30fc\u30c8\u691c\u7d22\u6642\u306e\u4ea4\u901a\u898f\u5236\u3092\u8003\u616e\u3059\u308b\u3068\u304d\u306e\u65e5\u6642\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n`[\u5e744\u6841][\u67082\u6841][\u65e52\u6841]_[\u66422\u6841][\u52062\u6841][\u79d22\u6841]` \uff08`yyyyMMdd_HHmmss`\uff09\n\n#### \u8a18\u8ff0\u4f8b\n`20220420_170505` \uff082022\u5e744\u670820\u65e5\u5348\u5f8c5\u66425\u52065\u79d2 \uff09\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\nAPI\u5b9f\u884c\u65e5\u6642\u3092\u9069\u7528\u3057\u3066\u3001\u30eb\u30fc\u30c8\u691c\u7d22\u3092\u884c\u3044\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "tollway",
        "type": "ENUM",
        "description": "### \u6709\u6599\u9053\u8def\u4f7f\u7528\u6761\u4ef6\n|\u6709\u6599\u9053\u8def\u4f7f\u7528|\u5024|\n|---|---|\n|\u6a19\u6e96|0|\n|\u512a\u5148|1|\n|\u56de\u907f|2|\n|\u7d76\u5bfe\u56de\u907f|3|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`\n\n#### \u6ce8\u8a18\n- \u6709\u6599\u9053\u8def\u3092\u4f7f\u308f\u306a\u3044\u3068\u30eb\u30fc\u30c8\u304c\u5f15\u3051\u306a\u3044\u6761\u4ef6\u3067\u3001\n    - `tollway=2` \u3068\u3057\u305f\u5834\u5408\u3001\u6709\u6599\u9053\u8def\u3092\u4f7f\u3063\u305f\u30eb\u30fc\u30c8\u304c\u7d50\u679c\u3068\u3057\u3066\u8fd4\u308a\u307e\u3059\u3002\n    - `tollway=3` \u3068\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\uff08`I00108`\uff09\u3068\u306a\u308a\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "etc",
        "type": "ENUM",
        "description": "### ETC\u5c02\u7528\u65bd\u8a2d\u5229\u7528\u6709\u7121\n|ETC\u5c02\u7528\u65bd\u8a2d\u5229\u7528|\u5024|\n|---|---|\n|\u5229\u7528\u3057\u306a\u3044|0|\n|\u5229\u7528\u3059\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`\n\n#### \u6ce8\u8a18\n- `smartic` \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4ee3\u308f\u308a\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3054\u5229\u7528\u4e0b\u3055\u3044\u3002\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u30b9\u30de\u30fc\u30c8IC\u306b\u3082\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n- \u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u672a\u6307\u5b9a\u3001\u304b\u3064\u3001 `smartic` \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u9650\u308a\u3001\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f `smartic` \u3068\u540c\u3058\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "ferry",
        "type": "ENUM",
        "description": "### \u30d5\u30a7\u30ea\u30fc\u4f7f\u7528\u6761\u4ef6\n|\u30d5\u30a7\u30ea\u30fc\u4f7f\u7528|\u5024|\n|---|---|\n|\u6a19\u6e96|0|\n|\u512a\u5148|1|\n|\u56de\u907f|2|\n|\u7d76\u5bfe\u56de\u907f|3|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`\n\n#### \u6ce8\u8a18\n- \u30d5\u30a7\u30ea\u30fc\u3092\u4f7f\u308f\u306a\u3044\u3068\u30eb\u30fc\u30c8\u304c\u5f15\u3051\u306a\u3044\u6761\u4ef6\u3067\u3001\n    - `ferry=2` \u3068\u3057\u305f\u5834\u5408\u3001\u30d5\u30a7\u30ea\u30fc\u3092\u4f7f\u3063\u305f\u30eb\u30fc\u30c8\u304c\u7d50\u679c\u3068\u3057\u3066\u8fd4\u308a\u307e\u3059\u3002\n    - `ferry=3` \u3068\u3057\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\uff08`I00107`\uff09\u3068\u306a\u308a\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "destination",
        "type": "STRING",
        "description": "### \u76ee\u7684\u5730\u7def\u5ea6\u7d4c\u5ea6\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n`[\u7d4c\u5ea6\u306e\u5024],[\u7def\u5ea6\u306e\u5024],[\u5730\u70b9\u7a2e\u5225],[\u6a2a\u4ed8\u3051\u512a\u5148]`\n\u203b`[\u5730\u70b9\u7a2e\u5225]`\u3001`[\u6a2a\u4ed8\u3051\u512a\u5148]`\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u3002\n\n|\u5730\u70b9\u7a2e\u5225|\u5024|\n|---|---|\n|\u4e00\u822c\u9053\u30fb\u6709\u6599\u9053|0|\n|\u4e00\u822c\u9053\u306e\u307f|1|\n|\u6709\u6599\u9053\u306e\u307f|2|\n\n|\u6a2a\u4ed8\u3051\u512a\u5148|\u5024|\n|---|---|\n|\u6a2a\u4ed8\u3051\u512a\u5148\u306a\u3057|0|\n|\u6a2a\u4ed8\u3051\u512a\u5148\u3042\u308a|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n##### \u5730\u70b9\u7a2e\u5225\n`0`\n\n##### \u6a2a\u4ed8\u3051\u512a\u5148\n`0`\n\n#### \u8a18\u8ff0\u4f8b\n\n##### \u7def\u5ea6\u7d4c\u5ea6\u306e\u307f\u6307\u5b9a\n`139.62261961,35.46606942`\n\n##### \u5730\u70b9\u7a2e\u5225\u3082\u5408\u308f\u305b\u3066\u6307\u5b9a\n`139.62261961,35.46606942,1`\n\n##### \u6a2a\u4ed8\u3051\u512a\u5148\u3082\u5408\u308f\u305b\u3066\u6307\u5b9a\n`139.62261961,35.46606942,1,1`\n\n##### \u5730\u70b9\u7a2e\u5225\u6307\u5b9a\uff1a\u306a\u3057\u3001\u6a2a\u4ed8\u3051\u512a\u5148\u6307\u5b9a\uff1a\u3042\u308a\n`139.62261961,35.46606942,,1`\n\n#### \u6ce8\u8a18\n- `routeresultid`\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u3001\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u3002\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u6e2c\u5730\u7cfb\u306f\u3001\u4e16\u754c\u6e2c\u5730\u7cfb\uff08JGD2011\uff09\u3068\u306a\u308a\u307e\u3059\u3002\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u5c0f\u6570\u70b9\u306f\u7b2c8\u4f4d\u307e\u3067\u8003\u616e\u3055\u308c\u3001\u305d\u308c\u3088\u308a\u5927\u304d\u3044\u5024\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n- \u6307\u5b9a\u5730\u70b9\u304b\u3089\u7d045km\u306e\u7bc4\u56f2\u306b\u9053\u8def\u304c\u3042\u308b\u5834\u5408\u306b\u30eb\u30fc\u30c8\u691c\u7d22\u304c\u53ef\u80fd\u3067\u3059\u3002\u9053\u8def\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u30a8\u30e9\u30fc\uff08`I00104`\uff09\u3068\u306a\u308a\u307e\u3059\u3002\n\u6b69\u884c\u8005\uff08`priority=100\uff5e103`\uff09\u306e\u5834\u5408\u3082\u540c\u69d8\u3067\u3059\u3002",
        "default": "139.62261961,35.46606942"
      },
      {
        "name": "via",
        "type": "STRING",
        "description": "### \u7d4c\u7531\u5730\u7def\u5ea6\u7d4c\u5ea6\n#### \u8a18\u8ff0\u5f62\u5f0f\n##### \u7d4c\u7531\u5730\u7def\u5ea6\u7d4c\u5ea6\n`[\u7d4c\u7531\u5730#1]|[\u7d4c\u7531\u5730#2|...|[\u7d4c\u7531\u5730#n]`\n\n##### \u7d4c\u7531\u5730\n`[\u7d4c\u5ea6\u306e\u5024],[\u7def\u5ea6\u306e\u5024],[\u5730\u70b9\u7a2e\u5225],[\u6ede\u5728\u6642\u9593],[\u6a2a\u4ed8\u3051\u512a\u5148]`\n\u203b`[\u5730\u70b9\u7a2e\u5225]`\u3001`[\u6ede\u5728\u6642\u9593]`\u3001`[\u6a2a\u4ed8\u3051\u512a\u5148]`\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u3002\n\n|\u5730\u70b9\u7a2e\u5225|\u5024|\n|---|---|\n|\u4e00\u822c\u9053\u30fb\u6709\u6599\u9053|0|\n|\u4e00\u822c\u9053\u306e\u307f|1|\n|\u6709\u6599\u9053\u306e\u307f|2|\n\n|\u6a2a\u4ed8\u3051\u512a\u5148|\u5024|\n|---|---|\n|\u6a2a\u4ed8\u3051\u512a\u5148\u306a\u3057|0|\n|\u6a2a\u4ed8\u3051\u512a\u5148\u3042\u308a|1|\n\n#### \u7bc4\u56f2\n|n\uff08\u7d4c\u7531\u5730\u306e\u6570\uff09|\u5024|\n|---|---|\n|\u6700\u5927|30|\n\n|\u6ede\u5728\u6642\u9593\uff08\u5206\uff09|\u5024|\n|---|---|\n|\u6700\u5c0f|0|\n|\u6700\u5927|10080|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n\n##### \u5730\u70b9\u7a2e\u5225\n`0`\n\n##### \u6ede\u5728\u6642\u9593\uff08\u5206\uff09\n`0`\n\n##### \u6a2a\u4ed8\u3051\u512a\u5148\n`0`\n\n#### \u8a18\u8ff0\u4f8b\n\n##### \u7d4c\u7531\u5730\u30923\u5730\u70b9\u6307\u5b9a\n`139.75723347,35.66593095|139.73893125,35.62911118|139.69695771,35.53136405`\n\n##### \u7def\u5ea6\u7d4c\u5ea6\u306e\u307f\u6307\u5b9a\n`139.75723347,35.66593095`\n\n##### \u5730\u70b9\u7a2e\u5225\u3082\u5408\u308f\u305b\u3066\u6307\u5b9a\n`139.75723347,35.66593095,1`\n\n##### \u6ede\u5728\u6642\u9593\u3082\u5408\u308f\u305b\u3066\u6307\u5b9a\n`139.75723347,35.66593095,1,60`\n\n##### \u6a2a\u4ed8\u3051\u512a\u5148\u3082\u5408\u308f\u305b\u3066\u6307\u5b9a\n`139.75723347,35.66593095,1,60,1`\n\n##### \u5730\u70b9\u7a2e\u5225\u6307\u5b9a\uff1a\u306a\u3057\u3001\u6ede\u5728\u6642\u9593\u6307\u5b9a\uff1a\u3042\u308a\n`139.75723347,35.66593095,,60`\n\n##### \u5730\u70b9\u7a2e\u5225\u6307\u5b9a\uff1a\u306a\u3057\u3001\u6ede\u5728\u6642\u9593\u6307\u5b9a\uff1a\u306a\u3057\u3001\u6a2a\u4ed8\u3051\u512a\u5148\u6307\u5b9a\uff1a\u3042\u308a\n`139.75723347,35.66593095,,,1`\n\n#### \u6ce8\u8a18\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u6e2c\u5730\u7cfb\u306f\u3001\u4e16\u754c\u6e2c\u5730\u7cfb\uff08JGD2011\uff09\u3068\u306a\u308a\u307e\u3059\u3002\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u5c0f\u6570\u70b9\u306f\u7b2c8\u4f4d\u307e\u3067\u8003\u616e\u3055\u308c\u3001\u305d\u308c\u3088\u308a\u5927\u304d\u3044\u5024\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n- \u6307\u5b9a\u5730\u70b9\u304b\u3089\u7d045km\u306e\u7bc4\u56f2\u306b\u9053\u8def\u304c\u3042\u308b\u5834\u5408\u306b\u30eb\u30fc\u30c8\u691c\u7d22\u304c\u53ef\u80fd\u3067\u3059\u3002\u9053\u8def\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u30a8\u30e9\u30fc\uff08`I00104`\uff09\u3068\u306a\u308a\u307e\u3059\u3002\n\u6b69\u884c\u8005\uff08`priority=100\uff5e103`\uff09\u306e\u5834\u5408\u3082\u540c\u69d8\u3067\u3059\u3002",
        "default": ""
      },
      {
        "name": "startangle",
        "type": "NUMBER",
        "description": "### \u51fa\u767a\u65b9\u5411\n\u51fa\u767a\u5730\u306e\u6700\u8fd1\u508d\u30ea\u30f3\u30af\u304c\u53cc\u65b9\u5411\u306b\u9032\u884c\u53ef\u80fd\u306a\u5834\u5408\u306b\u3001\u9032\u884c\u65b9\u5411\u3092\u6307\u5b9a\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u6700\u8fd1\u508d\u30ea\u30f3\u30af\u306e\u9032\u884c\u53ef\u80fd\u306a\u65b9\u5411\u306b\u5bfe\u3057\u3001\u6307\u5b9a\u89d2\u5ea6\u306b\u8fd1\u4f3c\u3057\u3066\u3044\u308b\u65b9\u5411\u306b\u9032\u884c\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u304c\u306a\u3044\u5834\u5408\u3001\u6700\u8fd1\u508d\u30ea\u30f3\u30af\u306e\u9032\u884c\u53ef\u80fd\u306a\u65b9\u5411\u306e\u3044\u305a\u308c\u304b\u304c\u3001\u30eb\u30fc\u30c8\u306e\u72b6\u6cc1\u306b\u5fdc\u3058\u3066\u63a1\u7528\u3055\u308c\u307e\u3059\u3002\u771f\u5317\u30920\u5ea6\u3068\u3057\u3001\u6642\u8a08\u56de\u308a\u306b\u5897\u52a0\u3057\u307e\u3059\u3002\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|0\uff08\u5317\u4e0a\uff09|\n|\u6700\u5927|359|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`\n\n#### \u6ce8\u8a18\n- \u6574\u6570\u306e\u307f\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n- \u6642\u8a08\u56de\u308a\u306b\u5897\u52a0\u3057\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "priority",
        "type": "ENUM",
        "description": "### \u57fa\u672c\u6761\u4ef6\n|\u57fa\u672c\u6761\u4ef6|\u5024|\n|---|---|\n|\u6a19\u6e96|0|\n|\u8ddd\u96e2\u512a\u5148|1|\n|\u76f4\u9032\u512a\u5148|2|\n|\u7c21\u6613\u6b69\u884c\u8005|3|\n|\u9053\u5e45\u512a\u5148|4|\n\n#### \u6ce8\u8a18\n- `altcalcroute`\u3067\u306f\u3001`priority=100\uff5e103`\u306f\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002\n- \u5404\u6761\u4ef6\u306e\u8a73\u7d30\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u30b5\u30fc\u30d0\u30fcAPI\u6280\u8853\u4ed5\u69d8\u66f8 \uff1e \u30eb\u30fc\u30c8\u691c\u7d22 \uff1e \u88dc\u8db3 \uff1e \u30eb\u30fc\u30c8\u57fa\u672c\u6761\u4ef6 (priority)\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "start",
        "type": "STRING",
        "description": "### \u51fa\u767a\u5730\u7def\u5ea6\u7d4c\u5ea6\n#### \u8a18\u8ff0\u5f62\u5f0f\n\n`[\u7d4c\u5ea6\u306e\u5024],[\u7def\u5ea6\u306e\u5024],[\u5730\u70b9\u7a2e\u5225]`\n\u203b`[\u5730\u70b9\u7a2e\u5225]`\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u3002\n\n|\u5730\u70b9\u7a2e\u5225|\u5024|\n|---|---|\n|\u4e00\u822c\u9053\u30fb\u6709\u6599\u9053|0|\n|\u4e00\u822c\u9053\u306e\u307f|1|\n|\u6709\u6599\u9053\u306e\u307f|2|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n\n##### \u5730\u70b9\u7a2e\u5225\n`0`\n\n#### \u8a18\u8ff0\u4f8b\n##### \u7def\u5ea6\u7d4c\u5ea6\u306e\u307f\u6307\u5b9a\n`139.76730676,35.68095910`\n\n##### \u5730\u70b9\u7a2e\u5225\u3082\u5408\u308f\u305b\u3066\u6307\u5b9a\n`139.76730676,35.68095910,1`\n\n#### \u6ce8\u8a18\n- `routeresultid`\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u3001\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u3002\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u6e2c\u5730\u7cfb\u306f\u3001\u4e16\u754c\u6e2c\u5730\u7cfb\uff08JGD2011\uff09\u3068\u306a\u308a\u307e\u3059\u3002\n- \u7def\u5ea6\u7d4c\u5ea6\u306e\u5c0f\u6570\u70b9\u306f\u7b2c8\u4f4d\u307e\u3067\u8003\u616e\u3055\u308c\u3001\u305d\u308c\u3088\u308a\u5927\u304d\u3044\u5024\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n- \u6307\u5b9a\u5730\u70b9\u304b\u3089\u7d045km\u306e\u7bc4\u56f2\u306b\u9053\u8def\u304c\u3042\u308b\u5834\u5408\u306b\u30eb\u30fc\u30c8\u691c\u7d22\u304c\u53ef\u80fd\u3067\u3059\u3002\u9053\u8def\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u30a8\u30e9\u30fc\uff08`I00104`\uff09\u3068\u306a\u308a\u307e\u3059\u3002\n\u6b69\u884c\u8005\uff08`priority=100\uff5e103`\uff09\u306e\u5834\u5408\u3082\u540c\u69d8\u3067\u3059\u3002",
        "default": "139.76730676,35.68095910"
      }
    ],
    "code": "import requests\n\nurl = \"https://mapfanapi-route.p.rapidapi.com/altcalcroute\"\nquerystring = {\"destination\": destination, \"start\": start}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapfanapi-route.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "altcalcroute",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a JSON object containing an array of recommended routes, with up to three options. Each route option includes a summary of the total distance, travel time, and toll fees. Additionally, it provides a detailed, turn-by-turn navigation guide with specific instructions, coordinates, road names, and intersection names for each step of the journey. This output is intended for applications requiring comprehensive route planning and navigation capabilities.",
      "output_format": "The top-level structure is a JSON object containing a 'result' key. The value of 'result' is a JSON array where each element represents a distinct route option. Each route option is an object with two main keys: 'summary' (an object with overall route metrics) and 'guide' (an array of objects, each representing a step in the navigation). Some nested objects like 'guideRoad' or 'guideCrossing' appear to be optional and are only present when relevant information, such as a road name, is available for a given step."
    },
    "connected tools": [
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "routeresultid",
            "description": "Can use the route result ID from altcalcroute to display the calculated route on a map"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use coordinates from route guide points"
          },
          {
            "name": "latitude",
            "description": "Can use coordinates from route guide points"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use coordinates from route guide points to get road information"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use coordinates from route guide points"
          },
          {
            "name": "longitude",
            "description": "Can use coordinates from route guide points"
          }
        ]
      },
      {
        "tool name": "TrueWay Directions: FindDrivingPath",
        "connect params": [
          {
            "name": "origin",
            "description": "Can use start coordinates from the route"
          },
          {
            "name": "destination",
            "description": "Can use end coordinates from the route"
          },
          {
            "name": "waypoints",
            "description": "Can use intermediate coordinates from the route guide points"
          }
        ]
      },
      {
        "tool name": "TrueWay Directions: FindDrivingRoute",
        "connect params": [
          {
            "name": "stops",
            "description": "Can use coordinates from route guide points as stops"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "sd_time_period",
        "type": "NUMBER",
        "description": "",
        "default": 0
      },
      {
        "name": "sd",
        "type": "NUMBER",
        "description": "",
        "default": 0
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/vwap\"\nquerystring = {\"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"sd_time_period\": 0, \"sd\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: VWAP",
    "tool description": "Calculates the Volume Weighted Average Price (VWAP) to provide a benchmark for trading activity, using real-time and historical data of stocks, forex, crypto, ETFs, and indices. This endpoint leverages the parent tool's financial data infrastructure, which offers developers instant access to market information, enabling informed decision-making through accurate price analytics derived from comprehensive market datasets.",
    "API name": "VWAP",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides Volume Weighted Average Price (VWAP) data for a specified financial instrument, such as a stock or forex pair. The output contains metadata about the instrument (e.g., symbol, interval, currency) and a time-series list of VWAP values. Each data point in the series corresponds to a specific datetime, allowing users to analyze price trends relative to trading volume over a period.",
      "output_format": "The output is a single JSON object containing two top-level keys: 'meta' and 'values'. The 'meta' key maps to an object with metadata. The 'values' key maps to a JSON array of objects, where each object represents a single data point and contains a 'datetime' string and a 'vwap' string (which represents a numeric value). The format of the 'datetime' string varies based on the 'interval' (e.g., daily vs. intraday)."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The VWAP output contains symbol information that can be used to query the same instrument"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from VWAP metadata can be used to query the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from VWAP metadata can be used to query the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from VWAP metadata can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from VWAP metadata can be used to query the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from VWAP metadata can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from VWAP metadata can be used to query the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from VWAP metadata can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from VWAP metadata can be used to query the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from VWAP metadata can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from VWAP metadata can be used to query the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from VWAP metadata can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from VWAP metadata can be used to query the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from VWAP metadata can be used to maintain consistent timeframes"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/avgprice\"\nquerystring = {\"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: AVGPRICE",
    "tool description": "Calculates the average price using the formula (open + high + low + close) / 4. This endpoint is part of a financial data platform offering real-time and historical data for stocks, forex, crypto, ETFs, and indices, empowering developers to access comprehensive market insights for analysis and application development.",
    "API name": "AVGPRICE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides historical time-series data for the average price of a financial instrument, such as a stock, forex pair, or cryptocurrency. The output consists of metadata about the requested symbol and interval, and a list of data points. Each data point includes a specific datetime and the corresponding average price, calculated as (open + high + low + close) / 4, for that period.",
      "output_format": "The output is a single JSON object containing two main keys: `meta` and `values`. `meta` is an object holding metadata about the query, like the symbol, interval, and currency. `values` is a JSON array of objects, sorted in reverse chronological order. Each object in the array represents a single time period and contains a `datetime` (string) and an `avgprice` (a string-encoded number)."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: ADD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for ADD calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DIV",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for DIV calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MULT",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for MULT calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUB",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for SUB calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CORREL",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for correlation analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BETA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for beta calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for SMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for EMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: WMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for WMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for RSI calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for MACD calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for Bollinger Bands calculations"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Geocoding by API-Ninjas",
    "parent tool description": "Convert city locations to latitude/longitude coordinates and vice versa. See more info at https://api-ninjas.com/api/geocoding and https://api-ninjas.com/api/reversegeocoding.",
    "tool name": "Geocoding by API-Ninjas: /v1/geocoding",
    "tool description": "Converts city locations to latitude/longitude coordinates and vice versa using the API Ninjas Geocoding API endpoint. This service enables seamless translation between human-readable place names and precise geographic coordinates, allowing for location-based functionality in applications. The API supports both forward geocoding (converting addresses to coordinates) and reverse geocoding (converting coordinates to addresses), providing a comprehensive solution for location data needs. For more detailed information, visit https://api-ninjas.com/api/geocoding and https://api-ninjas.com/api/reversegeocoding.",
    "required_parameters": [
      {
        "name": "city",
        "type": "STRING",
        "description": "City name.",
        "default": "Seattle"
      }
    ],
    "optional_parameters": [
      {
        "name": "country",
        "type": "STRING",
        "description": "Country name, 2-letter ISO country code, or 3-letter ISO country code.",
        "default": ""
      },
      {
        "name": "state",
        "type": "STRING",
        "description": "US state (for United States cities only).",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://geocoding-by-api-ninjas.p.rapidapi.com/v1/geocoding\"\nquerystring = {\"city\": city}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geocoding-by-api-ninjas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "/v1/geocoding",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographic locations that match a given query. Each location in the list is detailed with its name, specific latitude and longitude coordinates, a two-letter country code, and the corresponding state or region. This information is primarily used to convert place names into coordinates for mapping applications or other location-aware services, providing multiple potential matches for ambiguous queries.",
      "output_format": "The output is a JSON array of objects. Each object represents a single location and contains the following keys: `name` (string), `latitude` (float), `longitude` (float), `country` (string, a 2-letter code), and `state` (string). The examples do not show any nesting or pagination."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "param": "latitude",
            "reason": "Can use latitude from source tool's output"
          },
          {
            "param": "longitude",
            "reason": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "param": "latitude",
            "reason": "Can use latitude from source tool's output"
          },
          {
            "param": "longitude",
            "reason": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "param": "latitude",
            "reason": "Can use latitude from source tool's output"
          },
          {
            "param": "longitude",
            "reason": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "param": "latitude",
            "reason": "Can use latitude from source tool's output"
          },
          {
            "param": "longitude",
            "reason": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "param": "lonlat",
            "reason": "Can use longitude,latitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "param": "lonlat",
            "reason": "Can use longitude,latitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "param": "lonlat",
            "reason": "Can use longitude,latitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "param": "lonlat",
            "reason": "Can use longitude,latitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "param": "lat",
            "reason": "Can use latitude from source tool's output"
          },
          {
            "param": "lon",
            "reason": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "param": "latitude",
            "reason": "Can use latitude from source tool's output"
          },
          {
            "param": "longitude",
            "reason": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Address From To Latitude Longitude: Coordinates  (latitude longitude) to Address",
        "connect params": [
          {
            "param": "lat",
            "reason": "Can use latitude from source tool's output"
          },
          {
            "param": "lng",
            "reason": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "param": "lat",
            "reason": "Can use latitude from source tool's output"
          },
          {
            "param": "lng",
            "reason": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "TrueWay Geocoding: ReverseGeocode",
        "connect params": [
          {
            "param": "location",
            "reason": "Can use latitude,longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mom\"\nquerystring = {\"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MOM",
    "tool description": "Calculates price momentum by comparing the current price with the price from N time periods ago, providing insights into trend strength. This endpoint leverages the Financial Data API's real-time and historical market data for stocks, forex, crypto, ETFs, and indices, enabling developers to analyze price movements and make informed trading decisions with precise, actionable metrics.",
    "API name": "MOM",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time-series data for the price momentum of a financial instrument, such as a stock, forex pair, or cryptocurrency. The output consists of a list of data points, each containing a timestamp and the corresponding momentum value. This is accompanied by metadata about the instrument, the time interval, and the parameters used for the momentum indicator, which is useful for analyzing trend strength.",
      "output_format": "The output is a JSON object with two top-level keys: 'meta' and 'values'. The 'meta' key contains a nested object with metadata about the query, and its structure can vary slightly depending on the asset type. The 'values' key contains a JSON array of data point objects. Each data point object includes a 'datetime' string and a 'mom' value, which is a string-encoded floating-point number. The provided examples appear to be truncated, indicating that a full response may contain a longer list of values."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MOM output metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BestBuy Product Data",
    "parent tool description": "BestBuy Product Data API\nContact me at: muktheeswaran.m@gmail.com for builing custom spiders or custom requests.",
    "tool name": "BestBuy Product Data: BestBuyProductData",
    "tool description": "Searches for products on BestBuy using a keyword and page number parameter, allowing you to find specific items like 'iphone', 'ps5', or 'sony tv'. This BestBuy Product Data API retrieves organized product information from BestBuy's catalog, with pagination support where page numbers start at 1 (maximum page depends on available product quantity). The API provides structured access to BestBuy's extensive inventory, enabling efficient product discovery and comparison for applications, research, or shopping assistance.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "iphone"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://bestbuy-product-data.p.rapidapi.com/bestbuy/\"\nquerystring = {\"keyword\": keyword, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bestbuy-product-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "BestBuyProductData",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a list of product data from BestBuy based on a search keyword. Each product entry contains detailed information such as title, price, rating, model number, and URLs for the product and its image. In cases where no products are found, the tool returns an error object with an explanatory message.",
      "output_format": "The primary output is a JSON array where each object represents a single product. In an error state, the output is a JSON object with a single key, \"Error\", containing a descriptive string. Several fields within the product objects, such as 'color', 'offer_percent', and 'regular_price', can be null or contain placeholder text like 'Not Given'. The tool supports pagination as described in its documentation."
    },
    "connected tools": [
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param_name": "asin",
            "description": "Could use model number from BestBuy product data to search for the same product on Amazon"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Could use product title from BestBuy data to search for similar products on Zappos"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Indonesia School List",
    "parent tool description": "This API provides School List in Indonesia by Province (Propinsi), City (Kabupaten), and District (Kecamatan).",
    "tool name": "Indonesia School List: Number of Schools in Indonesian City / District (Kabupaten / Kota)",
    "tool description": "Returns the number of schools in a specified Indonesian city or district (Kabupaten/Kota) along with the corresponding kode_wilayah identifier that can be used in other endpoints. This API is part of a comprehensive service that provides access to school listings throughout Indonesia, organized hierarchically by Province (Propinsi), City (Kabupaten), and District (Kecamatan), allowing users to navigate and retrieve educational institution data across the country's administrative divisions.",
    "required_parameters": [
      {
        "name": "kode_wilayah_propinsi_id",
        "type": "STRING",
        "description": "",
        "default": "050000"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://indonesia-school-list.p.rapidapi.com/sekolah_kabupaten_by_kode_propinsi\"\nquerystring = {\"kode_wilayah_propinsi_id\": kode_wilayah_propinsi_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"indonesia-school-list.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Number of Schools in Indonesian City / District (Kabupaten / Kota)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "This tool provides a list of Indonesian cities/districts (Kabupaten/Kota) and a detailed statistical breakdown of the number of educational institutions within each. For every location, it returns the total school count and specific counts for different school levels (e.g., 'sd', 'smp', 'sma') and types, further categorized into public ('_n' suffix) and private ('_s' suffix). The output also includes a `kode_wilayah` identifier for each city/district, which can be used as an input for other related tools.",
      "output_format": "The successful output is a JSON array of objects, where each object contains data for a single city or district. In case of an API failure, the tool returns a single JSON object with 'messages' and 'info' keys describing the error. The `kode_wilayah` field is a string that appears to have trailing spaces, which may be significant. Keys for school counts are abbreviations (e.g., 'sd' for Sekolah Dasar/Primary School)."
    },
    "connected tools": [
      {
        "tool name": "Indonesia School List: List of School in Sub-Disctrict (Kecamatan)",
        "connect params": [
          {
            "name": "kode_wilayah_kecamatan_id",
            "description": "The source tool provides kode_wilayah identifiers that can be used to retrieve schools in specific sub-districts"
          }
        ]
      },
      {
        "tool name": "Indonesia School List: Number of Schools in Indonesia Sub-District (Kecamatan)",
        "connect params": [
          {
            "name": "kode_wilayah_kabupaten_id",
            "description": "The source tool provides kode_wilayah identifiers that can be used to retrieve school counts in specific districts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Study list (Macquarie)",
    "tool description": "Provides access to individual Advanced Search URL parameters for testing purposes, allowing parameters to be combined as needed for customized queries. This endpoint is part of the free Kanji alive API, which offers comprehensive CC-BY licensed language data on Japanese kanji, radicals, and their associated media files through a web application interface.",
    "required_parameters": [
      {
        "name": "list",
        "type": "STRING",
        "description": "Kanji divided into chapters (12-22)",
        "default": "mac:c12"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced\"\nquerystring = {\"list\": list}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Study list (Macquarie)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters from a specific study list (Macquarie). For each kanji in the list, the output provides the character itself, its total stroke count, its associated radical character, the radical's stroke count, and the radical's order number. This information is intended for users studying the Japanese language, particularly for learning to recognize and write kanji.",
      "output_format": "The output is a JSON array of objects. Each object represents a single kanji and contains two nested JSON objects: 'kanji' and 'radical'. The 'kanji' object contains the character and its stroke count. The 'radical' object contains the radical's character, stroke count, and order. All fields in the examples are non-null."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "Positive integer",
            "connection_info": "The kanji stroke count from the source tool's output can be used as input for this parameter to find other kanji with the same stroke count."
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "Positive integer",
            "connection_info": "The radical stroke count from the source tool's output can be used as input for this parameter to find other kanji with radicals of the same stroke count."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Halsey Lyric Snippets",
    "parent tool description": "An API that allows users to view short excerpts of Halsey's songs.",
    "tool name": "Halsey Lyric Snippets: random song out of {artist}",
    "tool description": "Retrieves a random song by the specified artist, delivering a short excerpt in the response. This API provides access to Halsey's song catalog, allowing users to explore random selections from her musical works without needing to search for specific titles.",
    "required_parameters": [
      {
        "name": "artist",
        "type": "string",
        "description": "",
        "default": "Halsey"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://halsey-lyric-snippets.p.rapidapi.com/{artist}/song/random\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"halsey-lyric-snippets.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "random song out of {artist}",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns information about a single, randomly selected song by Halsey. The output is a JSON object containing the song's title, a unique identifier, and an array of various lyric excerpts from that song. This allows users to discover and sample random songs from the artist's discography.",
      "output_format": "The output is a single JSON object. It contains three keys: '_id' (string), 'name' (string), and 'lyrics' (an array of strings). The 'lyrics' array holds multiple short snippets from the song, which may contain newline characters (\\n) for line breaks within a snippet."
    },
    "connected tools": [
      {
        "tool name": "Halsey Lyric Snippets: specified {song}",
        "connect params": [
          {
            "param_name": "song",
            "source_field": "name"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "param_name": "q",
            "source_field": "name"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "param_name": "query",
            "source_field": "name"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "start",
        "type": "NUMBER",
        "description": "Start date (unix time, UTC time zone), e.g. start=1606488670",
        "default": "1606223802"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "50"
      },
      {
        "name": "end",
        "type": "NUMBER",
        "description": "End date (unix time, UTC time zone), e.g. end=1606747870",
        "default": "1606482999"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "50"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/air_pollution/history\"\nquerystring = {\"start\": start, \"lat\": lat, \"end\": end, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Historical air pollution data",
    "tool description": "Retrieves historical air pollution data for a specific location and timeframe. This uses a proprietary convolutional neural network to process diverse data sources, including global and local weather models, satellites, radars, and a vast network of weather stations, ensuring accurate and contextually relevant pollution insights. The endpoint leverages RapidWeather's comprehensive weather data infrastructure to deliver detailed historical pollution metrics, enabling users to analyze environmental trends with high spatial and temporal precision.",
    "API name": "Historical air pollution data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a time-series of historical air pollution data for a specific geographical location, identified by latitude and longitude. For each timestamped entry, it returns a qualitative Air Quality Index (AQI) and quantitative measurements for various pollutant components like CO, NO, NO2, O3, SO2, PM2.5, PM10, and NH3. This allows users to analyze historical pollution levels and trends over a specified period.",
      "output_format": "The output is a single JSON object with two main keys: 'coord' and 'list'. The 'coord' key contains an object with the location's longitude and latitude. The 'list' key contains an array of JSON objects, where each object represents a single data point in time. Each data point object includes the 'aqi' (Air Quality Index), a nested 'components' object detailing the concentration of each pollutant, and a 'dt' field representing the Unix timestamp for the measurement."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "coord.lat"
          },
          {
            "name": "longitude",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "coord.lat"
          },
          {
            "name": "longitude",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 14
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/adx\"\nquerystring = {\"symbol\": \"AAPL\", \"format\": \"json\", \"outputsize\": 30, \"interval\": \"1min\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: ADX",
    "tool description": "The Average Directional Index (ADX) analyzes price trends to determine their strength, providing insights into whether a trend is gaining or losing momentum. This endpoint is part of a financial data API that delivers real-time and historical data for stocks, forex, crypto, ETFs, indices, and more, enabling developers to make informed trading decisions through comprehensive market analysis.",
    "API name": "ADX",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time-series data for the Average Directional Index (ADX), a technical indicator for a specified financial symbol. The output contains the ADX value for various datetimes, which helps analysts and traders assess the strength of a market trend, regardless of its direction. The response also includes metadata about the symbol, the request interval, and the specific ADX parameters used in the calculation.",
      "output_format": "The output is a single JSON object containing two top-level keys: 'meta' and 'values'. The 'meta' object holds descriptive information about the query, such as the symbol and interval. The 'values' key contains a JSON array of data points, sorted in reverse chronological order (most recent first). Each data point in the array is an object with a 'datetime' string and an 'adx' value, which is also provided as a string."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The ADX output contains symbol information that can be used to analyze the same asset with other indicators"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used to fetch time series data for the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used to analyze the same asset with MACD for trend confirmation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used to check overbought/oversold conditions alongside trend strength"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used to analyze momentum alongside trend strength"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used to analyze volatility alongside trend strength"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used to identify trend direction alongside trend strength"
          }
        ]
      },
      {
        "tool name": "Twelve Data: PLUS_DI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used to analyze positive directional movement, complementing ADX data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MINUS_DI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used to analyze negative directional movement, complementing ADX data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: AROON",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from ADX output can be used for additional trend identification analysis"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Ski Resort Forecast",
    "parent tool description": "Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.",
    "required_parameters": [
      {
        "name": "resort",
        "type": "string",
        "description": "",
        "default": "Jackson Hole"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
        "default": "i"
      },
      {
        "name": "el",
        "type": "STRING",
        "description": "Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time.",
        "default": "top"
      }
    ],
    "code": "import requests\n\nurl = \"https://ski-resort-forecast.p.rapidapi.com/{resort}/forecast\"\nquerystring = {\"units\": units, \"el\": el}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Ski Resort Forecast: 5 Day Forecast",
    "tool description": "Returns a 5-day snow forecast for a specified resort, utilizing a service that provides forecast and current snow conditions for nearly every ski resort. The tool is designed to handle approximate resort names, ensuring accurate data even with minor spelling variations.",
    "API name": "5 Day Forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed 5-day weather forecast for a specific ski resort. The forecast is broken down by day, with each day further segmented into three periods: AM, PM, and Night. For each period, the output includes a weather summary, wind speed and direction, expected snow and rain accumulation, temperatures, wind chill, humidity, and freeze level. If an invalid resort name is provided, the tool returns a simple error string.",
      "output_format": "The successful output is a JSON object containing a single key, `forecast5Day`. The value is an array of 5 objects, each representing a day's forecast. Each daily object contains nested objects for 'am', 'pm', and 'night', which hold the specific weather metrics. In the case of an error (e.g., an invalid resort name), the output is a plain string message."
    },
    "connected tools": [
      {
        "tool name": "Ski Resort Forecast: Hourly Forecast",
        "connect params": [
          {
            "name": "resort",
            "description": "The resort name can be extracted from the 5-day forecast output"
          }
        ]
      },
      {
        "tool name": "Ski Resort Forecast: Current Snow Conditions",
        "connect params": [
          {
            "name": "resort",
            "description": "The resort name can be extracted from the 5-day forecast output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "The coordinates of the ski resort can be extracted from the 5-day forecast data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude can be extracted from the ski resort location data"
          },
          {
            "name": "lon",
            "description": "Longitude can be extracted from the ski resort location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude can be extracted from the ski resort location data"
          },
          {
            "name": "lon",
            "description": "Longitude can be extracted from the ski resort location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "fast Email verifier",
    "parent tool description": "APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.",
    "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
    "tool description": "Determines if a domain is disposable and provides a suggested alternative domain. This API leverages APISOLUTION's comprehensive email validation and verification system, designed to help developers quickly assess email domain quality and reliability for start-ups and staff projects, ensuring more legitimate user registrations and communications.",
    "required_parameters": [
      {
        "name": "domain",
        "type": "STRING",
        "description": "",
        "default": "domain.org"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://fast-email-verifier.p.rapidapi.com/disposableDomain\"\nquerystring = {\"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"fast-email-verifier.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "disposable Domain and Suggest Domain",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "The tool's output indicates whether a given email domain is considered disposable and provides a suggested alternative if a misspelling is detected. A successful response contains the verdict on disposability and the suggestion as natural language strings. The tool can also return error messages, such as a service suspension notice in HTML format or a 'Not Found' message in plain text, indicating different failure states.",
      "output_format": "The output format is highly inconsistent and can be one of three types: a string containing a non-standard JSON object (using single quotes), a full HTML document for service-level errors, or a plain text string for other errors. The successful, JSON-like response is a flat object with string values that must be parsed from the parent string."
    },
    "connected tools": [
      {
        "tool name": "fast Email verifier: FreeDomain",
        "connect params": [
          {
            "name": "domain",
            "description": "Can use the suggested domain from the source tool"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: Role Account",
        "connect params": [
          {
            "name": "domain",
            "description": "Can use the suggested domain from the source tool"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: email Check SMTP",
        "connect params": [
          {
            "name": "domain",
            "description": "Can use the suggested domain from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Radical English meaning",
    "tool description": "Provides access to individual Advanced Search URL parameters for testing purposes, allowing parameters to be combined as needed for customized queries. This endpoint is part of the free Kanji alive API, which offers comprehensive CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files through a web application interface.",
    "required_parameters": [
      {
        "name": "rem",
        "type": "STRING",
        "description": "Radical's meaning in English",
        "default": "see"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"rem\": rem}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Radical English meaning",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters that are associated with a specific radical. For each kanji found, the output provides the character and its total stroke count. It also includes detailed information about the kanji's primary radical, such as the radical's character, its stroke count, and an order identifier.",
      "output_format": "The output is a JSON array of objects. Each object contains two nested JSON objects: 'kanji' and 'radical'. The 'kanji' object details the specific character and its stroke count, while the 'radical' object provides information about the associated radical. Some radical characters are represented using private use area Unicode characters (e.g., '\\ue720')."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "The source tool provides stroke count information for kanji characters, which can be used to search for kanji with specific stroke counts"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "The source tool provides radical stroke count information, which can be used to search for kanji with radicals of specific stroke counts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "City List",
    "parent tool description": "List of all countries and cities",
    "required_parameters": [
      {
        "name": "iso",
        "type": "string",
        "description": "",
        "default": "iq"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://city-list.p.rapidapi.com/api/getCity/{iso}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"city-list.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "City List: getCity",
    "tool description": "Returns a list of cities from a comprehensive database of countries and cities, leveraging the parent tool's extensive dataset to provide accurate and up-to-date geographic information.",
    "API name": "getCity",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographic locations, such as cities and administrative districts, based on a name query. For each location, it provides detailed information including a unique ID, primary and alternative names, country and state/province codes, population, geographic coordinates (latitude and longitude), and timezone. This output is useful for disambiguating locations with the same name and retrieving specific geographic data.",
      "output_format": "The output is a JSON-encoded string representing a single object. This root object contains a key named '0' (as a string), which holds an array of location objects. A notable characteristic is the 'alternames' field within each location object, which is a stringified JSON array rather than a native one. Fields such as 'parent_id', 'left', 'right', and 'depth' can be null, and 'population' can be zero."
    },
    "connected tools": [
      {
        "tool name": "Address From To Latitude Longitude: Address to Coordinates  (latitude longitude)",
        "connect params": [
          {
            "name": "address",
            "description": "Can use city names from the getCity output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude values from getCity output"
          },
          {
            "name": "latitude",
            "description": "Can use latitude values from getCity output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude values from getCity output"
          },
          {
            "name": "latitude",
            "description": "Can use latitude values from getCity output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude values from getCity output"
          },
          {
            "name": "latitude",
            "description": "Can use latitude values from getCity output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude values from getCity output"
          },
          {
            "name": "latitude",
            "description": "Can use latitude values from getCity output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use longitude,latitude values from getCity output"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lon",
            "description": "Can use longitude values from getCity output"
          },
          {
            "name": "lat",
            "description": "Can use latitude values from getCity output"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use longitude values from getCity output"
          },
          {
            "name": "latitude",
            "description": "Can use latitude values from getCity output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use longitude,latitude values from getCity output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use longitude,latitude values from getCity output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Binance Futures Leaderboard",
    "parent tool description": "Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://binance-futures-leaderboard1.p.rapidapi.com/v1/getLeaderboardRank\"\nquerystring = {\"statisticsType\": \"\", \"isShared\": \"true\", \"tradeType\": \"\", \"periodType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-futures-leaderboard1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Binance Futures Leaderboard: get_leaderboard_rank",
    "tool description": "Retrieves a user's current rank on the Binance Futures Leaderboard by querying real-time data from the Binance Futures Exchange. This endpoint is part of the Binance Futures Leaderboard API, which provides traders with insights into their performance relative to others, leveraging live market data to ensure accuracy and timeliness in rankings.",
    "API name": "get_leaderboard_rank",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The output is a single numerical value representing a user's current rank on the Binance Futures Leaderboard. This number indicates the user's trading performance relative to other participants on the exchange. It is used to quickly assess a trader's competitive standing in real-time.",
      "output_format": "The output format is ambiguous due to the provided empty examples. It is most likely a single, raw integer value (e.g., 123) representing the rank. It is a singular, non-nested value and not part of a larger object or array."
    },
    "connected tools": [
      {
        "tool name": "Binance Futures Leaderboard: search_leaderboard",
        "connect params": [
          {
            "name": "isTrader",
            "description": "Include only copytraders"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`, `volume`",
        "default": "close"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/avg\"\nquerystring = {\"outputsize\": 30, \"time_period\": 9, \"format\": \"json\", \"series_type\": \"close\", \"interval\": \"1min\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: AVG",
    "tool description": "Calculates the 9-day average volume of a financial series. This endpoint is part of a financial data API that provides real-time and historical data on stocks, forex, crypto, ETFs, and indices, enabling developers to analyze market trends and make informed decisions.",
    "API name": "AVG",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides the 9-period simple moving average (SMA) for a specified financial instrument (stock, forex, or crypto). The output consists of metadata identifying the instrument, the interval, and the indicator used, followed by a time-series list of data points. Each data point includes a timestamp and the calculated average value, which appears to be based on the closing price rather than volume.",
      "output_format": "The output is a single JSON object containing two keys: `meta` and `values`. `meta` is an object containing metadata about the financial symbol and the query. `values` is a JSON array of objects, sorted in reverse chronological order. Each object in the array represents a single data point with a `datetime` (string) and the calculated `avg` value (string)."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query the same asset"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query company information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AVG output can be used to query financial data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Air Quality",
    "parent tool description": "Retrieve current, forecasted, and historical air quality for any point in the world.",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Latitude",
        "default": "35.779"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Longitude",
        "default": "-78.638"
      }
    ],
    "optional_parameters": [
      {
        "name": "hours",
        "type": "NUMBER",
        "description": "Limits response forecast hours (default 72). ",
        "default": "72"
      }
    ],
    "code": "import requests\n\nurl = \"https://air-quality.p.rapidapi.com/forecast/airquality\"\nquerystring = {\"lat\": lat, \"lon\": lon, \"hours\": hours}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"air-quality.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Air Quality: Air Quality Forecast",
    "tool description": "Generates a 3-day air quality forecast for any global location based on latitude and longitude. This leverages the parent tool's comprehensive capabilities, which provide current, forecasted, and historical air quality data worldwide, utilizing real-time environmental sensors and predictive analytics to ensure accurate and actionable insights for users.",
    "API name": "Air Quality Forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed 3-day hourly air quality forecast for a specific location. The output identifies the location by city and country, and includes a time-series list of data points. Each point contains the Air Quality Index (AQI), levels of various pollutants (CO, NO2, O3, PM10, PM2.5, SO2), and multiple timestamp formats (local, UTC, and Unix).",
      "output_format": "The output is a single JSON object containing location identifiers and a `data` key. The `data` key holds a JSON array of objects, where each object represents a single hourly forecast entry for the next 3 days. The provided examples are truncated strings, but they consistently show this nested object-array structure."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "active_mer",
        "type": "STRING",
        "description": "Show hotels with Priceline rates.",
        "default": ""
      },
      {
        "name": "latitude_range_end",
        "type": "STRING",
        "description": "Requires latitude to have value.",
        "default": ""
      },
      {
        "name": "active_smop",
        "type": "STRING",
        "description": "Show hotels with semi opaque rates.",
        "default": ""
      },
      {
        "name": "active_vmer",
        "type": "STRING",
        "description": "Show hotels with vacation merchant rates.",
        "default": ""
      },
      {
        "name": "state_code",
        "type": "STRING",
        "description": "Filter by the state code of the hotel.",
        "default": ""
      },
      {
        "name": "longitude_range_end",
        "type": "STRING",
        "description": "Requires longitude to have value.",
        "default": ""
      },
      {
        "name": "active_bkg",
        "type": "STRING",
        "description": "Show hotels with Booking rates.",
        "default": ""
      },
      {
        "name": "latitude",
        "type": "STRING",
        "description": "Filter by latitude of the hotel.",
        "default": ""
      },
      {
        "name": "hotelid_ppn",
        "type": "STRING",
        "description": "Filter by PPN hotel ID.",
        "default": ""
      },
      {
        "name": "longitude",
        "type": "STRING",
        "description": "Requires longitude to have value.",
        "default": ""
      },
      {
        "name": "property_type_ids",
        "type": "STRING",
        "description": "Filter by property type ids. See the Property Type Filter Guide for more detail.",
        "default": ""
      },
      {
        "name": "cityid_ppn",
        "type": "STRING",
        "description": "Filter by PPN city ID.",
        "default": ""
      },
      {
        "name": "hotel_address",
        "type": "STRING",
        "description": "Filter by address of hotel.",
        "default": ""
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      },
      {
        "name": "language",
        "type": "STRING",
        "description": "Language code: en-US, es-ES, fr-FR, pt-BR",
        "default": "fr-FR"
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      },
      {
        "name": "active_agd",
        "type": "STRING",
        "description": "Show hotels with Agoda rates.",
        "default": ""
      },
      {
        "name": "country_code",
        "type": "STRING",
        "description": "Filter by the country code of the hotel.",
        "default": ""
      },
      {
        "name": "changes_since",
        "type": "STRING",
        "description": "Date/time to filter the hotels that have been updated on or after this date. This will discover the last_changed_date of hotels in inventory (inclusive of the selected date). Date should be in a valid ISO 8601: https://en.wikipedia.org/wiki/ISO_8601 (YYYY-MM-DDThh:mm:ss{UTC_Offset}) format.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadHotels\"\nquerystring = {\"active_mer\": \"\", \"latitude_range_end\": \"\", \"active_smop\": \"\", \"active_vmer\": \"\", \"state_code\": \"\", \"longitude_range_end\": \"\", \"active_bkg\": \"\", \"latitude\": \"\", \"hotelid_ppn\": \"\", \"longitude\": \"\", \"property_type_ids\": \"\", \"cityid_ppn\": \"\", \"hotel_address\": \"\", \"resume_key\": \"\", \"language\": \"fr-FR\", \"limit\": 100, \"active_agd\": \"\", \"country_code\": \"\", \"changes_since\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Downalods hotels",
    "tool description": "Downloads a list of hotels based on user-specified criteria such as destination, dates, and preferences. This is part of Priceline.com's platform, which enables users to search for hotels, cars, and flights, leveraging a comprehensive database of travel options to provide accurate and up-to-date information for bookings. The endpoint integrates seamlessly with the broader service to streamline travel planning and reservation processes.",
    "API name": "Downalods hotels",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The provided output examples exclusively show error messages, not successful results. Each example indicates a timeout error from the Priceline service and suggests the user try the request again. The tool is intended to download a list of hotels, but the structure and content of a successful output containing hotel information are not demonstrated in the examples.",
      "output_format": "The provided examples are consistently a JSON object (serialized as a string) with a single key, \"detail\". The value of this key is a string containing the error message. The structure of a successful response, including potential nesting, arrays of hotels, or pagination, is unknown."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Mapilion - Vector and Raster Map Tiles",
    "parent tool description": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
    "required_parameters": [
      {
        "name": "x",
        "type": "NUMBER",
        "description": "",
        "default": "756"
      },
      {
        "name": "version",
        "type": "string",
        "description": "",
        "default": "v2"
      },
      {
        "name": "z",
        "type": "NUMBER",
        "description": "",
        "default": "11"
      },
      {
        "name": "y",
        "type": "NUMBER",
        "description": "",
        "default": "805"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/hillshades/{version}/{z}/{x}/{y}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Mapilion - Vector and Raster Map Tiles: Get Hillshading Tile",
    "tool description": "Generates hillshading raster tiles in PNG format, supporting versions v1 and v2. This endpoint is part of Mapilion's raster map tiles, which leverage OpenStreetMap and OpenMapTiles data to provide detailed geographic overlays, enhancing map visuals with terrain-specific shading to simulate mountainous landscapes.",
    "API name": "Get Hillshading Tile",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns binary data representing a single map tile in PNG image format. This image file contains hillshading, which is a visual representation of terrain used to simulate the appearance of mountains and valleys on a map. This output is intended to be used as a visual overlay on a base map to provide topographical context. In case of an error, such as requesting a non-existent tile, the tool returns a plain text string.",
      "output_format": "The successful output is raw binary data for a PNG image, not a structured format like JSON or XML. The examples confirm the presence of PNG file headers (IHDR). Error conditions return a simple string, such as a 404 error message."
    },
    "connected tools": [
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "marker",
            "description": "The hillshading tile can be used as a background marker or overlay on the static map"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "format",
            "description": "The hillshading PNG can be used as a base layer with the map image overlaid with appropriate transparency"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Global Terrain Raster",
        "connect params": [
          {
            "name": "z",
            "description": "The zoom level from the hillshading tile can be used to request matching terrain data"
          },
          {
            "name": "x",
            "description": "The x coordinate from the hillshading tile can be used to request the same geographic area"
          },
          {
            "name": "y",
            "description": "The y coordinate from the hillshading tile can be used to request the same geographic area"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Hillshading",
        "connect params": [
          {
            "name": "x",
            "description": "The x coordinate from the source hillshading tile can be used to request adjacent or related hillshading"
          },
          {
            "name": "y",
            "description": "The y coordinate from the source hillshading tile can be used to request adjacent or related hillshading"
          },
          {
            "name": "z",
            "description": "The zoom level from the source hillshading tile can be used to request hillshading at the same scale"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "tool name": "Priceline com Provider: Search cars locations",
    "tool description": "Searches for travel locations by name, allowing you to find specific destinations for your travel planning. This endpoint is part of Priceline.com's comprehensive travel service that lets you search for hotels, rental cars, and flights across multiple destinations. The platform provides access to Priceline's extensive database of travel options, helping you identify locations that match your search criteria as the first step in planning your trip or booking accommodations and transportation.",
    "required_parameters": [
      {
        "name": "name",
        "type": "STRING",
        "description": "Name",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/cars-rentals/locations\"\nquerystring = {\"name\": \"London\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Search cars locations",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of travel locations, such as airports and cities, that match a user's search query. Each location object in the list provides comprehensive details including its name, type, unique identifiers (like airport codes), and geographic information (latitude, longitude, timezone). The output also includes data relevant to travel planning, such as the number of car rental locations available and various flags indicating booking options, helping users select a precise location for their travel arrangements.",
      "output_format": "The output is a JSON-formatted string representing an array of location objects. Each object has a flat structure. Some fields appear to be conditional based on the location's type or country; for example, `airportName` is present for airports, and `stateCode` may be an empty string for non-US locations. Some numerical values, like `score`, are returned as strings."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use location names from the source tool output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's geographic information"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool's geographic information"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's geographic information"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool's geographic information"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "param_name": "iata",
            "description": "Can use IATA airport codes from the source tool output"
          },
          {
            "param_name": "icao",
            "description": "Can use ICAO airport codes from the source tool output if available"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/get-images",
    "tool description": "Retrieves images of a specific product, allowing you to access visual representations of items in Wayfair's catalog. This API provides comprehensive access to Wayfair.com's product information system, enabling queries for detailed data about categories, products, and other merchandise available on the platform. The service acts as a gateway to Wayfair's extensive product database, giving you the ability to obtain specific product imagery as part of your broader product information needs.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/get-images\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/get-images",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The output provides a list of images associated with a specific Wayfair product. For each image, the data includes a unique ID, a type identifier, and dimensions in pixels (width and height). The response also contains an array of any promotional statuses for the product, such as 'Clearance'.",
      "output_format": "The response is a JSON object with a nested structure. The main content is located under the `data.product` key, which contains an `images` array and a `promotionStatuses` array. Each object in the `images` array represents a single image. The `promotionStatuses` array can be empty if there are no active promotions."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/v2/detail (Deprecating)",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the source tool's output context"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Spotify _v2",
    "parent tool description": "Get Spotify Tracks & Playlist Details",
    "tool name": "Spotify _v2: Artist Details (Single)",
    "tool description": "Retrieves detailed information about a specific artist on Spotify, including their profile, genres, and popularity metrics. This endpoint is part of a comprehensive Spotify data service that provides access to track metadata, playlist contents, and artist information from the Spotify music platform, allowing users to explore music catalogs, analyze artist profiles, and gather insights about music collections without requiring direct Spotify API authentication.",
    "required_parameters": [
      {
        "name": "artist_id",
        "type": "STRING",
        "description": "",
        "default": "52wBYviD0Fnactl1q7ibdT"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://spotify117.p.rapidapi.com/get_single_artist/\"\nquerystring = {\"artist_id\": \"52wBYviD0Fnactl1q7ibdT\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify117.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Artist Details (Single)",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The output provides detailed information about a single Spotify artist. A successful response includes the artist's name, follower count, popularity score, a list of associated genres, and URLs for their Spotify profile and images. In case of an API error, the output will be a JSON object containing an error message and diagnostic information.",
      "output_format": "The output is a single JSON object. The successful response contains nested data structures: 'followers' is an object, while 'genres' and 'images' are arrays. The 'images' array contains objects, each detailing a different image size. Some fields, such as 'followers.href', can be null. An error response has a different, flatter structure."
    },
    "connected tools": [
      {
        "tool name": "Spotify _v2: Related Artists",
        "connect params": [
          {
            "name": "artist_id",
            "description": "The artist ID from the source tool's output can be used to find related artists"
          }
        ]
      },
      {
        "tool name": "Spotify Web: Get artists",
        "connect params": [
          {
            "name": "ids",
            "description": "The artist ID from the source tool can be used as part of a comma-separated list"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Artist",
        "connect params": [
          {
            "name": "channel_id",
            "description": "If the artist name is available, it can be used to search for the corresponding YouTube Music artist"
          }
        ]
      },
      {
        "tool name": "MusiclinkssApi: Search by query",
        "connect params": [
          {
            "name": "q",
            "description": "The artist name from the source tool can be used as the search query"
          },
          {
            "name": "type",
            "description": "Can be set to 'artist' to search specifically for the artist"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Radio World - 75,000+ Worldwide FM Radio stations..",
    "parent tool description": "This is one of the largest collection of FM Radios API from around the world. Listen Updated 79,000+ Radio stations. All the Stations are Updating Daily & Weekly basis, New stations are Adding As soon as possible. At least 100+ Stations Are adding and 1000+ Stations are fixing to this API Weekly (This is minium ratio).",
    "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: searchStation",
    "tool description": "Searches for radio stations by keywords (such as radio name or country name), with options to specify result limits per page (default 10), page number (default 1), and sort order (ASC or DESC, default ASC). This endpoint taps into one of the world's largest collections of FM radio stations, providing access to over 79,000 stations from around the globe. The database is rigorously maintained with daily and weekly updates, adding at least 100 new stations and fixing approximately 1,000 stations weekly to ensure comprehensive and reliable radio station information.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "Enter search keyword here.",
        "default": "hello"
      }
    ],
    "optional_parameters": [
      {
        "name": "order",
        "type": "STRING",
        "description": "Display item by Ascending or Disascending order",
        "default": "ASC"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Page Number.",
        "default": "1"
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Item limitation per page.",
        "default": "10"
      }
    ],
    "code": "import requests\n\nurl = \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/search_radio.php\"\nquerystring = {\"order\": \"ASC\", \"keyword\": \"hello\", \"page\": \"1\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "searchStation",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output is a list of radio stations that match a keyword search, providing details for each station such as its name, streaming URL, genre, and country of origin. The response also includes metadata about the search itself, including the total number of matching stations and pagination information. This is primarily used to discover and get connection details for radio stations around the world.",
      "output_format": "The output is a single JSON object. The core information is a list of station objects nested under the 'stations' key. The response is paginated, with top-level keys like 'limit', 'pages', and 'total_radios' providing context for the results. It's notable that several fields that appear numerical, such as 'total_radios', 'radio_id', and 'country_id', are formatted as strings."
    },
    "connected tools": [
      {
        "tool name": "Miza: Song concatenation",
        "connect params": [
          {
            "name": "u1",
            "description": "Could use a radio station's streaming URL from the search results"
          }
        ]
      },
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Could use a radio station's streaming URL from the search results"
          }
        ]
      },
      {
        "tool name": "SoundCloud Scraper: Get Track Metadata (1-3 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "Could use a radio station's streaming URL if it's a SoundCloud stream"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 14
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/aroon\"\nquerystring = {\"format\": \"json\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"time_period\": 14, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: AROON",
    "tool description": "The Aroon Indicator generates trend analysis by evaluating price movements, identifying if the price is trending and spotting the beginning of new trends and their strength. This leverages the financial data platform's real-time and historical data on stocks, forex, crypto, ETFs, and indices to provide developers with actionable insights into market trends.",
    "API name": "AROON",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time-series data for the Aroon technical indicator for a specified financial instrument (e.g., stock, forex, crypto). For each time interval, the output includes 'aroon_up' and 'aroon_down' values, which measure the strength of an uptrend or downtrend, respectively. This data is intended for trend analysis, helping users to identify the start of new trends and their strength.",
      "output_format": "The output is a single JSON object with two top-level keys: `meta` and `values`. The `meta` object contains descriptive information about the request, such as the symbol and interval. The `values` key contains an array of JSON objects, where each object represents a single time point and includes the `datetime`, `aroon_down`, and `aroon_up` values. The numerical Aroon values are represented as strings. The array is sorted in reverse chronological order (most recent data point first)."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AROON output can be used to analyze the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AROON output can be used to analyze the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AROON output can be used to analyze the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AROON output can be used to analyze the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AROON output can be used to analyze the same financial instrument for trend strength analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AROON output can be used to retrieve price data for the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from the AROON output meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AROON output can be used to analyze the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the AROON output can be used to analyze the same financial instrument for trend analysis"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Youtube Music API (Detailed)",
    "parent tool description": "Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.",
    "tool name": "Youtube Music API (Detailed): Get User",
    "tool description": "Retrieves a user's page from YouTube Music, including their owned videos and playlists. This endpoint accesses YouTube Music's comprehensive database of content creators and their media collections, allowing you to explore specific user profiles within the platform's vast ecosystem of lyrics, trends, albums, artists, songs, playlists, and other musical content. The data returned provides insight into a particular user's curated music collections and uploaded content.",
    "required_parameters": [
      {
        "name": "user_id",
        "type": "STRING",
        "description": "channelId of the user",
        "default": "UC44hbeRoCZVVMVg5z0FfIww"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://youtube-music-api-detailed.p.rapidapi.com/get_user\"\nquerystring = {\"user_id\": user_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get User",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool retrieves information about a specific YouTube Music user. A successful response is a JSON object containing the user's name and a list of their playlists. Each playlist in the list includes its title, description, ID, and an array of associated thumbnail images with different resolutions. In case of a server-side issue, the tool may return an HTML error page instead of the expected JSON data.",
      "output_format": "The successful output is a single JSON object. This object contains nested structures, notably a 'playlists' object which in turn contains a 'results' key holding an array of playlist objects. The presence of 'browseId' and 'params' fields suggests a potential pagination mechanism, possibly for retrieving more playlists. In case of failure, the output format changes to an HTML string."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Address From To Latitude Longitude",
    "parent tool description": "Free API to convert coordinates (latitude, longitude) to and from address \nAn Easy, Open, Worldwide, Free Geocoding API",
    "required_parameters": [
      {
        "name": "address",
        "type": "STRING",
        "description": "",
        "default": "Eiffel Tower"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://address-from-to-latitude-longitude.p.rapidapi.com/geolocationapi\"\nquerystring = {\"address\": address}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Address From To Latitude Longitude: Address to Coordinates  (latitude longitude)",
    "tool description": "Converts an address (including city, state, and street) into latitude and longitude coordinates. This endpoint is part of a free, open, and worldwide geocoding API that facilitates bidirectional address-to-coordinate and coordinate-to-address conversions. It leverages a comprehensive database to ensure accurate GPS calculations, enabling users to reliably obtain precise geographic positions for any given location.",
    "API name": "Address to Coordinates  (latitude longitude)",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of potential geographic locations matching an input address. Each result includes precise latitude and longitude coordinates, a full formatted address string, and broken-down address components like street, city, and postal code. A relevance score is also provided to indicate the confidence of each match, which is useful for disambiguating locations.",
      "output_format": "The output is a JSON object with a single key, \"Results\", which contains an array of result objects. The entire output can be an empty string if no results are found. Some fields within a result object, such as `addressnumber` and `street`, are optional and may be null or absent depending on the location type (e.g., landmarks vs. street addresses)."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "longitude",
            "type": "NUMBER"
          },
          {
            "name": "latitude",
            "type": "NUMBER"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "longitude",
            "type": "STRING"
          },
          {
            "name": "latitude",
            "type": "NUMBER"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "longitude",
            "type": "NUMBER"
          },
          {
            "name": "latitude",
            "type": "NUMBER"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "longitude",
            "type": "NUMBER"
          },
          {
            "name": "latitude",
            "type": "NUMBER"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "name": "lonlat",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lon",
            "type": "NUMBER"
          },
          {
            "name": "lat",
            "type": "NUMBER"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "longitude",
            "type": "NUMBER"
          },
          {
            "name": "latitude",
            "type": "NUMBER"
          }
        ]
      },
      {
        "tool name": "TrueWay Geocoding: ReverseGeocode",
        "connect params": [
          {
            "name": "location",
            "type": "STRING"
          }
        ]
      },
      {
        "tool name": "Address From To Latitude Longitude: Coordinates  (latitude longitude) to Address",
        "connect params": [
          {
            "name": "lng",
            "type": "NUMBER"
          },
          {
            "name": "lat",
            "type": "NUMBER"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "name": "lng",
            "type": "NUMBER"
          },
          {
            "name": "lat",
            "type": "NUMBER"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/reversegeocoding",
        "connect params": [
          {
            "name": "lat",
            "type": "NUMBER"
          },
          {
            "name": "lon",
            "type": "NUMBER"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "fast Email verifier",
    "parent tool description": "APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.",
    "tool name": "fast Email verifier: FreeDomain",
    "tool description": "Checks whether a domain is available for registration or already taken. This endpoint leverages APISOLUTION's comprehensive API infrastructure, which specializes in email validation and verification services designed for developers working on start-ups and staff projects, allowing you to quickly determine domain availability as part of your email system setup or digital presence planning.",
    "required_parameters": [
      {
        "name": "domain",
        "type": "STRING",
        "description": "",
        "default": "domain.org"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://fast-email-verifier.p.rapidapi.com/FreeDomain\"\nquerystring = {\"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"fast-email-verifier.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "FreeDomain",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "This tool checks if a given domain is associated with a free email provider, such as gmail.com or yahoo.com. The output is a status message indicating whether the domain is classified as a free domain. If the tool cannot find or classify the domain, it returns a \"Not Found\" message.",
      "output_format": "The output format is inconsistent. It can be a string that represents a JSON object with a single key, \"FreeDomain\", whose value is a human-readable status string. Alternatively, it can be a simple plain text string, like \"Not Found\", which may include a trailing newline character. The output is a single entity, not an array, and does not support pagination."
    },
    "connected tools": [
      {
        "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain identified as free can be checked if it's also disposable"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Geocoding by API-Ninjas",
    "parent tool description": "Convert city locations to latitude/longitude coordinates and vice versa. See more info at https://api-ninjas.com/api/geocoding and https://api-ninjas.com/api/reversegeocoding.",
    "tool name": "Geocoding by API-Ninjas: /v1/geocoding",
    "tool description": "Converts city locations to latitude/longitude coordinates and vice versa using the API Ninjas Geocoding API endpoint. This service enables seamless translation between human-readable place names and precise geographic coordinates, allowing for location-based functionality in applications. The API supports both forward geocoding (converting addresses to coordinates) and reverse geocoding (converting coordinates to addresses), providing a comprehensive solution for location data needs. For more detailed information, visit https://api-ninjas.com/api/geocoding and https://api-ninjas.com/api/reversegeocoding.",
    "required_parameters": [
      {
        "name": "city",
        "type": "STRING",
        "description": "City name.",
        "default": "Seattle"
      }
    ],
    "optional_parameters": [
      {
        "name": "country",
        "type": "STRING",
        "description": "Country name, 2-letter ISO country code, or 3-letter ISO country code.",
        "default": ""
      },
      {
        "name": "state",
        "type": "STRING",
        "description": "US state (for United States cities only).",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://geocoding-by-api-ninjas.p.rapidapi.com/v1/geocoding\"\nquerystring = {\"city\": city}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geocoding-by-api-ninjas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "/v1/geocoding",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographic locations that match an input query. Each location in the list is an object containing the place name, its precise latitude and longitude coordinates, and its two-letter country code. When applicable, the state or region is also included. This information is primarily used to convert human-readable place names into machine-readable coordinates for mapping or other location-based functionalities.",
      "output_format": "The output is a JSON-formatted string which represents a list (array) of location objects. Each object corresponds to a potential location match. The 'state' field within an object is optional and may not be present for all locations (e.g., locations in Japan from the examples). The list can contain multiple results for a single query, representing different possible matches."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Longitude from the source tool's output"
          },
          {
            "name": "latitude",
            "description": "Latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Longitude from the source tool's output"
          },
          {
            "name": "latitude",
            "description": "Latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Longitude from the source tool's output"
          },
          {
            "name": "latitude",
            "description": "Latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Longitude from the source tool's output"
          },
          {
            "name": "latitude",
            "description": "Latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Longitude and latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Longitude and latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Longitude and latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Longitude and latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lon",
            "description": "Longitude from the source tool's output"
          },
          {
            "name": "lat",
            "description": "Latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "longitude",
            "description": "Longitude from the source tool's output"
          },
          {
            "name": "latitude",
            "description": "Latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Address From To Latitude Longitude: Coordinates  (latitude longitude) to Address",
        "connect params": [
          {
            "name": "lng",
            "description": "Longitude from the source tool's output"
          },
          {
            "name": "lat",
            "description": "Latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "name": "lng",
            "description": "Longitude from the source tool's output"
          },
          {
            "name": "lat",
            "description": "Latitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/reversegeocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude from the source tool's output"
          },
          {
            "name": "lon",
            "description": "Longitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "TrueWay Geocoding: ReverseGeocode",
        "connect params": [
          {
            "name": "location",
            "description": "Latitude and longitude from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active",
    "tool description": "Retrieves a list of currently active weather alerts that can be filtered using various parameters, automatically setting the 'active' parameter to 1 and ignoring 'start' and 'end' parameters. When using ATOM format, results are returned in CAP-ATOM standard. This endpoint leverages the National Weather Service API (api.weather.gov) provided by NOAA (National Oceanic and Atmospheric Administration), which delivers comprehensive national weather data including current conditions and historical records to help users stay informed about immediate weather threats and hazards.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/alerts/active",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a GeoJSON FeatureCollection object containing a list of currently active weather alerts from the National Weather Service. Each feature in the collection represents a single alert, providing detailed information such as the event type (e.g., Special Weather Statement), severity, certainty, affected geographic area (as both a text description and a coordinate polygon), and the full descriptive text of the alert. This information is intended to inform users about immediate and ongoing weather hazards.",
      "output_format": "The output is a single JSON object that follows the GeoJSON 'FeatureCollection' standard. The core data is a list of alert objects located in the 'features' array. Each alert object contains a 'properties' object which holds the detailed information about the specific weather event. Fields within the 'properties' object, such as 'ends', can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check alerts for the same location"
          },
          {
            "name": "long",
            "description": "Can use coordinates from alert polygons to check alerts for the same location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check current weather in affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check current weather in affected areas"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check hourly forecasts for affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check hourly forecasts for affected areas"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check daily forecasts for affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check daily forecasts for affected areas"
          }
        ]
      }
    ]
  }
]