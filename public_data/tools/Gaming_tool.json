[
  {
    "parent tool name": "Card Draw Simulator",
    "parent tool description": "Draw cards from a regular 52 playing cards deck with a variety of options.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "suit",
        "type": "STRING",
        "description": "",
        "default": "all"
      },
      {
        "name": "value",
        "type": "STRING",
        "description": "",
        "default": "A"
      }
    ],
    "code": "import requests\n\nurl = \"https://card-draw-simulator.p.rapidapi.com/card\"\nquerystring = {\"suit\": suit, \"value\": value}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"card-draw-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Card Draw Simulator: Card",
    "tool description": "Draws a single card from a standard 52-card deck. This endpoint is part of a broader toolset designed to facilitate card drawing with various options, leveraging the structured randomness of a standard deck to provide flexible and controlled card selection.",
    "API name": "Card",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The output provides the identity of a single card drawn from a standard 52-card deck. The card is represented as a single string that concatenates its rank (e.g., 'A', '10', 'Q') and its suit (e.g., 'hearts', 'spades'). This allows for the simulation of a random card draw.",
      "output_format": "The output is a JSON object containing a single key, \"card\". The value associated with this key is a string representing the drawn card. There is no nesting, pagination, or use of arrays."
    },
    "connected tools": [
      {
        "tool name": "Card Draw Simulator: Cards",
        "connect params": [
          {
            "name": "value",
            "description": "The card value from the single card draw could be used to filter for specific card values in multiple draws"
          },
          {
            "name": "suit",
            "description": "The suit from the single card draw could be used to filter for specific suits in multiple draws"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Card Draw Simulator",
    "parent tool description": "Draw cards from a regular 52 playing cards deck with a variety of options.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "value",
        "type": "STRING",
        "description": "",
        "default": "all"
      },
      {
        "name": "suit",
        "type": "STRING",
        "description": "",
        "default": "\u2660"
      },
      {
        "name": "back",
        "type": "STRING",
        "description": "",
        "default": "false"
      },
      {
        "name": "pulls",
        "type": "STRING",
        "description": "",
        "default": "10"
      }
    ],
    "code": "import requests\n\nurl = \"https://card-draw-simulator.p.rapidapi.com/cards\"\nquerystring = {\"value\": value, \"suit\": suit, \"back\": back, \"pulls\": pulls}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"card-draw-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Card Draw Simulator: Cards",
    "tool description": "Draws multiple cards from a standard 52-card deck. This is part of a tool that offers various card-drawing options, utilizing a randomized algorithm to ensure fair and unpredictable selections, ideal for applications like game simulations or probability experiments.",
    "API name": "Cards",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool output provides a list of playing cards drawn from a standard 52-card deck. Each card is represented as a string that combines its rank (e.g., 'A', 'K', '10') and suit symbol (e.g., '\u2663', '\u2666', '\u2665'). The number of cards in the list varies, corresponding to the requested number of cards to draw. This data is intended for simulating card games or conducting probability experiments.",
      "output_format": "The output is a JSON object containing a single key, \"cards\". The value associated with this key is a JSON array of strings, where each string represents one card. The examples are provided as string-serialized JSON, but the native output is a JSON object. There is no indication of pagination or cursoring."
    },
    "connected tools": [
      {
        "tool name": "Card Draw Simulator: Card",
        "connect params": [
          {
            "name": "suit",
            "description": "Can use the suit from a drawn card"
          },
          {
            "name": "value",
            "description": "Can use the value/rank from a drawn card"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the number of cards drawn as input for number of dice"
          },
          {
            "name": "sides",
            "description": "Could use card values (1-13) as number of sides"
          },
          {
            "name": "rolls",
            "description": "Could use the number of cards drawn as input for number of rolls"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the number of cards drawn as input for number of dice"
          },
          {
            "name": "sides",
            "description": "Could use card values (1-13) as number of sides"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice rolls",
        "connect params": [
          {
            "name": "rolls",
            "description": "Could use the number of cards drawn as input for number of rolls"
          },
          {
            "name": "dice",
            "description": "Could use the number of cards drawn as input for number of dice"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the number of cards drawn as input for number of dice"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom die",
        "connect params": [
          {
            "name": "sides",
            "description": "Could use a card value (1-13) as number of sides"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "CheapShark - Game Deals",
    "parent tool description": "CheapShark is a price comparison website for digital PC Games. We keep track of prices across multiple stores including Steam, GreenManGaming, Fanatical, and many others.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "title",
        "type": "STRING",
        "description": "Search for a game by title",
        "default": "batman"
      },
      {
        "name": "exact",
        "type": "NUMBER",
        "description": "Default `0`\n\nFlag to allow only exact string match for `title` parameter",
        "default": "0"
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Default `60`\n\nThe maximum number of games to return, up to `60`",
        "default": "60"
      }
    ],
    "code": "import requests\n\nurl = \"https://cheapshark-game-deals.p.rapidapi.com/games\"\nquerystring = {\"title\": title, \"exact\": exact, \"limit\": limit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cheapshark-game-deals.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "CheapShark - Game Deals: List of Games",
    "tool description": "Retrieves a list of games matching a specific title or SteamAppID, including the cheapest current deal for each game. This endpoint is part of CheapShark, a price comparison platform that tracks digital PC game prices across multiple stores like Steam, GreenManGaming, and Fanatical, enabling users to find affordable gaming options by aggregating and analyzing deal data from its extensive network of retailers.",
    "API name": "List of Games",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a list of video game editions that match a search query. Each item in the list provides details for a specific game, including its CheapShark and Steam identifiers, the current cheapest price available across various digital stores, a deal identifier, and a URL for a thumbnail image. This allows users to find and compare the best prices for different versions of a game.",
      "output_format": "The output is a JSON array of objects, serialized as a string. Each object represents a single game. Some fields, like `steamAppID`, can be null. An empty string is returned when no matching games are found, rather than an empty array."
    },
    "connected tools": [
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "Game titles from the source tool can be used to search for game reviews and ratings"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: General Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "Game titles from the source tool can be used as search criteria to find related information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Chess Puzzles",
    "parent tool description": "Query a database of over 2 million Chess Puzzles",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://chess-puzzles.p.rapidapi.com/\"\nquerystring = {\"id\": \"HxxIU\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Chess Puzzles: Puzzle by Id",
    "tool description": "Retrieves a single, specific chess puzzle using its unique ID. This tool queries a comprehensive database of over 2 million chess puzzles to fetch the details of the requested puzzle.",
    "API name": "Puzzle by Id",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The output provides the complete details for a single chess puzzle identified by its ID. This includes the puzzle's unique identifier, the starting board position in FEN notation, its difficulty rating and deviation, the sequence of correct moves, and a list of associated tactical or strategic themes.",
      "output_format": "The tool returns a JSON object with a single root key, \"puzzles\". The value of \"puzzles\" is a JSON array that contains a single JSON object representing the requested puzzle. This puzzle object includes string fields for 'puzzleid' and 'fen', numeric fields for 'rating' and 'ratingdeviation', and arrays of strings for 'moves' and 'themes'."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Dice Roll Simulator",
    "parent tool description": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "dice",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      },
      {
        "name": "sides",
        "type": "NUMBER",
        "description": "",
        "default": "8"
      },
      {
        "name": "rolls",
        "type": "STRING",
        "description": "",
        "default": "2"
      }
    ],
    "code": "import requests\n\nurl = \"https://dice-roll-simulator.p.rapidapi.com/custom-dice-rolls\"\nquerystring = {\"dice\": dice, \"sides\": sides, \"rolls\": rolls}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dice-roll-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Dice Roll Simulator: Custom dice rolls",
    "tool description": "Rolls any number of dice with specified sides and frequencies, powered by the ultimate dice rolling API's flexible framework to process custom configurations and efficiently generate results.",
    "API name": "Custom dice rolls",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The output provides the results of a dice roll simulation, detailing both individual and cumulative outcomes. It includes a final 'total' sum of all dice rolled across all roll groups. It also provides a 'result' list which breaks down each distinct roll group (e.g., \"2d6\" or \"1d20\"), showing the individual die values in a 'roll' array and a 'subtotal' for that specific group.",
      "output_format": "The output is a JSON object serialized as a string. The top-level object contains a 'total' (integer) and a 'result' key, which holds an array of objects. Each object in the 'result' array represents a distinct roll group and includes a 'roll' (an array of integers for each die) and a 'subtotal' (the integer sum of that group's rolls)."
    },
    "connected tools": [
      {
        "tool name": "Dice Roll Simulator: Custom dice",
        "connect params": [
          {
            "param_name": "dice",
            "description": "The total from a previous roll could determine how many dice to roll in a follow-up roll"
          },
          {
            "param_name": "sides",
            "description": "The total from a previous roll could determine how many sides each die should have"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice rolls",
        "connect params": [
          {
            "param_name": "rolls",
            "description": "The total from a previous roll could determine how many roll iterations to perform"
          },
          {
            "param_name": "dice",
            "description": "The total from a previous roll could determine how many dice to use per roll"
          }
        ]
      },
      {
        "tool name": "Trivia by API-Ninjas: /v1/trivia",
        "connect params": [
          {
            "param_name": "limit",
            "description": "The dice roll total could determine how many trivia questions to retrieve (within the 1-30 limit)"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Epic Games Store - Free Games",
    "parent tool description": "Unofficial API for scraping Free Games Offers from the Epic Games Store",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "country",
        "type": "STRING",
        "description": "Country Code for local offers. E.g, ES, DE, US. Defaults to US",
        "default": "US"
      }
    ],
    "code": "import requests\n\nurl = \"https://epic-games-store-free-games.p.rapidapi.com/free\"\nquerystring = {\"country\": country}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"epic-games-store-free-games.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Epic Games Store - Free Games: Free Games",
    "tool description": "Retrieves all currently available and upcoming free games from the Epic Games Store, including details about each title and its availability period. This endpoint leverages an unofficial API designed for scraping game offer data, utilizing web scraping techniques to extract real-time information from the Epic Games Store's frontend, providing developers and users with a convenient way to track free game promotions without direct access to Epic's official systems.",
    "API name": "Free Games",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output is a detailed list of free games from the Epic Games Store, categorized into currently available and upcoming promotions. For each game, it provides comprehensive information including the title, a detailed description, the offer's start and end dates, the publisher/developer, and links to promotional images. This information is intended to allow users to track and discover free game offers on the platform.",
      "output_format": "The output is a single JSON object. This object contains keys like `currentGames` and, presumably, a key for upcoming games (e.g., `upcomingGames`). The value for each of these keys is a JSON array where each element is a complex object representing a single game. These game objects are deeply nested, containing further objects and arrays for attributes like images, seller details, and categories. Some fields, such as `expiryDate` and `url`, can be null."
    },
    "connected tools": [
      {
        "tool name": "CheapShark - Game Deals: List of Games",
        "connect params": [
          {
            "name": "title",
            "description": "Game titles from Epic Games Store free games can be searched in CheapShark to compare prices across platforms"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "Game titles from Epic Games Store free games can be searched for reviews and ratings"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: General Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "Game titles from Epic Games Store free games can be searched for reviews, outlets, and authors"
          }
        ]
      },
      {
        "tool name": "Free-to-Play Games Database: Filter games by multiple tags",
        "connect params": [
          {
            "name": "tag",
            "description": "Game categories from Epic Games Store free games can be used to find similar free games"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Free-to-Play Games Database",
    "parent tool description": "Free-to-play games database powered by FreeToGame.com!",
    "required_parameters": [
      {
        "name": "tag",
        "type": "STRING",
        "description": "",
        "default": "3d.mmorpg.fantasy.pvp"
      }
    ],
    "optional_parameters": [
      {
        "name": "platform",
        "type": "STRING",
        "description": "",
        "default": "pc"
      }
    ],
    "code": "import requests\n\nurl = \"https://free-to-play-games-database.p.rapidapi.com/api/filter\"\nquerystring = {\"platform\": platform, \"tag\": tag}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"free-to-play-games-database.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Free-to-Play Games Database: Filter games by multiple tags",
    "tool description": "Filters games by multiple tags and platform to deliver personalized results, with optional sorting parameters. This leverages the FreeToGame.com database\u2014a comprehensive collection of free-to-play games\u2014enabling users to efficiently narrow down options based on preferences, ensuring tailored recommendations from a curated catalog of titles.",
    "API name": "Filter games by multiple tags",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output is a list of free-to-play games that match the user's specified filters. Each game in the list is detailed with information such as its ID, title, genre, platform, publisher, developer, release date, and a short description. The output also includes URLs to a thumbnail image, the game's official website, and its profile on freetogame.com, allowing for easy access and further research.",
      "output_format": "The primary output is a JSON array of objects, where each object represents a single game. In cases where no results are found or an error occurs, the API may return a single JSON object containing 'status' and 'status_message' keys to indicate the outcome. Some string values in the provided examples appear to be truncated, which is likely an artifact of the example itself."
    },
    "connected tools": [
      {
        "tool name": "CheapShark - Game Deals: List of Games",
        "connect params": [
          {
            "name": "title",
            "description": "Can use game titles from the free-to-play games list to search for deals on these games"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "Can use game titles from the free-to-play games list to search for reviews and ratings"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: General Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "Can use game titles, publishers, or developers from the free-to-play games list for broader searches"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hearthstone",
    "parent tool description": "This API provides cards information for Hearthstone",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "page",
        "type": "STRING",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://hearthstone11.p.rapidapi.com/cards\"\nquerystring = {\"page\": page, \"pageSize\": pagesize}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"hearthstone11.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Hearthstone: Get Cards",
    "tool description": "Retrieves a comprehensive list of all Hearthstone cards. This API provides card information for Hearthstone, drawing from a detailed database of every available card to ensure accuracy and completeness, enabling developers to access up-to-date and structured card data for integration into applications or analyses.",
    "API name": "Get Cards",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output is a paginated list of Hearthstone cards. The main body of the response contains a list of card objects, each with comprehensive details like name, mana cost, text, rarity, class, type, and card set. The output also includes metadata such as the total card count and page information, making it suitable for applications that need to process or display a complete, structured database of Hearthstone cards.",
      "output_format": "The output is a JSON object. The top-level object contains a key named \"cards\", which holds a JSON array of individual card objects. These card objects are deeply nested, containing other objects (e.g., `rarity`, `class`, `cardSet`) and arrays (e.g., `keywords`). The output includes pagination metadata fields like `cardCount`, `pageCount`, and `page`."
    },
    "connected tools": [
      {
        "tool name": "Hearthstone: Get Card By Slug",
        "connect params": [
          {
            "name": "slug",
            "description": "The slug can be extracted from the card objects in the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hearthstone",
    "parent tool description": "This API provides cards information for Hearthstone",
    "required_parameters": [
      {
        "name": "slug",
        "type": "string",
        "description": "",
        "default": "a-light-in-the-darkness"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://hearthstone11.p.rapidapi.com/cards/{slug}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"hearthstone11.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Hearthstone: Get Card By Slug",
    "tool description": "Retrieves Hearthstone card details using a unique slug identifier. This API leverages a comprehensive database of Hearthstone cards to deliver accurate, real-time information, enabling developers to quickly access detailed card data such as abilities, stats, and set information.",
    "API name": "Get Card By Slug",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output is a comprehensive breakdown of a single Hearthstone card. It provides core statistics such as mana cost, attack, and health, alongside descriptive text detailing the card's abilities and flavor. The output also includes categorical information like the card's type, class, rarity, and associated expansion set, as well as a list of its keyword abilities.",
      "output_format": "The output is a single, non-paginated JSON object. It contains several nested objects for attributes like 'rarity', 'class', and 'type'. Some fields, such as 'cardSet' or 'spellSchool', can be null. Other fields, like 'keywords', are arrays of objects and may be empty."
    },
    "connected tools": [
      {
        "tool name": "Hearthstone: Get Cards",
        "connect params": [
          {
            "name": "page",
            "description": "The source tool provides detailed card information that could be used to navigate to specific pages containing similar cards"
          },
          {
            "name": "pageSize",
            "description": "The source tool's card information could help determine appropriate page size for retrieving similar cards"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "required_parameters": [
      {
        "name": "level",
        "type": "string",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/raids/{level}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Lost Ark: get raids by level",
    "tool description": "Retrieves information about guardian raids categorized by their level. This endpoint is part of an API designed to provide game data for Lost Ark, leveraging the game's internal database to offer detailed raid specifications, enabling players to strategize effectively based on difficulty tiers.",
    "API name": "get raids by level",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool provides a list of guardian raids available in the game Lost Ark. Each raid in the list is detailed with its name and the required item level, which indicates its difficulty. This information is intended to help players identify suitable raids based on their character's gear level and to strategize for game progression.",
      "output_format": "The output is a JSON array of objects. Each object represents a guardian raid and contains a 'name' (string) and an 'itemLevel' (integer). The different example outputs suggest that the returned array is a specific subset of raids belonging to a particular tier or level category, rather than a comprehensive list of all raids."
    },
    "connected tools": []
  },
  {
    "parent tool name": "OpenCritic API",
    "parent tool description": "An API for accessing video game and video game review data",
    "required_parameters": [
      {
        "name": "criteria",
        "type": "STRING",
        "description": "",
        "default": "god is of"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://opencritic-api.p.rapidapi.com/meta/search\"\nquerystring = {\"criteria\": criteria}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"opencritic-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "OpenCritic API: General Search",
    "tool description": "Searches for combinations of outlets, games, and authors using a string input. This API provides access to video game and review data, enabling efficient searches across these categories to help users quickly locate specific information about games, their publishers (outlets), and developers (authors).",
    "API name": "General Search",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output is a ranked list of search results for games, critics, or outlets based on a string query. Each result includes a unique ID, a name, the type of the result (e.g., 'game', 'critic'), and a relevance score. This allows users to find and identify specific entities within the OpenCritic database for further use.",
      "output_format": "The output is a JSON array of objects. Each object represents a single search result containing an 'id' (integer), 'name' (string), 'dist' (float), and 'relation' (string). The list is sorted by the 'dist' value, which acts as a relevance score, in ascending order. No nesting or pagination is observed in the examples."
    },
    "connected tools": [
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "param_name": "criteria",
            "description": "Can use the name field from search results to perform more specific game searches"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Author Search",
        "connect params": [
          {
            "param_name": "criteria",
            "description": "Can use the name field from search results when the relation type is 'critic' to search for specific authors"
          }
        ]
      },
      {
        "tool name": "CheapShark - Game Deals: List of Games",
        "connect params": [
          {
            "param_name": "title",
            "description": "Can use the name field from game search results to find deals for specific games"
          }
        ]
      },
      {
        "tool name": "Free-to-Play Games Database: Filter games by multiple tags",
        "connect params": [
          {
            "param_name": "tag",
            "description": "Can use the name field from game search results as part of tag filtering"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "OpenCritic API",
    "parent tool description": "An API for accessing video game and video game review data",
    "required_parameters": [
      {
        "name": "criteria",
        "type": "STRING",
        "description": "",
        "default": "the withcer 3"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://opencritic-api.p.rapidapi.com/game/search\"\nquerystring = {\"criteria\": criteria}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"opencritic-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "OpenCritic API: Game Search",
    "tool description": "Searches OpenCritic for games with similar names/titles using inverse trigram distance, where 0 represents a perfect match and 1 indicates no shared trigrams. This endpoint leverages the pg_trgm library for efficient text similarity calculations, enabling precise game discovery by analyzing title patterns. As part of an API for video game and review data, it enhances user experience by surfacing relevant game recommendations through advanced text matching algorithms.",
    "API name": "Game Search",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a list of video games that are textually similar to a search query. Each game in the list includes its unique OpenCritic ID, its full title, and a 'distance' score (from 0 to 1) indicating how closely its name matches the query. The list is sorted by this score, with a perfect match having a distance of 0, making it useful for finding specific games or discovering related titles.",
      "output_format": "The output is a JSON array of objects. Each object represents a game and contains three keys: 'id' (integer), 'name' (string), and 'dist' (float). The array is sorted by the 'dist' value in ascending order. There is no nesting, and no null values are observed in the examples."
    },
    "connected tools": [
      {
        "tool name": "OpenCritic API: /game/hall-of-fame/{year}",
        "connect params": []
      },
      {
        "tool name": "CheapShark - Game Deals: List of Games",
        "connect params": [
          {
            "name": "title",
            "description": "The game name from the search results could be used to find deals"
          }
        ]
      },
      {
        "tool name": "Epic Games Store - Free Games: Free Games",
        "connect params": []
      },
      {
        "tool name": "Free-to-Play Games Database: Filter games by multiple tags",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "OpenCritic API",
    "parent tool description": "An API for accessing video game and video game review data",
    "required_parameters": [
      {
        "name": "criteria",
        "type": "STRING",
        "description": "",
        "default": "travis north"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://opencritic-api.p.rapidapi.com/author/search\"\nquerystring = {\"criteria\": criteria}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"opencritic-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "OpenCritic API: Author Search",
    "tool description": "Searches for an author's information using an API that provides access to video game and review data. This endpoint leverages the API's database of game developers, reviewers, and related content to retrieve detailed author profiles, enhancing user ability to explore game creation and critical analysis within the gaming industry.",
    "API name": "Author Search",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a list of authors from the OpenCritic database that match a given search query. Each author entry includes their unique ID, full name, and a distance score indicating how closely they match the search term. The results are sorted by relevance, with the closest match having a distance score of 0, making it easy to identify the correct author for further queries.",
      "output_format": "The output is a JSON array of objects. Each object represents an author and contains three keys: 'id' (integer), 'name' (string), and 'dist' (float). The 'dist' field is a distance/relevance score, with 0 being a perfect match. The array is sorted by this 'dist' field in ascending order. No fields appear to be nullable."
    },
    "connected tools": [
      {
        "tool name": "OpenCritic API: /game/hall-of-fame/{year}",
        "connect params": []
      },
      {
        "tool name": "OpenCritic API: General Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "The author name from the search results could be used as search criteria"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "The author name from the search results could be used to find games by that author"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "OpenCritic API",
    "parent tool description": "An API for accessing video game and video game review data",
    "required_parameters": [
      {
        "name": "year",
        "type": "NUMBER",
        "description": "Year between 2016 and the current calendar year",
        "default": "2020"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://opencritic-api.p.rapidapi.com/game/hall-of-fame/{year}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"opencritic-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "OpenCritic API: /game/hall-of-fame/{year}",
    "tool description": "Retrieves the Hall of Fame list for a specific year. This endpoint is part of an API that provides access to video game and review data, leveraging its database of game listings and critical assessments to surface historically significant titles recognized in the Hall of Fame for targeted years.",
    "API name": "/game/hall-of-fame/{year}",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "This tool provides a list of video games that are part of the OpenCritic \"Hall of Fame\" for a given year. For each game, the output includes its name, ID, initial release date, top critic score, and links to box and banner images. The data may also include a list of platforms the game was released on.",
      "output_format": "The output is a JSON array of objects, where each object represents a single game. Within each game object, there is a nested object for 'images'. Some fields, like the 'Platforms' array, appear to be optional and may not be present for every entry."
    },
    "connected tools": [
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "Can use game names from the Hall of Fame list to search for specific games"
          }
        ]
      },
      {
        "tool name": "CheapShark - Game Deals: List of Games",
        "connect params": [
          {
            "name": "title",
            "description": "Can use game names from the Hall of Fame list to search for deals on these highly-rated games"
          }
        ]
      },
      {
        "tool name": "Free-to-Play Games Database: Filter games by multiple tags",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use game genres or themes inferred from Hall of Fame games to find similar free games"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Pokedex",
    "parent tool description": "An API showing all the lastest Pokemon",
    "required_parameters": [
      {
        "name": "country",
        "type": "string",
        "description": "",
        "default": "uk"
      },
      {
        "name": "pokemon",
        "type": "string",
        "description": "",
        "default": "pikachu"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://pokedex2.p.rapidapi.com/pokedex/{country}/{pokemon}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"pokedex2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Pokedex: Get Specific Pokemon",
    "tool description": "Retrieves detailed information about a specific Pok\u00e9mon, including stats, abilities, and evolution data. This endpoint is part of an API that serves as a comprehensive resource for the latest Pok\u00e9mon, leveraging a database of up-to-date species to provide accurate and structured data for developers and fans seeking in-depth insights into individual Pok\u00e9mon.",
    "API name": "Get Specific Pokemon",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a JSON array containing one or more objects, where each object details a specific Pok\u00e9mon or one of its forms (e.g., Mega Evolution, Gigantamax). The provided data includes the Pok\u00e9mon's name, ID, physical attributes like height and weight, combat-related information such as type, abilities, and weaknesses, and a URL for a thumbnail image. The output is structured to provide comprehensive details for developers or fans.",
      "output_format": "The output is a top-level JSON array, where each element is an object representing a Pok\u00e9mon variant. Some object keys, such as `type`, `weaknesses`, and `sex`, map to an array of strings. Based on the examples, a \"not found\" or empty response may return an array with a single template-like object containing empty strings and a null ID. It is notable that some data in the examples is in German, indicating the API might support or default to non-English languages."
    },
    "connected tools": [
      {
        "tool name": "Pokemon Unite Pokemons: Get Pokemon data by name",
        "connect params": [
          {
            "name": "name",
            "description": "The Pok\u00e9mon name from the Pokedex output can be used to query specific Pok\u00e9mon in Pokemon Unite"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: General Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "The Pok\u00e9mon name could be used to search for games related to that Pok\u00e9mon"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "The Pok\u00e9mon name could be used to search for games featuring that Pok\u00e9mon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Pokedex",
    "parent tool description": "An API showing all the lastest Pokemon",
    "required_parameters": [
      {
        "name": "country",
        "type": "string",
        "description": "",
        "default": "uk"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://pokedex2.p.rapidapi.com/pokedex/{country}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"pokedex2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Pokedex: Get All Pokemon from Pokedex",
    "tool description": "This endpoint retrieves all Pok\u00e9mon for the Poxedex, leveraging an API that provides the latest Pok\u00e9mon data to ensure up-to-date information for users and developers.",
    "API name": "Get All Pokemon from Pokedex",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of all Pok\u00e9mon. Each Pok\u00e9mon in the list is detailed with its Pokedex number, name, physical stats (weight, height), combat attributes (abilities, weaknesses, types), and a URL for its thumbnail image. The output data may be localized into different languages, such as English or German, affecting fields like the name and abilities.",
      "output_format": "The successful output is a JSON array of objects, serialized as a string. Each object corresponds to a single Pok\u00e9mon. In case of an error, the tool returns a plain error message string. The tool name \"Get All Pokemon\" suggests that the entire list is returned at once, with no pagination."
    },
    "connected tools": [
      {
        "tool name": "Pokedex: Get Specific Pokemon",
        "connect params": [
          {
            "param_name": "pokemon",
            "description": "The source tool provides a list of all Pok\u00e9mon names which can be used to query specific Pok\u00e9mon details"
          }
        ]
      },
      {
        "tool name": "Trivia by API-Ninjas: /v1/trivia",
        "connect params": [
          {
            "param_name": "category",
            "description": "The source tool provides Pok\u00e9mon data that could be used for trivia in the 'toysgames' category"
          }
        ]
      },
      {
        "tool name": "Free-to-Play Games Database: Filter games by multiple tags",
        "connect params": [
          {
            "param_name": "tag",
            "description": "Pok\u00e9mon types from the source tool could map to game tags like 'fantasy' or other relevant categories"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Pokemon Unite Pokemons",
    "parent tool description": "Pokemon Unite",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "page",
        "type": "STRING",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://pokemon-unite-pokemons.p.rapidapi.com/pokemon\"\nquerystring = {\"pageSize\": pagesize, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"pokemon-unite-pokemons.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Pokemon Unite Pokemons: List all Pokemons",
    "tool description": "Retrieves a comprehensive list of all Pok\u00e9mon in Pokemon Unite. This leverages the game's internal database to provide accurate and up-to-date character information, enabling players to reference and strategize effectively during matches.",
    "API name": "List all Pokemons",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a paginated list of Pok\u00e9mon from the game Pokemon Unite. For each Pok\u00e9mon, the output includes its name, a unique ID, and its damage type (Physical or Special). This information is intended for players to reference and strategize with.",
      "output_format": "The output is a JSON object. It contains top-level keys for pagination control, including `itemCount`, `pageCount`, and `page`. The list of Pok\u00e9mon is nested within an array under the `items` key."
    },
    "connected tools": [
      {
        "tool name": "Pokemon Unite Pokemons: Get Pokemon data by name",
        "connect params": [
          {
            "name": "name",
            "description": "The name of a specific Pok\u00e9mon from the list to get detailed information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Pokemon Unite Pokemons",
    "parent tool description": "Pokemon Unite",
    "required_parameters": [
      {
        "name": "name",
        "type": "string",
        "description": "",
        "default": "Azumarill"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://pokemon-unite-pokemons.p.rapidapi.com/pokemon/{name}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"pokemon-unite-pokemons.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Pokemon Unite Pokemons: Get Pokemon data by name",
    "tool description": "Retrieves detailed information about a specific Pok\u00e9mon when provided with its name. This endpoint is part of the Pok\u00e9mon Unite platform, leveraging a comprehensive database of Pok\u00e9mon data to deliver accurate, real-time details such as abilities, moves, and stats, enhancing gameplay strategies and character customization.",
    "API name": "Get Pokemon data by name",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive profile for a specific Pok\u00e9mon from the game Pok\u00e9mon Unite. This profile includes the Pok\u00e9mon's competitive tier, gameplay role, damage type, and detailed information about its skills and abilities. It is primarily intended to inform gameplay strategy, offering multiple recommended character builds, each with specific held items, battle items, and move selections.",
      "output_format": "The output is a single, deeply nested JSON object. It contains several key fields that are arrays of objects, such as 'builds', 'skills', and 'evolution'. The 'skills' objects themselves contain a further nested object ('rsb') with highly detailed mechanical data. Some top-level keys like 'evolution' appear to be optional, likely present only for Pok\u00e9mon that have an evolutionary line in the game."
    },
    "connected tools": [
      {
        "tool name": "Pokedex: Get Specific Pokemon",
        "connect params": [
          {
            "name": "pokemon",
            "description": "The Pokemon name from the source tool can be used to retrieve additional Pokemon data from the Pokedex"
          }
        ]
      },
      {
        "tool name": "Pokemon Unite Pokemons: List all Pokemons",
        "connect params": [
          {
            "description": "The source tool provides detailed information about a specific Pokemon, which complements the list of all Pokemon from this tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Rocket League",
    "parent tool description": "Ranks, stats, news & more, provided by the fastest and most powerful API for Rocket League.",
    "required_parameters": [
      {
        "name": "region",
        "type": "ENUM",
        "description": "The region to search. Valid options include:\n- `asia-east`\n- `asia-se-mainland`\n- `asia-se-maritime`\n- `europe`\n- `india`\n- `asia-east`\n- `middle-east`\n- `oceania`\n- `south-africa`\n- `south-america`\n- `us-east`\n- `us-west`",
        "default": ""
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rocket-league1.p.rapidapi.com/tournaments/{region}\"\nquerystring = {\"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rocket-league1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Rocket League: Tournaments",
    "tool description": "Checks scheduled tournaments in a specified region. This endpoint is part of the fastest and most powerful API for Rocket League, which provides ranks, stats, news, and more, delivering real-time tournament data to keep players informed about competitive events worldwide.",
    "API name": "Tournaments",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool provides information about scheduled Rocket League tournaments. A successful response contains tournament data nested under a `tournaments` key. The tool is intended to be used to query for and stay informed about competitive events. The output can also be an error object, which provides a descriptive message and additional info for debugging, such as in the case of an API timeout.",
      "output_format": "The output is a JSON object. Successful data is nested under a top-level `tournaments` key. When no tournaments are found, the value for this key can be an empty object (`{}`). In some cases, a completely empty object (`{}`) might be returned. Error responses have a different structure, containing keys like `messages` and `info`."
    },
    "connected tools": [
      {
        "tool name": "Rocket League: Population",
        "connect params": [
          {
            "description": "Tournament data can be enriched with information about current player population"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Trivia by API-Ninjas",
    "parent tool description": "Access endless trivia question and answers. See more info at https://api-ninjas.com/api/trivia.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "How many results to return. Must be between **1** and **30**. Default is **1**.",
        "default": ""
      },
      {
        "name": "category",
        "type": "STRING",
        "description": "Category of trivia. Possible values are: \n\n**artliterature\nlanguage\nsciencenature\ngeneral\nfooddrink\npeopleplaces\ngeography\nhistoryholidays\nentertainment\ntoysgames\nmusic\nmathematics\nreligionmythology\nsportsleisure**",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://trivia-by-api-ninjas.p.rapidapi.com/v1/trivia\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"trivia-by-api-ninjas.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Trivia by API-Ninjas: /v1/trivia",
    "tool description": "Retrieves a random trivia question and answer. This is part of the API Ninjas Trivia API, which provides access to a vast collection of trivia questions and answers. The endpoint leverages the API's infrastructure to deliver engaging, randomized content, offering users an interactive way to explore facts across various categories.",
    "API name": "/v1/trivia",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool output provides a single, random trivia item. This item consists of the trivia question, its corresponding answer, and the category it belongs to. This information is designed to be used in applications like quizzes, games, or for displaying fun facts.",
      "output_format": "The output is a JSON array containing a single object. This object has three string key-value pairs: 'category', 'question', and 'answer'. There is no indication of pagination, and based on the examples, the fields appear to be non-nullable."
    },
    "connected tools": [
      {
        "tool name": "OpenCritic API: General Search",
        "connect params": [
          {
            "param_name": "criteria",
            "source_field": "question",
            "description": "The trivia question might contain game titles that can be searched in OpenCritic"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "param_name": "criteria",
            "source_field": "question",
            "description": "If the trivia is about video games, the question content can be used to search for related games"
          }
        ]
      },
      {
        "tool name": "CheapShark - Game Deals: List of Games",
        "connect params": [
          {
            "param_name": "title",
            "source_field": "question",
            "description": "If the trivia is about video games, the game title from the question can be used to find deals"
          }
        ]
      },
      {
        "tool name": "Free-to-Play Games Database: Filter games by multiple tags",
        "connect params": [
          {
            "param_name": "tag",
            "source_field": "category",
            "description": "The trivia category might correspond to game tags that can be used for filtering"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "CheapShark - Game Deals",
    "parent tool description": "CheapShark is a price comparison website for digital PC Games. We keep track of prices across multiple stores including Steam, GreenManGaming, Fanatical, and many others.",
    "tool name": "CheapShark - Game Deals: Stores Info",
    "tool description": "Returns a comprehensive list of digital PC game stores with their IDs, names, active status flags, and arrays of image/logo sizes (as relative URLs). This endpoint connects to CheapShark's price comparison service, which tracks game prices across multiple digital storefronts including Steam, GreenManGaming, Fanatical, and many others, allowing users to access the complete catalog of monitored stores for price comparison purposes.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cheapshark-game-deals.p.rapidapi.com/stores\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cheapshark-game-deals.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Stores Info",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a list of digital PC game stores tracked by the CheapShark service. Each store entry includes a unique ID, name, an activity status flag, and a set of relative URL paths for its banner, logo, and icon images. This information allows users to identify all available stores for price comparison and retrieve their associated branding assets.",
      "output_format": "The output is a single JSON array, where each element is an object representing a store. Each store object contains a nested 'images' object that holds the relative paths for different image types. The 'isActive' field is represented as a numeric boolean (1 for true, 0 for false)."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Dice Roll Simulator",
    "parent tool description": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.",
    "tool name": "Dice Roll Simulator: Regular die",
    "tool description": "Rolls one regular six-sided die, providing a single random number from 1 to 6. This uses the ultimate dice rolling API, which can handle dice of various sizes and quantities, allowing for everything from simple single-die rolls to complex combinations needed for tabletop gaming, probability demonstrations, or random number generation.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dice-roll-simulator.p.rapidapi.com/regular-die\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dice-roll-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Regular die",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The output provides the numerical result of a single, six-sided die roll. The result is an integer ranging from 1 to 6. This information is intended for use in games, probability demonstrations, or any application requiring a simple random number.",
      "output_format": "The output is a JSON object with a single key, \"result\". The value for this key is an integer representing the outcome of the die roll. The examples provided are string representations of a JSON object, but the actual output is assumed to be a valid JSON object. The 'result' field is non-nullable."
    },
    "connected tools": [
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "The dice roll result (1-6) could be used to determine how many dice to roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice",
        "connect params": [
          {
            "name": "dice",
            "description": "The dice roll result (1-6) could be used to determine how many regular dice to roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice",
        "connect params": [
          {
            "name": "dice",
            "description": "The dice roll result (1-6) could be used to determine how many custom dice to roll"
          },
          {
            "name": "sides",
            "description": "The dice roll result (1-6) could be used to determine how many sides each die has"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "The dice roll result (1-6) could be used to determine how many dice to roll"
          },
          {
            "name": "rolls",
            "description": "The dice roll result (1-6) could be used to determine how many rolls to perform"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dice Roll Simulator",
    "parent tool description": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.",
    "tool name": "Dice Roll Simulator: Custom die",
    "tool description": "Rolls one die with any number of sides, allowing you to specify custom dice beyond the standard 6-sided variety. This endpoint is part of the ultimate dice rolling API that enables users to simulate various dice configurations for gaming, probability exercises, or random number generation needs. Whether you need a d4, d20, or even custom dice with hundreds of sides, this tool provides a simple way to get truly random rolls without the physical limitations of real dice.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "sides",
        "type": "NUMBER",
        "description": "",
        "default": "8"
      }
    ],
    "code": "import requests\n\nurl = \"https://dice-roll-simulator.p.rapidapi.com/custom-die\"\nquerystring = {\"sides\": sides}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dice-roll-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Custom die",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides the numerical result of a single die roll. It returns a single integer, representing the outcome of rolling one die with a user-specified number of sides. This information is intended for use in gaming, probability exercises, or any application needing a random integer within a specific range.",
      "output_format": "The output is a simple, non-nested JSON object. It contains a single key, \"result\", whose value is an integer representing the die roll's outcome. Based on the examples, the output is not an array and the fields are not nullable."
    },
    "connected tools": [
      {
        "tool name": "Dice Roll Simulator: Custom dice",
        "connect params": [
          {
            "name": "sides",
            "description": "The number of sides on each die could be determined by a previous die roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "sides",
            "description": "The number of sides on each die could be determined by a previous die roll"
          },
          {
            "name": "rolls",
            "description": "The number of rolls to perform could be determined by a previous die roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice",
        "connect params": [
          {
            "name": "dice",
            "description": "The number of dice to roll could be determined by a previous die roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "The number of dice to roll could be determined by a previous die roll"
          },
          {
            "name": "rolls",
            "description": "The number of rolls to perform could be determined by a previous die roll"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dice Roll Simulator",
    "parent tool description": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.",
    "tool name": "Dice Roll Simulator: Regular dice",
    "tool description": "Rolls any number of regular dice, allowing you to simulate multiple dice throws in a single request. This endpoint is part of the ultimate dice rolling API that lets you roll as many dice of any size as many times as you want, providing a flexible and comprehensive solution for all your virtual dice rolling needs.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "dice",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      }
    ],
    "code": "import requests\n\nurl = \"https://dice-roll-simulator.p.rapidapi.com/regular-dice\"\nquerystring = {\"dice\": dice}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dice-roll-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Regular dice",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides the results of a simulated dice roll. It returns a list of integers, where each integer represents the outcome of a single die. Additionally, it provides the sum of all the individual die rolls as a total integer value. This is useful for games or simulations that require random dice outcomes.",
      "output_format": "The output is a single, non-nested JSON object. It contains a key \"result\" which holds a JSON array of integers, and a key \"total\" which holds a single integer. No pagination or null values are indicated in the examples."
    },
    "connected tools": [
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the total from the dice roll to determine how many dice to roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the total from the dice roll to determine how many dice to roll"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the total from the dice roll to determine how many dice to roll"
          },
          {
            "name": "rolls",
            "description": "Could use the total from the dice roll to determine how many rolls to perform"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dice Roll Simulator",
    "parent tool description": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.",
    "tool name": "Dice Roll Simulator: Custom dice",
    "tool description": "Rolls any number of dice with any number of sides, allowing you to specify both the quantity of dice and how many faces each die has. This ultimate dice rolling API gives you complete flexibility to simulate multiple dice throws of various sizes, making it perfect for tabletop gaming, random number generation, probability demonstrations, or any scenario requiring customizable dice rolls.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "dice",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      },
      {
        "name": "sides",
        "type": "NUMBER",
        "description": "",
        "default": "8"
      }
    ],
    "code": "import requests\n\nurl = \"https://dice-roll-simulator.p.rapidapi.com/custom-dice\"\nquerystring = {\"dice\": dice, \"sides\": sides}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dice-roll-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Custom dice",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides the results of a simulated dice roll. It includes a list of integers representing the outcome of each individual die thrown. It also provides the sum total of all the dice rolls, which is useful for applications like tabletop gaming.",
      "output_format": "The output is a single JSON object with a flat structure. It contains a 'result' key, which holds an array of integers, and a 'total' key, which holds a single integer. The fields are not expected to be nullable."
    },
    "connected tools": [
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "Can use the length of the result array to determine how many dice were rolled"
          },
          {
            "name": "sides",
            "description": "Can infer the number of sides from the maximum value in the result array"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dice Roll Simulator",
    "parent tool description": "Roll as many dice of any size as many times you want with the ultimate dice rolling API.",
    "tool name": "Dice Roll Simulator: Regular dice rolls",
    "tool description": "Rolls any number of regular dice any number of times, allowing you to specify both the quantity of dice and how many rolls to perform. This uses the ultimate dice rolling API to simulate virtual dice of any size, providing random number generation for gaming, statistical simulations, or decision making. The service handles all the randomization logic, delivering consistent and truly random results for tabletop gaming, role-playing games, or any scenario requiring fair dice outcomes.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "rolls",
        "type": "NUMBER",
        "description": "",
        "default": "2"
      },
      {
        "name": "dice",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      }
    ],
    "code": "import requests\n\nurl = \"https://dice-roll-simulator.p.rapidapi.com/regular-dice-rolls\"\nquerystring = {\"rolls\": rolls, \"dice\": dice}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dice-roll-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Regular dice rolls",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides detailed results for one or more dice roll simulations. For each simulation, it lists the individual outcome of each die and a subtotal for that specific roll. The output also includes a grand total, which is the sum of all dice outcomes across all simulations performed.",
      "output_format": "The output is a single JSON object. This object contains a top-level key 'result', which is a JSON array of objects, and a 'total' key, which is an integer. Each object within the 'result' array represents a single roll set and contains a 'roll' key (an array of integers) and a 'subtotal' key (an integer). The structure is nested, and no null values were observed."
    },
    "connected tools": [
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "Can use the number of dice from the source tool's output"
          },
          {
            "name": "sides",
            "description": "Can use values from the source tool's roll results to determine sides"
          },
          {
            "name": "rolls",
            "description": "Can use the length of the result array from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice",
        "connect params": [
          {
            "name": "dice",
            "description": "Can use the number of dice from the source tool's output"
          },
          {
            "name": "sides",
            "description": "Can use values from the source tool's roll results to determine sides"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom die",
        "connect params": [
          {
            "name": "sides",
            "description": "Can use a value from the source tool's roll results or total"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: get stats",
    "tool description": "Retrieves a comprehensive list of all available statistics and attributes in the Lost Ark game. This endpoint connects to an API database containing extensive information about Lost Ark, providing access to character stats, combat metrics, progression indicators, and other numerical values that define gameplay mechanics. The data can be used for character building, performance analysis, or understanding the game's underlying systems.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/stats\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "get stats",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output is a list of character statistics available in the game Lost Ark. It provides the names of core attributes, such as 'Crit', 'Specialization', and 'Swiftness'. This information is intended to be used by players for character building, performance analysis, or to understand the game's underlying mechanics.",
      "output_format": "The output is a JSON object containing a single key, \"stats\". The value associated with this key is a JSON array of strings, where each string is the name of a statistic. The list of stats appears to be static and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Lost Ark: get a specific item",
        "connect params": [
          {
            "name": "name",
            "description": "The stat name could be used to find items that affect specific stats"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get engravings",
        "connect params": []
      },
      {
        "tool name": "Lost Ark: get classes",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: get a specific item",
    "tool description": "Retrieves detailed information about a specific item from the Lost Ark game database. This endpoint connects to a comprehensive API that provides access to various game data elements, including items, characters, skills, and other in-game content for Lost Ark, allowing players and developers to access specific item stats, requirements, and descriptions to enhance gameplay strategy or build third-party tools and resources for the popular MMORPG.",
    "required_parameters": [
      {
        "name": "name",
        "type": "string",
        "description": "",
        "default": "Hollowfruit"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/item/{name}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "get a specific item",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a detailed profile of a specific in-game item from Lost Ark. The output includes the item's ID, name, in-game properties like sellability, stack size, and grade, and a rich description containing usage details, lore, and acquisition hints. This data allows players and developers to understand item characteristics for gameplay or third-party applications.",
      "output_format": "The output is a single, non-nested JSON object. The provided examples are string representations of dictionaries, which should be parsed into a JSON object. The 'description' field's value is a string that may contain newline characters (\\n) and HTML-like tags for text formatting."
    },
    "connected tools": [
      {
        "tool name": "CheapShark - Game Deals: List of Games",
        "connect params": [
          {
            "name": "title",
            "description": "The Lost Ark item name could be used to search for related games"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: Game Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "The Lost Ark item name could be used to find related games"
          }
        ]
      },
      {
        "tool name": "OpenCritic API: General Search",
        "connect params": [
          {
            "name": "criteria",
            "description": "The Lost Ark item name could be used for a general search"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get raids by level",
        "connect params": [
          {
            "name": "level",
            "description": "If the item description mentions a specific raid level requirement"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: get abyssal dungeons",
    "tool description": "Retrieves a comprehensive list of all abyssal dungeons available in Lost Ark. This endpoint taps into a specialized API database containing detailed information about the popular MMORPG Lost Ark, allowing users to access specific game content data without having to manually search through in-game menus or external wikis. The returned information can be useful for players planning their progression, comparing dungeon requirements, or creating guides for the community.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/abyssalDungeons\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "get abyssal dungeons",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of all Abyssal Dungeons available in the game Lost Ark. The output details each dungeon's name, its constituent parts or wings, and the minimum item level required to enter each part. This information is intended to help players plan their progression and check gear requirements for specific content without consulting external sources.",
      "output_format": "The output is a string representation of a single, nested JSON object. The top-level keys are the names of the Abyssal Dungeons. Each dungeon key maps to an object containing a 'parts' key, which in turn holds another object. In this final nested object, keys are the names of the dungeon's sections, and their values are objects specifying the required 'itemLevel' as an integer."
    },
    "connected tools": [
      {
        "tool name": "Lost Ark: get raids by level",
        "connect params": [
          {
            "name": "level",
            "description": "Could use the item level requirements from abyssal dungeons to find raids with similar level requirements"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get a specific item",
        "connect params": [
          {
            "name": "name",
            "description": "Could search for items that match the minimum item level requirements from the abyssal dungeons"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get classes",
        "connect params": [
          {
            "description": "Could use the dungeon information to find suitable classes for specific abyssal dungeons based on item level progression"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get raids",
        "connect params": [
          {
            "description": "Could compare abyssal dungeon requirements with raid requirements for progression planning"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: get raids",
    "tool description": "Retrieves a comprehensive list of all guardian raids available in Lost Ark. This endpoint taps into a specialized database containing detailed information about the popular MMORPG Lost Ark, providing players and developers with accurate game data about these challenging boss encounters that are a core part of the endgame progression system. The API serves as a valuable resource for players planning their character advancement, developers creating companion apps, or community sites needing up-to-date Lost Ark content.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/raids\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "get raids",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive dictionary of all guardian raids in the game Lost Ark. Each entry in the dictionary is keyed by the raid's name and contains a nested object with the raid's level and the minimum character item level required to participate. This information is intended for players to plan their in-game progression and for developers building related applications.",
      "output_format": "The output is a single, non-paginated JSON object. The top-level keys are strings representing the names of the guardian raids. The corresponding values are nested JSON objects, each containing two key-value pairs: `raidLevel` (integer) and `itemLevel` (integer). No null values are observed in the examples."
    },
    "connected tools": [
      {
        "tool name": "Lost Ark: get raids by level",
        "connect params": [
          {
            "name": "level",
            "description": "The raid level can be extracted from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: get engravings",
    "tool description": "Retrieves a comprehensive list of all available engravings in Lost Ark, providing detailed information about these character enhancement systems. This endpoint is part of a specialized API that delivers extensive game data for Lost Ark, allowing developers and players to access crucial information about the game's mechanics, items, and systems without having to manually search through the game or external wikis.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/engravings\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "get engravings",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "This tool provides a comprehensive list of the names of all available engravings in the game Lost Ark. It serves as a reference for players and developers to see all the possible character enhancement engravings without needing to consult the game or external wikis.",
      "output_format": "The output is a JSON object containing a single key, \"engravings\". The value associated with this key is a JSON array of strings, where each string is the name of a specific engraving. The list appears to be complete and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Lost Ark: get a specific item",
        "connect params": [
          {
            "name": "name",
            "description": "The name of an item to retrieve details for, which could be an engraving item"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: get classes",
    "tool description": "Retrieves a comprehensive list of all available character classes and their corresponding subclasses in the game Lost Ark. This endpoint connects to a specialized API that provides detailed information about the popular MMORPG Lost Ark, allowing users to access accurate game data for character planning, build optimization, or general game knowledge. The class information is essential for players making decisions about which character types to create or develop within the game's progression system.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/classes\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "get classes",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool output provides a structured list of character classes and their corresponding subclasses in the game Lost Ark. The data is organized with main classes as primary keys, each associated with a list of its available specializations. This information is intended to help players research and plan their character choices and progression paths within the game.",
      "output_format": "The output is a single JSON object. The top-level keys are strings representing the main class names (e.g., 'Warrior', 'Mage'). Each of these keys maps to a nested JSON object, which contains a key for subclasses (e.g., 'subclasses' or 'Subclasses') that holds an array of strings listing the subclass names. Note the inconsistent capitalization of the 'Subclasses' key in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "Lost Ark: get a specific item",
        "connect params": [
          {
            "name": "name",
            "description": "Could use a class or subclass name to find class-specific items"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get raids",
        "connect params": []
      },
      {
        "tool name": "Lost Ark: get raids by level",
        "connect params": []
      },
      {
        "tool name": "Lost Ark: get engravings",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: Get all island with dropped items",
    "tool description": "Returns a comprehensive list of islands along with the IDs of all items that can be found (dropped) on each island in Lost Ark. This endpoint leverages the Lost Ark information API to provide accurate game data, helping players track valuable loot locations, plan efficient farming routes, or complete island-specific collections across the vast world of Arkesia.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/islands\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get all island with dropped items",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool returns a list of objects, where each object represents an island in the game Lost Ark. Each island object contains its name and a nested dictionary of items that can be dropped there. This dictionary maps item IDs to their corresponding quantities, allowing players to identify where to find specific loot.",
      "output_format": "The output is a JSON array of objects. Each object has a 'name' key (string) and an 'items' key (object). The 'items' object is a dictionary where keys are item IDs (string) and values are the quantity of that item (integer). The provided examples are truncated, implying the full list is extensive."
    },
    "connected tools": [
      {
        "tool name": "Lost Ark: get a specific item",
        "connect params": [
          {
            "name": "name",
            "description": "The item name can be derived from item IDs in the source tool's output"
          }
        ]
      },
      {
        "tool name": "Lost Ark: get stats",
        "connect params": []
      },
      {
        "tool name": "Lost Ark: get classes",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "Rocket League",
    "parent tool description": "Ranks, stats, news & more, provided by the fastest and most powerful API for Rocket League.",
    "tool name": "Rocket League: Population",
    "tool description": "Checks the current player population across different Rocket League playlists using the `/population` endpoint. This leverages the fastest and most powerful Rocket League API to provide real-time data on how many players are active in various game modes, complementing the broader suite of features that deliver comprehensive ranks, player statistics, and news for the Rocket League community.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rocket-league1.p.rapidapi.com/population\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rocket-league1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Population",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides real-time data on the Rocket League player population. It returns the total number of players currently online and provides a more detailed breakdown of player counts for each specific game mode or playlist. This information can be used to check server status or see which game modes are the most popular at a given moment.",
      "output_format": "The output is a single JSON object. It contains a top-level integer key 'online' for the total player count, and a key 'playlists' which holds an array of nested objects. Each object in this array represents a specific game mode and details its 'name' as a string and its current 'population' as an integer."
    },
    "connected tools": [
      {
        "tool name": "Rocket League: Tournaments",
        "connect params": [
          {
            "name": "region",
            "description": "The region parameter could be selected based on population data to target regions with higher player counts for better tournament experiences"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type_2",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type_1",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "open"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mult\"\nquerystring = {\"series_type_2\": \"close\", \"format\": \"json\", \"series_type_1\": \"open\", \"symbol\": \"AAPL\", \"interval\": \"1min\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MULT",
    "tool description": "Multiplies the values of two specified time series to generate a combined metric. This endpoint leverages the Financial Data API's access to real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to perform complex financial analysis by correlating and quantifying interrelated market data points.",
    "API name": "MULT",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides a calculated time series for a specified financial instrument (stock, forex, crypto). The output is a JSON object containing metadata (`meta`) about the instrument and the calculation, and a list of time-stamped values (`values`). Each value in the list is the result of multiplying two data series (e.g., open price * close price) for a specific datetime, enabling quantitative analysis.",
      "output_format": "The output is a single JSON object with two main keys: `meta` (an object) and `values` (an array). The `values` array contains a list of objects, each with a `datetime` string and a `mult` value, which is the calculated product returned as a string. The `meta` object's fields can vary slightly based on the asset type; for example, stocks may have a `currency` field, while forex pairs have `currency_base` and `currency_quote` fields. The data in the `values` array appears to be sorted in reverse chronological order. There is no indication of pagination in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: WMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DEMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: TEMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: TRIMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: KAMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MAMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: T3MA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CCI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: AROON",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: VWAP",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ICHIMOKU",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the MULT output's meta data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Greek News in English",
    "parent tool description": "An API showing all the latest Greek news  in English",
    "tool name": "Greek News in English: Get All News",
    "tool description": "Retrieves all the latest Greek news from multiple sources. This endpoint aggregates current news content from across Greek media outlets and delivers it in English, providing comprehensive access to Greece's news landscape without language barriers.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://greek-news-in-english.p.rapidapi.com/api/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"greek-news-in-english.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of recent news articles sourced from various Greek media outlets, presented in English. Each article in the list includes a title, a hyperlink to the full story, a short description, a URL for a relevant image, and the name of the source publication. This output allows users to stay informed about current events in Greece without language barriers.",
      "output_format": "The output is a JSON array of objects. Each object represents a single news article and has a consistent structure with the following string keys: 'title', 'link', 'description', 'image', and 'site'. The provided examples do not indicate any pagination or cursoring mechanisms."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles or keywords from Greek news as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related keywords or titles from Greek news articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or topics from Greek news articles"
          }
        ]
      },
      {
        "tool name": "Indonesia News: kompas-detail",
        "connect params": [
          {
            "name": "guid",
            "description": "Can use article identifiers if Greek news references Kompas articles"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords or topics from Greek news articles related to Cameroon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Uncovered Treasure",
    "parent tool description": "The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.",
    "tool name": "Uncovered Treasure: /random",
    "tool description": "Retrieves a random biblical insight or truth from the extensive collection. This endpoint draws from the Uncovered Treasure API, which contains over 25,000 revealed truths meticulously documented by Phil Largent across a 25-year period, covering every Book and chapter of the Bible. The random selection feature provides users with spontaneous access to biblical wisdom and revelations without needing to specify particular passages or themes.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "callback",
        "type": "STRING",
        "description": "Optional JSONP callback",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://uncovered-treasure-v1.p.rapidapi.com/random\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uncovered-treasure-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/random",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool's output is a single, randomly selected biblical insight from the Uncovered Treasure collection. Each insight includes the text of the revelation itself, the specific biblical context (e.g., book and chapter), and the date it was documented. It also provides metadata such as the book's numerical order in the Bible and a list of related topics.",
      "output_format": "The output is a JSON object with a top-level key named \"results\". The value is a JSON array that contains a single object representing the random insight. This insight object includes fields like \"date\" (string), \"context\" (string), \"scriptures\" (array of strings), \"text\" (string), \"topics\" (array of strings, which can be empty), and \"bookOrder\" (number)."
    },
    "connected tools": [
      {
        "tool name": "Uncovered Treasure: /verse/{verse}",
        "connect params": [
          {
            "param_name": "verse",
            "description": "Can use the scripture reference from the random insight to get more insights on the same verse"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "string",
        "description": "",
        "default": "A"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/sc/search/{symbol}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: search",
    "tool description": "Retrieves ticker symbols for stocks, ETFs, mutual funds, cryptocurrencies, and more. This endpoint leverages the Mboum Finance API's comprehensive financial data resources, including SEC filings, market news, and screeners, to deliver accurate and up-to-date ticker information for diverse financial instruments.",
    "API name": "search",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a list of financial instruments that match a search query. Each item in the list includes the instrument's ticker symbol, its full name, its type (e.g., Equity, ETF, Index, Option), and the exchange it is traded on. This information is primarily used to identify the correct ticker symbol for various financial assets.",
      "output_format": "The output is a JSON object with a 'meta' key for metadata and a 'body' key, which contains a JSON array of result objects. The schema of the objects within the 'body' array is inconsistent across examples. For instance, an instrument's name can be represented by 'name', 'shortname', or 'longname', and its type by 'typeDisp' or 'quoteType'. Some fields, like 'sector' or 'score', may only be present in certain responses."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the security of your choice. For example: symbol=MSFT"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/cashflow-statement/{stock}_",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: asset-profile",
        "connect params": [
          {
            "name": "symb",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: finance-analytics",
        "connect params": [
          {
            "name": "symb",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: earnings-trend",
        "connect params": [
          {
            "name": "symbl",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: earnings",
        "connect params": [
          {
            "name": "symb",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Realtime Stock Data: index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Stock and Options Trading Data Provider: Straddle",
        "connect params": [
          {
            "name": "ticker",
            "description": "Ticker for Intel Stock"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Twelve Data: Logo",
        "connect params": [
          {
            "name": "symbol",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ..."
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Yahoo Finance_v2",
    "parent tool description": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "string",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/qu/quote/AAPL/recommendation-trend\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
    "tool description": "Generates stock recommendations and trends based on user criteria. This endpoint is part of the Yahoo Finance API, which provides comprehensive financial data including stocks, options, ETFs, mutual funds, and news. By leveraging real-time market data and analytical tools, it delivers personalized investment insights to help users make informed decisions.",
    "API name": "stock/recommendation-trend",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides analyst recommendation trends for a given stock symbol over the last four months. The output contains a breakdown of the number of analysts rating the stock as \"strong buy\", \"buy\", \"hold\", \"sell\", or \"strong sell\" for the current month and the three preceding months. This data is intended to help users gauge the evolution of analyst sentiment for a specific stock.",
      "output_format": "The output is a JSON object. A successful response has a nested structure with a `body` object containing a `trend` array. Each object within this array represents a time period and its corresponding recommendation counts. An unsuccessful response, such as a timeout, returns a different, flatter JSON object with keys like `messages` and `info`."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data that includes the stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data that includes the stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data that includes the stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data that includes the stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data that includes the stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data that includes the stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data that includes the stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data for a specific stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data for a specific stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data for a specific stock symbol, which can be used as input for this parameter"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock recommendation data for a specific stock symbol, which can be used as input for this parameter"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Yahoo Finance_v2",
    "parent tool description": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "string",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/qu/quote/AAPL/default-key-statistics\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Yahoo Finance_v2: stock/key-statistics",
    "tool description": "Retrieves key statistics for stocks, including price, volume, and financial metrics. This leverages Yahoo Finance's extensive financial data and market insights to provide critical stock statistics, enabling investors and analysts to make informed decisions based on real-time and historical market data.",
    "API name": "stock/key-statistics",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool retrieves a detailed set of key financial statistics for a given stock symbol. The output includes valuation metrics (e.g., enterprise value, forward P/E, price-to-book ratio), share structure data (e.g., shares outstanding, float, short interest), and profitability measures (e.g., profit margins, quarterly earnings growth). This information is intended for investors and analysts to perform fundamental analysis and make informed decisions.",
      "output_format": "The output is a single JSON object with two primary keys: 'meta' and 'body'. 'meta' contains metadata about the API call, including the requested symbol. 'body' contains the financial data as a large object. Many of the financial metrics within 'body' are themselves objects, typically containing a 'raw' numeric value and a 'fmt' human-readable string representation. Some fields can be null or empty arrays, indicating that the data point is not available for the given stock."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve quote information"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve weekly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve monthly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve intraday time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to calculate technical indicators"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the source tool's output can be used to retrieve news sentiment"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the source tool's output can be used to retrieve negative news"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the source tool's output can be used to retrieve market data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve time series data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool's output can be used to retrieve related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Aliexpress DataHub",
    "parent tool description": "\ud83e\udd47#1 Data Provider. Real-Time product data API you've been looking for. No manual rules or web-scraper maintenance is required.",
    "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
    "tool description": "Retrieves all comprehensive details of a single product item. This endpoint leverages the #1 Data Provider's real-time product data API, delivering complete and up-to-date information without requiring manual rule configuration or web-scraper maintenance. The service provides instant access to accurate product specifications, pricing, availability, and other critical details through its automated data collection infrastructure.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "Aliexpress product ID.",
        "default": "1"
      },
      {
        "name": "loc",
        "type": "STRING",
        "description": "See '**locationList**' from '*Item Search 2 Filters*' Endpoint for this filter value. Eg.: US\n",
        "default": ""
      },
      {
        "name": "attr",
        "type": "STRING",
        "description": "See '**attributeList**'  from '*Item Search 2 Filters*' Endpoint for this filter value. Multiple values are separated with semicolons Eg.: 200000480:200004386;1186:200000072",
        "default": ""
      },
      {
        "name": "sort",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "switches",
        "type": "STRING",
        "description": "See '**switchesList**' from the response of this Endpoint and from '*Item Search 2 Filters*' Endpoint for this filter value. Eg.: 'freeShipping' and for multiple separate with coma Eg.: 'freeShipping,sale'. ",
        "default": ""
      },
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "iphone"
      },
      {
        "name": "locale",
        "type": "STRING",
        "description": "Locale parameter is used to display the titles and other content in selected language. All values are being validated and only the ones from the list are supported. Full list of supporting locale options, please use '**Locale List'** at '**Base**' group endpoints.",
        "default": ""
      },
      {
        "name": "region",
        "type": "STRING",
        "description": "Region parameter is used to accurately get the shipping costs and other promo/deals for specific geo location. All values are being validated and only the ones from the list are supported. Full list of supporting locale options, please use '**Country List**' at '**Base**' group endpoints.",
        "default": ""
      },
      {
        "name": "currency",
        "type": "STRING",
        "description": "Currency parameter is used to display the product price in selected currency. All values are being validated and only the ones from the list are supported. Full list of supporting currencies, please use '**Currency List**' at '**Base**' group endpoints.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://aliexpress-datahub.p.rapidapi.com/item_search_3\"\nquerystring = {\"page\": page, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"aliexpress-datahub.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Aliexpress - Item Search 3",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "This tool searches for products on Aliexpress based on a query and other filters. The output provides a paginated list of matching product items, including each item's ID, title, sales count, URL, and image. The response also includes metadata about the search itself, such as the total number of results, available sorting options, and filterable attributes.",
      "output_format": "The output is a single, nested JSON object. The main product data is located in a JSON array at `result.resultList`. Each object in this array represents a product. The response structure supports pagination, as indicated by the `totalResults` and `pageSize` fields. The root object also contains extensive metadata under the `status`, `settings`, and `base` keys, detailing the API call status and the search parameters used."
    },
    "connected tools": [
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param": "asin",
            "description": "If product IDs are compatible with Amazon ASINs, can use for price comparison"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MusicData API",
    "parent tool description": "Data for Youtube, Spotify music videos, tracks, albums, artist & more",
    "tool name": "MusicData API: /youtube/milestone/{milestone}",
    "tool description": "Identifies the fastest music videos to reach a specified milestone of views (X million) on YouTube, where X must be between 100-7000 million and increase in increments of 100 (e.g., 100M, 200M, 300M). This leverages comprehensive YouTube analytics data, providing insights into record-breaking performance metrics across music videos, tracks, albums, and artists. The tool analyzes viewing velocity trends from YouTube's vast database to determine which content achieved specific viewership milestones in the shortest timeframe.",
    "required_parameters": [
      {
        "name": "milestone",
        "type": "string",
        "description": "",
        "default": "500"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://musicdata-api.p.rapidapi.com/youtube/milestone/500\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"musicdata-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/youtube/milestone/{milestone}",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool provides a ranked list of the fastest music videos to reach a specified viewership milestone on YouTube. For each video, the output includes its rank, title, a direct YouTube URL, and the number of days it took to achieve the milestone. This information is used to analyze the performance and virality of music videos.",
      "output_format": "The output is a string representation of a JSON array, where each element is an object representing a music video. Each object contains four string keys: 'ranking', 'video' (the title), 'link' (the URL), and 'days'. Note that the 'ranking' and 'days' values are strings, not numbers. There is no evidence of pagination or nested structures in the provided examples, but some string values appear to be truncated."
    },
    "connected tools": [
      {
        "tool name": "Youtube Music API (Detailed): Get Song",
        "connect params": [
          {
            "name": "video_id",
            "description": "Can extract video ID from the YouTube URL in the source output"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Watch Playlist",
        "connect params": [
          {
            "name": "video_id",
            "description": "Can extract video ID from the YouTube URL in the source output"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Song Related",
        "connect params": [
          {
            "name": "browse_id",
            "description": "Can be derived from video information in the source output"
          }
        ]
      },
      {
        "tool name": "Miza: Song search",
        "connect params": [
          {
            "name": "search",
            "description": "Can use video title from the source output"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use video title from the source output"
          }
        ]
      },
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Can use YouTube URL from the source output"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Can use video title from the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: allUsaPrice",
    "tool description": "Provides the average current gasoline prices across states in America, delivering a broad market overview rather than individual station data. This service is part of a comprehensive fuel price tracking system that monitors gasoline and diesel prices at various fuel stations throughout different cities, allowing users to compare fuel costs across regions and make informed decisions about where and when to purchase fuel.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/allUsaPrice\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "allUsaPrice",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of average fuel prices for each state in the United States. Each item in the list represents a state and provides the current average prices for regular gasoline, mid-grade, premium, and diesel fuel. The prices are denominated in US dollars, allowing for a broad comparison of fuel costs across different regions.",
      "output_format": "The output is a JSON object with a 'result' key that contains an array of objects. Each object in the array corresponds to a U.S. state and includes its name, currency, and the prices for various fuel types (gasoline, midGrade, premium, diesel). The price values are formatted as strings."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "The state names from the gas price data could be used as destination inputs for trip planning"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "param_name": "state",
            "description": "The state names from the allUsaPrice output can be directly used as input for the stateUsaPrice endpoint to get more detailed information about a specific state"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "State names from the gas price data could be used as location search terms"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "State names from the gas price data could be used as location search terms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "fast Email verifier",
    "parent tool description": "APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.",
    "required_parameters": [
      {
        "name": "domain",
        "type": "STRING",
        "description": "",
        "default": "domain.org"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://fast-email-verifier.p.rapidapi.com/FreeDomain\"\nquerystring = {\"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"fast-email-verifier.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "fast Email verifier: FreeDomain",
    "tool description": "Checks if a domain is available by querying a database of registered domains. This is part of APISOLUTION's comprehensive API suite for developers, which includes email validation and verification tools, helping startups and staff projects ensure domain availability and email reliability efficiently.",
    "API name": "FreeDomain",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "The output is a simple text string indicating the availability of a queried domain. The value \"Not Found\" suggests the domain is not in the database of registered domains, and is therefore available for registration. This tool helps users quickly verify if a desired domain name can be registered.",
      "output_format": "The output is a raw text string, ending with a newline character. It is a non-serialized, flat structure without any nesting. The provided examples show multiple runs, but each individual output is a single string."
    },
    "connected tools": [
      {
        "tool name": "fast Email verifier: Role Account",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain name to check for role accounts"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain name to check if disposable"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: email Check SMTP",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain name to check SMTP configuration"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "IEEE Spectrum API",
    "parent tool description": "The IEEE Spectrum News API is a simple HTTP-based API that allows developers and students to access the latest news and articles from the IEEE Spectrum website as well as integrate them as data into their own websites web applications or mobile apps. The API uses \"REST-Like\" operations over HTTP GET requests with parameters Header encoded into the request and its response encoded in JSON format.This API has been created for bringing the latest technology news provided by the  IEEE Spectrum Ne...",
    "tool name": "IEEE Spectrum API: Get the latest 30 News from IEEE Spectrum",
    "tool description": "Returns the latest 30 news articles from IEEE Spectrum as JSON objects containing title, URL, publication date, section, image source, and estimated reading time. This endpoint leverages the IEEE Spectrum News API, a simple HTTP-based REST-like service that enables developers and students to access and integrate current technology news and articles from IEEE Spectrum into their websites, web applications, or mobile apps. The API operates via HTTP GET requests with header-encoded parameters and delivers responses in JSON format, making it easy to incorporate the latest technology news into your projects.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ieee-spectrum-api.p.rapidapi.com/api\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ieee-spectrum-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get the latest 30 News from IEEE Spectrum",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of the 30 most recent news articles from IEEE Spectrum. Each article is represented as a JSON object containing its title, sub-headline, URL, publication date, relevant sections, an image source, and estimated reading time. This information is designed for developers to integrate and display up-to-date technology news in their own applications or websites.",
      "output_format": "The output is a single JSON array containing 30 JSON objects. Each object represents a news article and has a flat structure, with the exception of the 'newsSections' key which contains an array of strings. There is no pagination, as the tool is designed to return a fixed number of recent articles."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use titles or keywords from IEEE Spectrum articles to search for related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use technology-related terms from IEEE Spectrum articles to find movie news about tech topics"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use titles or keywords from IEEE Spectrum articles to search for related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Geocode - Forward and Reverse",
    "parent tool description": "Forward and reverse geocoding using Google Geocoding API.",
    "tool name": "Geocode - Forward and Reverse: Forward geocode",
    "tool description": "Converts a street address into precise latitude and longitude coordinates. This endpoint uses Google's Geocoding API to transform human-readable addresses into geographic coordinates that can be used for mapping, distance calculations, or location-based services. The service provides reliable forward geocoding capabilities backed by Google's extensive global location database.",
    "required_parameters": [
      {
        "name": "address",
        "type": "STRING",
        "description": "",
        "default": "2795 Hastings St, Vancouver, BC V5K 1Z8"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://geocode-forward-and-reverse.p.rapidapi.com/forward\"\nquerystring = {\"address\": address}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geocode-forward-and-reverse.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Forward geocode",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool output provides the precise geographic coordinates (latitude and longitude) corresponding to a given street address. In addition to the coordinates, it returns the full, standardized address as resolved by Google's service and a unique Google Place ID. This information is intended for use in mapping applications, location-based services, and distance calculations.",
      "output_format": "The output is a single JSON object containing string and numeric values. It features a nested object under the 'location' key, which holds the latitude ('lat') and longitude ('lng') as floating-point numbers. There is no indication of arrays, pagination, or cursoring, suggesting the tool returns a single best-fit result for each query."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The coordinates from the geocoding result in format 'longitude,latitude'"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The coordinates from the geocoding result in format 'longitude,latitude'"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The coordinates from the geocoding result in format 'longitude,latitude'"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The coordinates from the geocoding result in format 'longitude,latitude'"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "lon",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "latitude",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "longitude",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "Address From To Latitude Longitude: Coordinates  (latitude longitude) to Address",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "lng",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "lng",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/reversegeocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinate from the geocoding result"
          },
          {
            "name": "lon",
            "description": "The longitude coordinate from the geocoding result"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Spotify_v3",
    "parent tool description": "Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.",
    "tool name": "Spotify_v3: Get radio playlist",
    "tool description": "Gets a personalized radio playlist based on a specific artist or song, delivering a curated stream of similar music. This endpoint leverages Spotify's vast database of millions of songs, artists, albums, and audio content to generate recommendations that match the musical style and characteristics of your selected seed. The radio feature analyzes audio attributes and listener patterns across Spotify's extensive catalog to create a continuous listening experience that maintains the vibe of your chosen artist or track.",
    "required_parameters": [
      {
        "name": "uri",
        "type": "STRING",
        "description": "Artist or song URI",
        "default": "spotify:artist:2w9zwq3AktTeYYMuhMjju8"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://spotify81.p.rapidapi.com/seed_to_playlist\"\nquerystring = {\"uri\": \"spotify:artist:2w9zwq3AktTeYYMuhMjju8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify81.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get radio playlist",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool output provides a reference to a single, personalized radio playlist generated by Spotify. The main piece of information is the playlist's unique Spotify URI, which is located within a `mediaItems` array. This URI can be used by other tools or applications to locate and play the specific radio playlist.",
      "output_format": "The output is a JSON object serialized as a string. It contains a top-level integer key `total` (which appears to always be 1) and a key `mediaItems`, which is an array. This array contains a single object, and that object holds the playlist's identifier under the `uri` key."
    },
    "connected tools": [
      {
        "tool name": "SoundCloud Scraper: Download Lyrics on Spotify (2 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "The playlist URI can be used to identify tracks for lyric retrieval"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_phasor\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: HT_PHASOR",
    "tool description": "Extracts phasor components from financial time series data to identify phase and amplitude characteristics of market trends. This endpoint leverages the Hilbert Transform algorithm, as detailed in *Rocket Science for Traders* by John F. Ehlers, to analyze real-time and historical financial data (stocks, forex, crypto, ETFs, indices) provided by the parent tool, enabling advanced technical analysis for pattern recognition and market forecasting.",
    "API name": "HT_PHASOR",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns Hilbert Transform Phasor Components for a specified financial instrument. The output includes metadata about the symbol, interval, and indicator used, followed by a time-series array of values. Each value in the series provides a timestamp along with its corresponding 'in_phase' and 'quadrature' components, which are used in advanced technical analysis to identify market cycles and trends.",
      "output_format": "The output is a single JSON object with two main keys: 'meta' (an object) and 'values' (an array of objects). The 'values' array contains the time-series data, sorted in reverse chronological order. Numeric values for the phasor components ('in_phase', 'quadrature') are formatted as strings. The fields within the 'meta' object may vary slightly depending on the type of financial asset being analyzed (e.g., stock vs. forex pair). No pagination or cursoring is evident in the examples."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_PHASOR output can be used to query the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_SINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_PHASOR output can be used to analyze the same instrument with HT_SINE"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_TRENDMODE",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_PHASOR output can be used to analyze trend components of the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPERIOD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_PHASOR output can be used to calculate dominant cycle period"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPHASE",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_PHASOR output can be used to calculate dominant cycle phase"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_TRENDLINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_PHASOR output can be used to extract trendlines for the same instrument"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Reverse Geocoding and Geolocation Service",
    "parent tool description": "Find nearest or largest city information or timezone for any given point location (latitude/longitude). The reverse geocode API back \"reverse\" codes any GPS location point into nearest or largest readable places with county, city, distance and population.",
    "required_parameters": [
      {
        "name": "longitude",
        "type": "NUMBER",
        "description": "",
        "default": "-74.40753570369408"
      },
      {
        "name": "latitude",
        "type": "NUMBER",
        "description": "",
        "default": "40.63380384389354"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://geocodeapi.p.rapidapi.com/GetTimezone\"\nquerystring = {\"longitude\": longitude, \"latitude\": latitude}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"geocodeapi.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
    "tool description": "Determines the local timezone for a given latitude and longitude, returning the timezone name, ID, and current local time. This is part of a reverse geocode API that converts GPS coordinates into detailed location data, including nearby cities, counties, population, and distance, providing accurate timezone information through a comprehensive geospatial database.",
    "API name": "GetTimezone",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a single object containing detailed timezone and geographical information for a given set of coordinates. It provides the formal timezone identifier (e.g., 'Europe/London'), the timezone abbreviation (e.g., 'BST'), the current GMT offset, and the current local time as a string. Additionally, it includes the full country name and its two-letter country code, allowing for precise location-based time calculations and display.",
      "output_format": "The output is a single, flat JSON object. The provided examples are string-serialized objects using single quotes, but they represent a standard key-value structure. No nesting, arrays, or pagination are indicated."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: staarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's coordinates"
          },
          {
            "name": "lng",
            "description": "Can use the longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/reversegeocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "TrueWay Geocoding: ReverseGeocode",
        "connect params": [
          {
            "name": "location",
            "description": "Can use the latitude,longitude from the source tool's coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/sqrt\"\nquerystring = {\"interval\": \"1min\", \"outputsize\": 30, \"series_type\": \"close\", \"format\": \"json\", \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: SQRT",
    "tool description": "Calculates the square root of a numerical input. This endpoint is part of the financial data API, which offers real-time and historical data for stocks, forex, crypto, ETFs, indices, and more. It provides mathematical processing capabilities to enhance data analysis, allowing developers to perform precise calculations on financial datasets. Access this tool through the Twelvedata API, leveraging the comprehensive financial data for accurate computations. Learn more in the [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "API name": "SQRT",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a time-series of square root values calculated from the closing prices of a specified financial instrument (stock, forex, or crypto). The output includes metadata about the instrument, such as its symbol and the time interval used. The primary data is an array of objects, each containing a datetime and the corresponding square root of the price, intended for quantitative financial analysis.",
      "output_format": "The output is a single JSON object containing two keys: `meta` and `values`. The `meta` key holds a JSON object with metadata about the request. The `values` key holds a JSON array of objects, where each object represents a data point with a `datetime` (string) and the calculated `sqrt` (string). The data points appear to be sorted in reverse chronological order."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: WMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STDDEV",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: VAR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MIN",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MAX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: AVG",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUM",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the SQRT output metadata"
          },
          {
            "name": "series_type",
            "description": "Can use the sqrt values as input series"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Places Nearby a Coordinates",
    "parent tool description": "Find places nearby a given coordinates.",
    "tool name": "Places Nearby a Coordinates: Categories",
    "tool description": "Retrieves categories of establishments available in the system. This endpoint is part of a location-based service that helps users find places of interest near specific geographic coordinates, allowing for targeted searches of businesses, landmarks, and other points of interest based on their classification.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://places-nearby-a-coordinates.p.rapidapi.com/categories\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"places-nearby-a-coordinates.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Categories",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of all available categories for establishments and points of interest. These categories are represented as strings in a hierarchical format, using a dot as a separator (e.g., `commercial.supermarket`). This list serves as a taxonomy that can be used to filter targeted searches in other related tools.",
      "output_format": "The output is a single, non-nested JSON array containing strings. Each string represents a distinct category or sub-category. The list appears to be a complete, static enumeration, as all examples are identical and do not suggest any form of pagination."
    },
    "connected tools": [
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "categories",
            "description": "The source tool provides a list of category strings that can be directly used as input for this parameter to filter nearby places by specific categories"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Blaze Verify",
    "parent tool description": "Email Verification by Emailable is astonishingly easy and low-cost. Simple, reliable, and affordable list cleaning shouldn\u2019t be hard to find. Emailable helps marketers and developers build powerful and effective marketing campaigns.<br><a href=\"https://emailable.com/docs/api?utm_source=rapid_api&utm_medium=web&utm_campaign=short_description\" style='font-weight:bold;'>View API Docs</a> | <a href=\"https://app.emailable.com/signup?utm_source=rapid_api&utm_medium=web&utm_campaign=short_description\" style='font-weight:bold;'>Click Here to Sign Up for an API Key</a>",
    "required_parameters": [
      {
        "name": "email",
        "type": "STRING",
        "description": "The email you want verified.",
        "default": ""
      }
    ],
    "optional_parameters": [
      {
        "name": "accept_all",
        "type": "BOOLEAN",
        "description": "Does an accept-all check. Heavily impacts API's response time. Default: false",
        "default": ""
      },
      {
        "name": "smtp",
        "type": "BOOLEAN",
        "description": "The SMTP step takes up a majority of the API's response time. If you would like to speed up your response times, you can disable this step. Default: true",
        "default": ""
      },
      {
        "name": "timeout",
        "type": "NUMBER",
        "description": "Optional timeout to wait for response (in seconds). Min: 2, Max: 30. Default: 5",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://blaze-verify.p.rapidapi.com/v1/verify\"\nquerystring = {\"email\": email}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"blaze-verify.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Blaze Verify: Verify an email",
    "tool description": "Verifies a single email address, allowing retries within a 5-minute window before counting against usage. This endpoint leverages Emailable's reliable email verification service, designed for marketers and developers to ensure accurate email lists. It utilizes a robust backend to validate addresses efficiently, providing results once available while managing retry policies to optimize usage, all through a simple, low-cost solution for clean data and effective marketing campaigns.",
    "API name": "Verify an email",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "The tool returns a detailed verification report for a single email address. The output includes a deliverability state (e.g., 'deliverable'), a confidence score, and the reason for the determination. It also provides metadata about the email, such as whether it belongs to a disposable or free service, is role-based, and includes inferred information like the user's name and gender. This data is intended to help users clean email lists and improve marketing campaign effectiveness.",
      "output_format": "The output is a single, flat JSON object. Several fields, such as 'did_you_mean', 'last_name', and 'tag', are nullable and will contain a null value if the information is not available or applicable. The output does not contain arrays or any form of pagination."
    },
    "connected tools": [
      {
        "tool name": "Alpha Email Verification: Email Checker",
        "connect params": [
          {
            "name": "email",
            "description": "The email address that was verified by Blaze Verify can be passed to this tool for additional verification"
          }
        ]
      },
      {
        "tool name": "Email Existence Validator: Get the MX Records",
        "connect params": [
          {
            "name": "email",
            "description": "The email address that was verified by Blaze Verify can be passed to this tool to check its MX records"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: Role Account",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain portion of the email address verified by Blaze Verify can be extracted and passed to this tool"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: FreeDomain",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain portion of the email address verified by Blaze Verify can be extracted and passed to this tool"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain portion of the email address verified by Blaze Verify can be extracted and passed to this tool"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: email Check SMTP",
        "connect params": [
          {
            "name": "username",
            "description": "The username portion of the email address verified by Blaze Verify can be extracted and passed to this tool"
          },
          {
            "name": "domain",
            "description": "The domain portion of the email address verified by Blaze Verify can be extracted and passed to this tool"
          }
        ]
      },
      {
        "tool name": "Email Existence Validator: Check for Disposable emails",
        "connect params": [
          {
            "name": "email",
            "description": "The email address that was verified by Blaze Verify can be passed to this tool to check if it's disposable"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "kjoller",
    "parent tool description": "Lyrics for childrens' songs",
    "tool name": "kjoller: Get song by title",
    "tool description": "Retrieves a children's song by searching for its title. This tool accesses a database of lyrics specifically curated for children's songs, providing complete words and verses for popular nursery rhymes, lullabies, and educational songs that are age-appropriate for young audiences. Perfect for parents, teachers, or caregivers looking to introduce children to music or find the exact lyrics to a favorite children's tune.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "title",
        "type": "STRING",
        "description": "",
        "default": "abc"
      }
    ],
    "code": "import requests\n\nurl = \"https://kjoller.p.rapidapi.com/songs?\"\nquerystring = {\"title\": title}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kjoller.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get song by title",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output is a JSON object containing a request status and a data payload. The 'status' key indicates if the query was successful, while the 'data' key holds an array of results. Based on the tool's description, this array is expected to contain song objects with lyrics, words, and verses, though the provided examples are all empty.",
      "output_format": "The output is a JSON object with two keys: 'status' (string) and 'data' (array). The provided examples only show the 'data' array as empty, which likely represents the case where no song is found for the given title. The structure of the objects within the 'data' array for a successful search is not shown."
    },
    "connected tools": [
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term"
          }
        ]
      },
      {
        "tool name": "Shazam: auto-complete",
        "connect params": [
          {
            "name": "term"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "start",
        "type": "NUMBER",
        "description": "Enter a start index",
        "default": "0"
      }
    ],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/co/collections/most_actives\"\nquerystring = {\"start\": start}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: market/most_actives",
    "tool description": "Returns stocks sorted by intraday trade volume in descending order. This is part of the Mboum Finance Official API, which provides financial data including stocks, options, ETFs, mutual funds, SEC filings, and news, leveraging real-time market data to help users identify actively traded securities and make informed investment decisions.",
    "API name": "market/most_actives",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a list of the most actively traded stocks, sorted in descending order by intraday volume. For each stock, it provides a comprehensive set of financial data, including real-time and historical price information (e.g., market change, 52-week range), volume metrics, valuation data (market cap, P/E ratio), and key company details. This allows users to identify high-volume securities and perform an initial financial assessment.",
      "output_format": "The output is a single JSON object which serves as a wrapper for the results. It includes metadata fields like 'start', 'count', and 'total', which indicate support for pagination. The primary data is located in the 'quotes' key, which contains an array of JSON objects, each representing a single stock with its detailed financial attributes."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/cashflow-statement/{stock}_",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BizToc",
    "parent tool description": "Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.",
    "required_parameters": [
      {
        "name": "source_id",
        "type": "string",
        "description": "",
        "default": "bbc"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://biztoc.p.rapidapi.com/news/source/bbc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"biztoc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "BizToc: News / Source",
    "tool description": "Retrieves the latest news stories for a specific {source_id} in chronological order. This endpoint is part of the Official BizToc.com API, the web's most comprehensive hub for business and finance news, providing timely and organized access to curated content from verified sources.",
    "API name": "News / Source",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of the latest business and finance news articles from a specific source. Each article in the list includes a title, a snippet of the body text, a publication timestamp, a URL to the full article, and an optional object containing links to associated images.",
      "output_format": "The output is a JSON array of objects. Each object represents a news article. The `img` field is nullable and will be null if no image is available. The key for the article's text snippet is inconsistent, appearing as `body` in some examples and `body_preview` in others."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search term from article title or body text"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search term from article title or body text"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Search term from article title or body text"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Search term from article title or body text"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flight Data_v2",
    "parent tool description": "Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.",
    "tool name": "Flight Data_v2: Airport data in json format",
    "tool description": "Returns a file containing a comprehensive list of airports from the database. This endpoint is part of the Travelpayouts Data API, which provides valuable travel insights for websites and blogs by offering access to flight price trends and popular destination data that can help you better serve your customers with relevant travel information.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com/data/en-GB/airports.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travelpayouts-travelpayouts-flight-data-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Airport data in json format",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "This tool returns a comprehensive list of travel-related locations, including airports and railway stations. For each location, it provides detailed data such as its name, IATA code, city and country codes, specific geographic coordinates, and time zone. This information is primarily used for populating databases for travel websites or applications that require a detailed catalog of flightable locations.",
      "output_format": "The tool returns a JSON array of objects, where each object represents a single location. The data contains nested objects for 'name_translations' and 'coordinates'. The 'name' field can be null, but the 'name_translations' object appears to consistently provide an English name. The examples are truncated, suggesting the full output is a very large, single list."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The airport data can provide city names and countries for destination planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use airport coordinates for nearby accommodation searches"
          },
          {
            "name": "lng",
            "description": "Can use airport coordinates for nearby accommodation searches"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use airport coordinates for pricing analysis near airports"
          },
          {
            "name": "lng",
            "description": "Can use airport coordinates for pricing analysis near airports"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use IATA codes from airport data"
          },
          {
            "name": "icao",
            "description": "Can use ICAO codes from airport data if available"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use airport identifiers from airport data"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use airport identifiers from airport data"
          },
          {
            "name": "counterpart_ident",
            "description": "Can use airport identifiers for route endpoints"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI News - Global",
    "parent tool description": "Global News produced by AI",
    "required_parameters": [
      {
        "name": "region",
        "type": "string",
        "description": "One of the region's key code in the list of **Get Regions** method.",
        "default": "us"
      },
      {
        "name": "version",
        "type": "string",
        "description": "",
        "default": "v1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://ai-news-global.p.rapidapi.com/get_news/v1/us\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-news-global.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "AI News - Global: Get News",
    "tool description": "Retrieves region-specific news updates by leveraging the AI-powered Global News platform, which analyzes global data sources to deliver personalized content based on user-selected regions. This endpoint uses advanced machine learning models trained on diverse international publications and real-time feeds to curate relevant stories, enabling users to stay informed about local events and global developments in their specified geographic areas.",
    "API name": "Get News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a dictionary where keys represent news categories (e.g., 'business', 'general') and the values contain the news data for that category. When successful, the value is a JSON string containing a list of articles, each with a title, description, source, and URL. However, the tool is unreliable and frequently returns HTML error pages or empty strings instead of the expected JSON data.",
      "output_format": "The output is a string representation of a dictionary. The dictionary's keys are news categories. The values are highly inconsistent; they can be a JSON string, an empty string, or an HTML string (typically a Cloudflare security challenge page). When the value is a valid JSON string, it contains an object with a status, total results count, and an array of 'articles' objects. Fields within an article object, such as 'author' or 'content', can be null."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles or keywords from news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location information from news articles to get region-specific coronavirus news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie titles or related keywords extracted from entertainment news articles"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or topics from news articles to find related news"
          }
        ]
      },
      {
        "tool name": "Instant Cameroon News: Retrieve data",
        "connect params": [
          {
            "name": "search",
            "description": "Can use keywords or topics from news articles to search for related Cameroon news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active",
    "tool description": "Retrieves a list of currently active weather alerts that can be filtered using various parameters, automatically setting the 'active' parameter to 1 and ignoring 'start' and 'end' parameters. When using ATOM format, results are returned in CAP-ATOM standard. This endpoint leverages the National Weather Service API (api.weather.gov) provided by NOAA (National Oceanic and Atmospheric Administration), which delivers comprehensive national weather data including current conditions and historical records to help users stay informed about immediate weather threats and hazards.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/alerts/active",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a GeoJSON FeatureCollection object containing a list of currently active weather alerts from the National Weather Service. Each feature in the collection represents a single alert, providing detailed information such as the event type (e.g., Special Weather Statement), severity, certainty, affected geographic area (as both a text description and a coordinate polygon), and the full descriptive text of the alert. This information is intended to inform users about immediate and ongoing weather hazards.",
      "output_format": "The output is a single JSON object that follows the GeoJSON 'FeatureCollection' standard. The core data is a list of alert objects located in the 'features' array. Each alert object contains a 'properties' object which holds the detailed information about the specific weather event. Fields within the 'properties' object, such as 'ends', can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check alerts for the same location"
          },
          {
            "name": "long",
            "description": "Can use coordinates from alert polygons to check alerts for the same location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check current weather in affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check current weather in affected areas"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check hourly forecasts for affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check hourly forecasts for affected areas"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check daily forecasts for affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check daily forecasts for affected areas"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Latest IPL News",
    "parent tool description": "An API showing all the latest IPL News around the world.",
    "tool name": "Latest IPL News: Get All IPL News",
    "tool description": "Returns comprehensive news coverage about the Indian Premier League (IPL) from sources worldwide. This endpoint aggregates the latest IPL news, updates, and developments from various global media outlets, providing a centralized source for cricket enthusiasts to stay informed about matches, player performances, team strategies, and other IPL-related events happening around the world.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://latest-ipl-news.p.rapidapi.com/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"latest-ipl-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get All IPL News",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of recent news articles about the Indian Premier League (IPL). Each article entry includes a title, a direct URL to the full story, and the name of the news source. The content covers various topics such as match viewership, player commentary, team performance, and financial news related to the IPL, serving as an aggregated news feed for followers of the league.",
      "output_format": "The output is a JSON-formatted string that represents an array of objects. Each object within the array corresponds to a single news article and contains three string keys: \"title\", \"url\", and \"source\". There is no indication of pagination or cursoring in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use IPL news titles or topics as search queries for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can search for movie news related to IPL or cricket personalities mentioned in IPL news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use IPL-related terms or team names from IPL news as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hotels com Provider",
    "parent tool description": "Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "slug",
        "type": "STRING",
        "description": "Hotels Slug",
        "default": "ho219115"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://hotels-com-provider.p.rapidapi.com/v2/meta/convert/slug-id\"\nquerystring = {\"slug\": \"ho219115\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hotels-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Hotels com Provider: Hotel Slug convert",
    "tool description": "Retrieves a hotel's unique identifier from its site-specific slug, such as converting 'ho219115' to '1105156'. This function is part of the Hotels.com platform's broader capabilities to search and display hotel information, leveraging its database of properties to provide precise hotel IDs for integration with booking systems or detailed property lookups.",
    "API name": "Hotel Slug convert",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides either a unique hotel identifier or an error message. On a successful conversion, the output contains the hotel's ID as a string, which can be used for subsequent booking or information retrieval tasks. In case of an error, the output provides a descriptive string detailing the reason for failure, such as the hotel not being found or a general client error.",
      "output_format": "The output is a single, non-nested JSON object. A successful response contains a 'data' key with the string hotel ID as its value. An error response contains a 'detail' key with a string error message. No arrays, pagination, or complex nesting are indicated by the examples."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property."
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel photos",
        "connect params": [
          {
            "name": "hotel_ids",
            "description": "Comma separated string of PPN hotel ids (Semi Opaque Only)"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel reviews",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Yahoo Finance_v2",
    "parent tool description": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "string",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/qu/quote/AAPL/asset-profile\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Yahoo Finance_v2: stock/profile",
    "tool description": "Retrieves stock profile information including company name, description, website, and other key details. This endpoint is part of the Yahoo Finance API, which provides comprehensive financial data on stocks, options, ETFs, mutual funds, and news. It leverages Yahoo Finance's extensive database to deliver accurate and up-to-date company profiles, enabling users to quickly access critical financial information for research, analysis, or investment decisions.",
    "API name": "stock/profile",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool retrieves a detailed corporate profile for a given stock symbol. The output includes the company's address, contact information (website, phone), a long business summary, its industry and sector, and key data points like the number of full-time employees. It also provides a list of company officers, including their names, titles, and compensation details.",
      "output_format": "The output is a single JSON object with two top-level keys: 'meta' (containing request metadata) and 'body' (containing the profile data). The 'body' object has a nested structure, including an array of objects for 'companyOfficers'. Some fields, like 'fullTimeEmployees', may be optional and not present in every response. The output is not paginated as it returns a complete profile for a single entity."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The Yahoo Finance profile provides company ticker symbols that can be used to query specific stock quotes"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The company symbol from the profile can be used to retrieve daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Search Endpoint",
        "connect params": [
          {
            "name": "keywords",
            "description": "The company name from the profile can be used as search keywords"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The company symbol from the profile can be used to retrieve historical data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The company symbol from the profile can be used to fetch related news"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The company symbol from the profile can be used to retrieve time series data"
          }
        ]
      },
      {
        "tool name": "Webull: news/search",
        "connect params": [
          {
            "name": "keyword",
            "description": "The company name from the profile can be used as a search keyword for news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Symbol ticker of mutual fund",
        "default": "VFIAX"
      }
    ],
    "optional_parameters": [
      {
        "name": "country",
        "type": "STRING",
        "description": "Filter by country name or alpha code",
        "default": ""
      },
      {
        "name": "dp",
        "type": "STRING",
        "description": "Number of decimal places for floating values",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/mutual_funds/world/composition\"\nquerystring = {\"symbol\": \"VFIAX\", \"country\": \"\", \"dp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: Composition",
    "tool description": "Returns the portfolio composition of a mutual fund, including sectors, holding details, and weighted exposure. This endpoint is part of a financial data API offering real-time and historical data for stocks, forex, crypto, ETFs, and indices, enabling developers to access comprehensive market insights and analyze investment structures effectively.",
    "API name": "Composition",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a detailed breakdown of a mutual fund's portfolio composition. A successful response includes the fund's allocation across major market sectors, asset classes (stocks, cash, etc.), and a list of its top individual holdings with their corresponding weights. This information allows for in-depth analysis of a fund's investment strategy and exposure. The tool also returns structured error messages if the request fails.",
      "output_format": "The output is a single JSON object. A successful response nests all data under a `mutual_fund.composition` key, which contains a mix of objects and arrays of objects. An error response has a flat structure with `code`, `message`, and `status` keys. Some fields within the data, such as those in the `bond_breakdown` section, can be null or contain zero values if not applicable."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Purchase Info",
        "connect params": [
          {
            "name": "symbol",
            "description": "The mutual fund symbol from the composition data can be used to get purchase information"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Search Endpoint",
        "connect params": [
          {
            "name": "keywords",
            "description": "Individual holdings from the composition data can be searched for more information"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Individual stock holdings from the composition data can be used to get current quotes"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "boundaries-io",
    "parent tool description": "US Zipcode, County, City, and State Boundaries API:\r\n\r\nA simple & very fast API that will allow you to integrate multiple GeoJson US boundaries results into your apps and systems.\r\n\r\nThis API is designed to be used programatically for optimal performance.  When using the MashApe UI for queries expect significant latency issues on large result sets!",
    "required_parameters": [
      {
        "name": "longitude",
        "type": "NUMBER",
        "description": "",
        "default": "-122.809678"
      },
      {
        "name": "latitude",
        "type": "NUMBER",
        "description": "",
        "default": "45.507378"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://vanitysoft-boundaries-io-v1.p.rapidapi.com/reaperfire/rest/v1/public/boundary/place/within\"\nquerystring = {\"longitude\": longitude, \"latitude\": latitude}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"vanitysoft-boundaries-io-v1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "boundaries-io: Query by Location for Place boundaries",
    "tool description": "Queries US Census Places shapefiles to retrieve geographic boundaries for incorporated and unincorporated places based on location input. This endpoint leverages the US Zipcode, County, City, and State Boundaries API's capability to deliver GeoJSON results, enabling programmatic integration of detailed spatial data into applications. By accessing census-derived datasets, it provides precise municipal and regional boundary information to support location-based analysis and mapping workflows.",
    "API name": "Query by Location for Place boundaries",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool outputs geographic boundary data for US Census Places, which includes both incorporated and unincorporated areas like cities and towns. The output is a GeoJSON object containing the precise geometric shapes (boundaries) of these places, derived from US Census shapefiles. This information is intended for use in mapping applications and location-based spatial analysis.",
      "output_format": "The output format is explicitly stated to be GeoJSON. This will likely be a GeoJSON FeatureCollection object, which is a standard way to represent a list of geographic features. Each feature in the collection would represent a single place and contain a 'geometry' (e.g., a Polygon or MultiPolygon) and a 'properties' object with metadata. The exact keys within the 'properties' object are unknown as the provided examples are empty."
    },
    "connected tools": [
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "The GeoJSON boundary data can be used to calculate the center point of the place boundary for map display"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "center",
            "description": "The GeoJSON boundary data can be used to calculate the center point of the place boundary for map display"
          },
          {
            "name": "bounds",
            "description": "The GeoJSON boundary data can be used to determine the bounding box of the place boundary"
          },
          {
            "name": "geojson",
            "description": "The GeoJSON boundary data can be directly used to display the place boundary on the map"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Routing",
        "connect params": [
          {
            "name": "points",
            "description": "The GeoJSON boundary data can be used to extract points along the boundary for routing purposes"
          }
        ]
      },
      {
        "tool name": "TrueWay Directions: FindDrivingRoute",
        "connect params": [
          {
            "name": "stops",
            "description": "The GeoJSON boundary data can be used to extract points along the boundary for routing purposes"
          }
        ]
      },
      {
        "tool name": "TrueWay Directions: FindDrivingPath",
        "connect params": [
          {
            "name": "origin",
            "description": "The GeoJSON boundary data can be used to extract a point on the boundary as the origin"
          },
          {
            "name": "destination",
            "description": "The GeoJSON boundary data can be used to extract a point on the boundary as the destination"
          },
          {
            "name": "waypoints",
            "description": "The GeoJSON boundary data can be used to extract points along the boundary as waypoints"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: calcroute",
        "connect params": [
          {
            "name": "start",
            "description": "The GeoJSON boundary data can be used to extract a point on the boundary as the starting point"
          },
          {
            "name": "destination",
            "description": "The GeoJSON boundary data can be used to extract a point on the boundary as the destination"
          },
          {
            "name": "via",
            "description": "The GeoJSON boundary data can be used to extract points along the boundary as via points"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "40.73,-73"
      }
    ],
    "optional_parameters": [
      {
        "name": "tp",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "aqi",
        "type": "STRING",
        "description": "",
        "default": "yes"
      },
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "",
        "default": "en"
      },
      {
        "name": "alerts",
        "type": "STRING",
        "description": "",
        "default": "no"
      },
      {
        "name": "num_of_days",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/weather.ashx\"\nquerystring = {\"aqi\": aqi, \"lang\": lang, \"alerts\": alerts, \"num_of_days\": num_of_days, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "World Weather Online API: Local Weather API",
    "tool description": "Retrieves current weather conditions, 14-day forecasts, air quality data, weather alerts, and monthly climate averages for over 4 million cities and towns worldwide. This is part of the Free Weather API and Geo API, which provides hourly, 14-day, historical weather data, and specialized marine and ski weather information in XML and JSON formats, enabling developers and businesses to access comprehensive weather insights for global locations.",
    "API name": "Local Weather API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns detailed weather data for a specified location, identified by city, zipcode, or latitude/longitude. The output includes a snapshot of the current conditions (temperature, wind, visibility, air quality) and a daily forecast. The forecast section contains a daily summary (max/min temperatures, sun hours) and astronomical information (sunrise, sunset, moon phase).",
      "output_format": "The output is in XML format, with a root element named `<data>`. The data is nested, containing main elements like `<current_condition>` and `<weather>`. The `<weather>` element, representing a daily forecast, contains further nested elements like `<astronomy>`, `<air_quality>`, and `<hourly>`. The provided examples are truncated, suggesting the full response may contain more data or a sequence of `<weather>` or `<hourly>` elements for multi-day/24-hour forecasts."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "start",
        "type": "NUMBER",
        "description": "Enter a start index",
        "default": "0"
      }
    ],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/co/collections/undervalued_growth_stocks\"\nquerystring = {\"start\": start}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: market/undervalued_growth_stocks",
    "tool description": "Identifies stocks with earnings growth rates exceeding 25% and relatively low price-to-earnings (PE) and price-to-earnings growth (PEG) ratios, leveraging Mboum Finance's API which provides access to stocks, options, ETFs, mutual funds, SEC data, news, and screeners. This endpoint utilizes the platform's financial data processing capabilities, drawing from a comprehensive database of market instruments and regulatory filings to surface undervalued opportunities with strong growth potential for investors.",
    "API name": "market/undervalued_growth_stocks",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a list of stocks identified as being undervalued yet demonstrating high growth potential. The output for each stock includes a wide array of financial metrics, such as current market price, historical price ranges, trading volume, various P/E ratios (trailing, forward), earnings per share (EPS), and dividend data. This information is designed to help investors discover and analyze stocks that may be priced favorably relative to their growth prospects.",
      "output_format": "The tool returns a single JSON object. This object contains a 'meta' key for API call metadata and a 'body' key. The 'body' value is a JSON array where each element is an object representing a specific stock. The 'meta' object includes 'offset', 'count', and 'total' fields, which indicates the results are paginated."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/cashflow-statement/{stock}_",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Logo",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the undervalued growth stocks list"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Spotify _v2",
    "parent tool description": "Get Spotify Tracks & Playlist Details",
    "tool name": "Spotify _v2: New releases",
    "tool description": "Retrieves newly released music tracks and albums filtered by a specific country code. This endpoint leverages Spotify's extensive music catalog to deliver the latest releases in your selected region, allowing you to discover fresh music tailored to geographical availability. The service provides access to detailed track and playlist information from Spotify's vast library, enabling you to stay updated with region-specific music releases.",
    "required_parameters": [
      {
        "name": "country",
        "type": "STRING",
        "description": "Enter country code like: US, CA, SE, IN, UK...",
        "default": "us"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://spotify117.p.rapidapi.com/new_releases/\"\nquerystring = {\"country\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify117.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "New releases",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a list of new music releases, such as albums and singles, filtered by a specific country. For each release, it provides detailed information including the album name, artist(s), release date, total tracks, available markets, and external URLs to the content on Spotify. In case of an API error, a message and diagnostic information are returned instead.",
      "output_format": "The successful output is a JSON object with a top-level 'albums' key. This key contains an object that holds an array of 'items', where each item is a detailed object for a music release. The presence of 'offset' and 'limit' parameters in the 'href' field suggests the results are paginated. Error responses are also JSON objects but follow a different structure, containing keys like 'messages' and 'info'."
    },
    "connected tools": [
      {
        "tool name": "Spotify _v2: Artist Details (Single)",
        "connect params": [
          {
            "name": "artist_id",
            "description": "Artist IDs from new releases can be used to get detailed artist information"
          }
        ]
      },
      {
        "tool name": "MusiclinkssApi: Search by url",
        "connect params": [
          {
            "name": "spotify_url",
            "description": "Spotify URLs from new releases can be used to find information across platforms"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active/area/{area}",
    "tool description": "Retrieves a list of active weather alerts by geographical area in ATOM format, which returns items in CAP-ATOM standard. This endpoint leverages the National Weather Service API (api.weather.gov) maintained by NOAA (National Oceanic and Atmospheric Administration), providing access to critical real-time weather warnings and alerts as part of their comprehensive national weather data service. The API delivers authoritative government-issued weather alerts to help users stay informed about potentially dangerous weather conditions in specified areas.",
    "required_parameters": [
      {
        "name": "area",
        "type": "STRING",
        "description": "area: a valid area, see list in counts endpoint",
        "default": "TX"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active/area/{area}\"\nquerystring = {\"area\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/alerts/active/area/{area}",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of active weather alerts for a specified U.S. geographical area. The output, structured as a GeoJSON FeatureCollection, contains one or more alerts, each detailing the event type (e.g., Winter Storm Warning, Dense Fog), severity, affected locations, and timing (onset, expiration). This real-time information from the National Weather Service is intended to inform users about potentially hazardous weather conditions.",
      "output_format": "The output is a single JSON object following the GeoJSON FeatureCollection structure. The core data is a list of alert \"features\" under the `features` key. Each feature's `properties` object contains detailed information about a specific alert. Some fields within an alert, such as `geometry` or the `ends` timestamp, can be null. If there are no active alerts, the `features` list will likely be empty."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "long",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/insider-transactions\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
    "tool description": "Retrieves historical insider transaction data for stocks. This endpoint is part of the Mboum Finance Official API, which provides comprehensive financial data including stocks, options, ETFs, mutual funds, SEC filings, news, and screeners. By accessing real-time SEC filings, it enables users to track insider trading activities, offering insights into corporate governance and potential market trends.",
    "API name": "stock/insider-transactions/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of historical insider transactions for a specified stock ticker. Each transaction in the list includes details about the insider, such as their name and relationship to the company, the transaction date, and the number of shares involved. The output also provides the total value of the transaction and a text description of the transaction type (e.g., sale, stock grant). This data is useful for monitoring the activities of corporate executives and directors.",
      "output_format": "The output is a single JSON object containing a `body` key. Inside `body`, there is a `transactions` key, which holds an array of transaction objects. Each transaction object contains nested objects for `shares`, `value`, and `startDate`, providing both raw and formatted representations of the data. Some fields, like `value.fmt` or `filerUrl`, can be null or empty."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the security of your choice. For example: symbol=MSFT"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: search",
        "connect params": [
          {
            "name": "symbol",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "flnr",
        "type": "STRING",
        "description": "The flight number to request",
        "default": "DL456"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/flight/search\"\nquerystring = {\"flnr\": flnr}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: flightSearch",
    "tool description": "Retrieves a list of flights for a specific flight number, with optional date filters to narrow results, ordered by departure date ascending, and includes the next departure time for pagination. This endpoint is part of Flightera's service, which provides flight status, on-time performance, and statistics. It leverages the parent tool's data to ensure accurate flight information retrieval, enforcing subscription-level date range restrictions to deliver reliable results.",
    "API name": "flightSearch",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output is a JSON object that provides information about flights. In a successful case, it is expected to return a list of flight data, including status and performance statistics, ordered by departure date. In an error case, such as when the requested date is outside the user's subscription limits, it returns a JSON object with an 'Error' key and a descriptive message.",
      "output_format": "The output is a JSON object. The provided examples only illustrate the error format, which consists of a single key 'Error' with a string value. Based on the description, a successful response would likely contain a list of flight objects and a 'next_departure_time' key for pagination."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          },
          {
            "name": "date",
            "description": "The date, if omitted the current flight will be returned"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          },
          {
            "name": "aptFrom",
            "description": "Departure airport ident"
          },
          {
            "name": "aptTo",
            "description": "Arrival airport ident"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Ident of the airport to request"
          },
          {
            "name": "time",
            "description": "Timestamp in UTC"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "latitude",
        "default": "28.0852473"
      },
      {
        "name": "lng",
        "type": "NUMBER",
        "description": "longitude",
        "default": "-16.7349705"
      },
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "index to start from",
        "default": "0"
      },
      {
        "name": "range",
        "type": "NUMBER",
        "description": "range in meters from latitude and longitude point",
        "default": "500"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/listingsByLatLng\"\nquerystring = {\"lat\": lat, \"lng\": lng, \"offset\": offset, \"bedrooms\": bedrooms, \"range\": range, \"maxGuestCapacity\": maxguestcapacity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Listings by lat lng",
    "tool description": "Retrieves 50 listing IDs, distances from a starting point, and last updated timestamps for prices, availability, and ratings within a geographical range, with filters for bedrooms and max guest capacity. This endpoint is part of a comprehensive Airbnb data platform accessed by over 300 users, leveraging daily-updated listings and analytics to provide actionable insights into accommodations, ensuring real-time accuracy for decision-making through structured data queries.",
    "API name": "Listings by lat lng",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of up to 50 Airbnb listings within a specified geographical area. For each listing, it provides a unique ID, the distance from the search coordinates, and timestamps indicating the last time its pricing, availability, and ratings data were updated. This allows users to identify nearby properties and gauge the recency of their data for further queries.",
      "output_format": "The output is a JSON object containing a `requestId` and a `results` key. The `results` key holds a JSON array of objects, where each object represents one Airbnb listing. There is no information or mechanism for pagination provided in the examples."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude as the source search"
          },
          {
            "name": "lng",
            "description": "Can use the same longitude as the source search"
          },
          {
            "name": "range",
            "description": "Can use the same range as the source search"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude as the source search"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude as the source search"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Stock Sentiment API",
    "parent tool description": "Real-time social sentiment API to track news activity related to a certain stock",
    "required_parameters": [
      {
        "name": "ticker",
        "type": "STRING",
        "description": "",
        "default": "TSLA"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://stock-sentiment-api.p.rapidapi.com/market_data/\"\nquerystring = {\"ticker\": ticker}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"stock-sentiment-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Stock Sentiment API: Market Data",
    "tool description": "Returns a list of daily stock metrics such as opening, closing, highest, and lowest prices. This endpoint is part of the Real-time social sentiment API, which tracks news activity related to a certain stock. It leverages financial data feeds to provide precise metrics, enabling users to analyze market trends and correlate price fluctuations with sentiment-driven news events.",
    "API name": "Market Data",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a list of historical daily stock metrics for a given stock. Each entry in the list corresponds to a specific day and includes the opening, high, low, and closing prices, as well as the adjusted close price and trading volume. This information is primarily used for analyzing historical market performance and identifying trends. In case of an error, the tool returns a JSON object with a descriptive message.",
      "output_format": "The successful output is a JSON object with a single key, \"daily_metrics\", which contains a JSON array of objects. Each object in the array represents the stock's metrics for a single day. The error response is a simple JSON object containing a \"message\" key."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Goverlytics",
    "parent tool description": "The Goverlytics API.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "",
        "default": ""
      },
      {
        "name": "active",
        "type": "BOOLEAN",
        "description": "",
        "default": ""
      },
      {
        "name": "province",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "municipality",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "level_of_government",
        "type": "ENUM",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://goverlytics1.p.rapidapi.com/politicians\"\nquerystring = {\"offset\": \"\", \"limit\": \"\", \"active\": \"\", \"province\": \"\", \"municipality\": \"\", \"level_of_government\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"goverlytics1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Goverlytics: politicians",
    "tool description": "Retrieves a list of politicians' data, including details like name, position, and affiliation. This endpoint is part of the Goverlytics API, which provides comprehensive political data and insights. It leverages a database of political figures and official records to deliver accurate, up-to-date information, enabling users to analyze political landscapes, track affiliations, and access detailed profiles efficiently.",
    "API name": "politicians",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool provides a list of politicians from various levels of government, including federal, provincial, and municipal. Each politician's record contains their name, role (e.g., Member of Parliament, Councillor), party affiliation, and contact information. The output also includes jurisdictional details like constituency, country, or municipality, along with a unique ID and a URL to their official profile.",
      "output_format": "The output is a JSON object with a top-level key `data` that contains an array of objects. Each object in the array represents a single politician. The fields within each politician object are not consistent across all records; some fields like `role`, `party`, `constituency`, `province`, `country`, and `phone` appear to be optional or context-dependent based on the politician's level of government."
    },
    "connected tools": [
      {
        "tool name": "Goverlytics: politician/{goverlytics_id}",
        "connect params": [
          {
            "name": "goverlytics_id",
            "description": "The unique ID of a politician from the politicians list"
          }
        ]
      },
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search for news about a specific politician by name"
          }
        ]
      },
      {
        "tool name": "Election2020 Smartable: GetPeople",
        "connect params": [
          {
            "name": "page",
            "description": "Page number for retrieving politicians data"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Search for movie news related to a politician"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Search for news about a specific politician by name"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: France24 Arabic",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0641\u0631\u0627\u0646\u0633 24 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0645\u0642\u062f\u0645\u0627\u064b \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0627\u0644\u0631\u0626\u064a\u0633\u064a\u0629 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0644\u0644\u0623\u062d\u062f\u0627\u062b \u0627\u0644\u062c\u0627\u0631\u064a\u0629. \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0631 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 \u0623\u0634\u0645\u0644 \u062a\u062c\u0645\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0625\u0646 \u0625\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627\u060c \u062d\u064a\u062b \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u062a\u063a\u0637\u064a\u0627\u062a \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/france24arabic\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "France24 Arabic",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool retrieves a list of the most recent news articles from the France24 Arabic service. For each article, it provides the headline, a direct URL to the full story, the main source URL, and a set of image links corresponding to different resolutions. This allows users to get a quick overview of current events from this specific news source and access the articles directly.",
      "output_format": "The output is a JSON object containing a single key, \"results\". The value of this key is an array of objects, where each object represents a news article. Each article object includes the keys \"source\", \"title\", \"url\", and \"image\". The \"image\" field's value is a single string containing a space-separated list of URLs, similar to an HTML `srcset` attribute, providing different sizes for the same image."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use article titles from France24 Arabic as search terms for business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related article titles from France24 Arabic as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use article titles or key terms from France24 Arabic articles as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "tool name": "World Weather Online API: Search API",
    "tool description": "Searches for location information based on a query string, returning details such as area name, country, latitude/longitude coordinates, population data, and a URL for weather information. This endpoint is part of a comprehensive Weather and Geo API service that provides worldwide location data alongside various weather forecasts (hourly, 14-day, historical, Marine, and Ski) for developers and businesses, available in both XML and JSON formats.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "london"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/search.ashx\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Search API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographic locations matching a search query. For each location, it provides the area name, country, region, latitude/longitude coordinates, and population count. It also includes a specific URL for each result to retrieve detailed weather information, indicating this API is a preliminary step for location disambiguation before fetching weather data.",
      "output_format": "The output is an XML string. The root element, `<search_api>`, contains a series of `<result>` elements, effectively forming a list of locations. Each `<result>` element is a flat structure containing specific details about a location. Textual data within tags like `<areaName>`, `<country>`, and `<region>` is enclosed in CDATA blocks."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: find_places",
        "connect params": [
          {
            "name": "text",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude or city name from search results"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name from search results"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude or city name from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude or city name from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from search results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Realtime Crypto Prices",
    "parent tool description": "Get the Fastest and Realtime Crypto Rates and more...",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "",
        "default": "BTC"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://realtime-crypto-prices.p.rapidapi.com/volume\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"realtime-crypto-prices.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Realtime Crypto Prices: Get Realtime Volume",
    "tool description": "Returns the real-time volume of a specific cryptocurrency in US Dollars. This endpoint leverages the parent tool's capability to deliver fast and real-time crypto rates, utilizing live blockchain data feeds and market analytics to provide accurate volume metrics. It enables users to track active trading volumes instantly, supporting informed decision-making in dynamic cryptocurrency markets.",
    "API name": "Get Realtime Volume",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides the real-time trading volume for a specific cryptocurrency. It includes the standard ticker symbol for the asset, the raw volume as a numerical value in US Dollars, and a formatted, human-readable string of the same volume with currency and magnitude indicators (e.g., 'B' for billions, 'M' for millions). This information is intended to help users quickly assess the current market activity and liquidity of a cryptocurrency.",
      "output_format": "The output is a single, flat JSON object. It is not an array, so pagination is not relevant. The object contains three key-value pairs, and based on the examples, all fields are likely non-nullable in a successful response."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: DIGITAL_CURRENCY_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The digital/crypto currency of your choice. It can be any of the currencies in the digital currency list. For example: symbol=BTC."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: CURRENCY_EXCHANGE_RATE (Crypto)",
        "connect params": [
          {
            "name": "from_currency",
            "description": "The cryptocurrency you want to convert from"
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Liquidity Value",
        "connect params": [
          {
            "name": "symbol",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Market Capitalization",
        "connect params": [
          {
            "name": "symbol",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Realtime Rates",
        "connect params": [
          {
            "name": "symbol",
            "description": "Crypto coin symbol"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Cryptocurrencies List",
        "connect params": [
          {
            "name": "currency_base",
            "description": "Filter by currency base"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_trendmode\"\nquerystring = {\"symbol\": \"AAPL\", \"interval\": \"1min\", \"series_type\": \"close\", \"format\": \"json\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: HT_TRENDMODE",
    "tool description": "Analyzes financial data to identify trend and cycle components using Hilbert Transform techniques. This endpoint leverages the Financial Data API's real-time and historical market data (stocks, forex, crypto, ETFs, indices) to apply advanced signal processing methods described in 'Rocket Science for Traders' by John F. Ehlers, enabling traders to distinguish underlying market trends from cyclical patterns for more informed decision-making.",
    "API name": "HT_TRENDMODE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a time-series analysis for a specified financial instrument using the Hilbert Transform Trend Mode (HT_TRENDMODE) indicator. For each time interval, the output indicates whether the market is in a \"trend mode\" (represented by the string '1') or a \"cycle mode\" (represented by the string '0'). This information is intended to help traders distinguish between directional market movements and cyclical patterns.",
      "output_format": "The output is a single JSON object with two top-level keys: 'meta' and 'values'. The 'meta' object contains metadata about the financial symbol and the analysis performed. The 'values' key holds a JSON array of objects, where each object represents a data point containing a 'datetime' and the corresponding 'ht_trendmode' string value. The array is sorted in reverse chronological order."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_SINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_PHASOR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPERIOD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPHASE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the same symbol from HT_TRENDMODE output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Foreca Weather",
    "parent tool description": "Everything you need to build a weather app",
    "tool name": "Foreca Weather: Location search",
    "tool description": "Searches for locations by name, allowing you to find specific places for weather information. This endpoint is part of a comprehensive weather service that provides all the essential data and functionality needed to build a complete weather application, including location search capabilities that serve as the foundation for retrieving accurate, location-specific weather forecasts.",
    "required_parameters": [
      {
        "name": "query",
        "type": "string",
        "description": "",
        "default": "mumbai"
      }
    ],
    "optional_parameters": [
      {
        "name": "lang",
        "type": "STRING",
        "description": "",
        "default": "en"
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "",
        "default": "in"
      }
    ],
    "code": "import requests\n\nurl = \"https://foreca-weather.p.rapidapi.com/location/search/{query}\"\nquerystring = {\"lang\": lang, \"country\": country}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"foreca-weather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Location search",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a list of locations that match a given search query. These examples specifically show the result of an unsuccessful search, where no matching locations were found, indicated by an empty 'locations' array. A successful search would presumably populate this array with location objects, which could then be used to retrieve weather forecasts for a specific place.",
      "output_format": "The output is a JSON object with a single key, \"locations\". The value of this key is a JSON array. In the provided examples, this array is empty, which likely signifies that no results were found for the search query."
    },
    "connected tools": [
      {
        "tool name": "Foreca Weather: Nowcast",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Daily",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Latest observations",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Current",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Hourly",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Bybit",
    "parent tool description": "Public Data Bybit. Cryptocurrency prices and charts. Derivatives, Futures, Spot, USDC Contract",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Kline interval. enum: 1 3 5 15 30 60 120 240 360 720 \\\\\\\\\\\\\\\"D\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"M\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"W\\\\\\\\\\\\\\\" ",
        "default": "D"
      },
      {
        "name": "start",
        "type": "NUMBER",
        "description": "Start timestamp point for result, in milliseconds",
        "default": "1652112000000"
      },
      {
        "name": "category",
        "type": "STRING",
        "description": "Derivatives products category.For now, *linear inverse* are available",
        "default": "linear"
      },
      {
        "name": "end",
        "type": "NUMBER",
        "description": "End timestamp point for result, in milliseconds",
        "default": "1652544000000"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Symbol",
        "default": "BTCUSDT"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limit for data size per page, max size is 200. Default as showing 200 pieces of data per page",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://bybit4.p.rapidapi.com/derivatives/v3/public/funding/history-funding-rate\"\nquerystring = {\"interval\": interval, \"start\": start, \"category\": category, \"end\": end, \"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bybit4.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Bybit: Get Funding Rate History",
    "tool description": "Generates a funding rate based on the current time, retrieving the most recent rate from the scheduled 00:00, 08:00, or 16:00 UTC updates. This endpoint is part of Bybit's Public Data service, which provides cryptocurrency price data, charts, and derivatives information including futures, spot markets, and USDC contracts, enabling users to monitor real-time market conditions and leverage structured financial products.",
    "API name": "Get Funding Rate History",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The output provides the most recent funding rate for a cryptocurrency derivative on the Bybit exchange. This rate is retrieved from the latest scheduled update (occurring at 00:00, 08:00, or 16:00 UTC). This information is used by traders to understand the cost of holding perpetual futures positions and to monitor market conditions.",
      "output_format": "The format is unknown as the provided examples are empty strings. A financial data API would typically return a JSON object containing the funding rate and an associated timestamp, but this cannot be confirmed. Details regarding serialization, nesting, or nullability are unavailable."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "series_type",
            "description": "The funding rate could be used as a custom price series input for technical analysis"
          }
        ]
      },
      {
        "tool name": "Bybit: Get Open Interest",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the funding rate data can be used to query the same asset's open interest"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CORREL",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the funding rate can be used to analyze correlation between funding rates and price"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the funding rate can be used to get price data for the same asset"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Emisora Radio Dosis",
    "parent tool description": "Emisora Radio Dosis",
    "tool name": "Emisora Radio Dosis: Radio Dosis Mix",
    "tool description": "Streams a continuous 24/7 mix of music from Emisora Radio Dosis. This radio station provides round-the-clock mixed music programming, offering listeners uninterrupted access to Radio Dosis's broadcast content whenever they want to tune in.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://emisora-radio-dosis.p.rapidapi.com/yzums7zw4k8uv\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"emisora-radio-dosis.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Radio Dosis Mix",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool output is a raw binary data stream representing a continuous 24/7 music mix from the radio station Emisora Radio Dosis. This data is not human-readable and is intended to be processed by an audio client or player to listen to the live broadcast. The content is an uninterrupted flow of audio data without any accompanying metadata.",
      "output_format": "The output is a continuous raw binary stream of audio data. It is not a structured text format like JSON or XML. The provided examples are string representations of chunks of this binary data, which is why they appear as garbled text with various escape sequences."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "ident",
        "type": "STRING",
        "description": "The ident of the airport (e.g. as returned by /airport/search)",
        "default": "KSFO"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airport/metar\"\nquerystring = {\"ident\": ident}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airportMetar",
    "tool description": "Retrieves the latest METAR weather data for a specified airport using its identifier, including a parsed version of the report. This endpoint is part of Flightera's flight status and on-time performance services, providing critical aviation weather insights to support flight planning and decision-making. The METAR data is sourced from real-time aviation weather feeds, offering detailed conditions like visibility, wind, and precipitation to enhance operational accuracy and safety.",
    "API name": "airportMetar",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a detailed meteorological aerodrome report (METAR) for a specific airport. The output includes the raw METAR string as well as a parsed JSON object breaking down the weather conditions. This includes information on wind, visibility, temperature, dew point, cloud cover, and atmospheric pressure, which is critical for flight planning and operational safety.",
      "output_format": "The output is a single JSON object. It contains two nested arrays of objects: `weather_elements` and `clouds`. In the provided examples, the `weather_elements` array is empty, indicating it may be null or empty when no specific weather events are reported. The `clouds` array contains objects detailing cloud coverage and altitude."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "The IATA code of the airport could be extracted from the METAR data source airport identifier"
          },
          {
            "name": "icao",
            "description": "The ICAO code of the airport could be extracted from the METAR data source airport identifier"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Airport identifier from METAR data can be used to retrieve flights for this airport"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Airport location from METAR data can be used as a trip destination"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minus_di\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MINUS_DI",
    "tool description": "Calculates the Minus Directional Indicator (MINUS_DI) to assess downtrend strength within the Average Directional Index (ADX) framework. This endpoint leverages real-time and historical financial data on stocks, forex, crypto, ETFs, and indices provided by the API, offering developers insights into market momentum. By analyzing directional movement, it helps traders identify and quantify downtrends, enhancing strategic decision-making in dynamic market conditions.",
    "API name": "MINUS_DI",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a time-series of Minus Directional Indicator (MINUS_DI) values for a given financial instrument. The output is a JSON object containing metadata about the request (like the symbol, interval, and instrument type) and a list of data points. Each data point includes a datetime and the corresponding MINUS_DI value, which is used to measure the strength of a market downtrend.",
      "output_format": "The top-level structure is a JSON object with two keys: 'meta' and 'values'. The 'meta' key contains a nested object with metadata about the query. The 'values' key contains a JSON array of objects, where each object represents a single time-series data point. The MINUS_DI value is returned as a string, not a numeric type. The examples appear to be truncated."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADXR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: PLUS_DI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DX",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CORREL",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BETA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DIV",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MULT",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUB",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINUS_DI meta data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "50K Radio Stations",
    "parent tool description": "More than 60,000 radio stations from different countries and various genres",
    "tool name": "50K Radio Stations: Get Countries",
    "tool description": "Retrieves a comprehensive list of countries that have radio stations available in the system. This endpoint connects you to a vast database of more than 60,000 radio stations spanning across numerous countries worldwide and covering various music genres and broadcast formats. The country list serves as an entry point for exploring the extensive international radio collection, allowing users to subsequently browse stations by their geographic origin.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "Use this parameter to filter cities by keyword or set empty if you don't want to use it ",
        "default": "Indonesia"
      }
    ],
    "code": "import requests\n\nurl = \"https://50k-radio-stations.p.rapidapi.com/get/countries\"\nquerystring = {\"keyword\": \"Indonesia\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"50k-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get Countries",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The output is a list of countries that have available radio stations. Each country in the list is represented as an object containing a unique integer 'id' and its string 'name'. This list can be used to identify countries for subsequent queries, such as searching for stations within a specific geographic region.",
      "output_format": "The tool returns a JSON object with a top-level key 'data' which contains an array of country objects. The root object also includes metadata: a boolean 'success' flag, a boolean 'has_next' for pagination, and an integer 'total' which likely indicates the number of items in the current response."
    },
    "connected tools": [
      {
        "tool name": "50K Radio Stations: Get Cities",
        "connect params": [
          {
            "name": "country_id",
            "description": "Use this parameter to filter cities by country id or set empty if you don't want to use it"
          }
        ]
      },
      {
        "tool name": "50K Radio Stations: Get Channels",
        "connect params": [
          {
            "name": "country_id",
            "description": "Use this parameter to filter cities by country id or set empty if you don't want to use it"
          }
        ]
      },
      {
        "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: getStationByCountry",
        "connect params": [
          {
            "name": "country_id",
            "description": "Country ID* to fetch stations (default: 26 (USA))"
          }
        ]
      },
      {
        "tool name": "Spotify _v2: New releases",
        "connect params": [
          {
            "name": "country",
            "description": "Enter country code like: US, CA, SE, IN, UK..."
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Trends",
        "connect params": [
          {
            "name": "country",
            "description": "ISO 3166-1 Alpha-2 country code. Default: ZZ = Global https://www.iban.com/country-codes"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "tool name": "meteostat: Daily Station Data",
    "tool description": "Retrieves historical daily weather statistics for a specific weather station, delivering aggregated meteorological data from multiple governmental interfaces. This endpoint is part of the Historical Weather & Climate Data API, which provides comprehensive access to past weather conditions and climate records, enabling analysis of weather patterns and trends over time.",
    "required_parameters": [
      {
        "name": "start",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The start date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      },
      {
        "name": "station",
        "type": "STRING",
        "description": "The Meteostat weather station identifier.",
        "default": "10637"
      },
      {
        "name": "end",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The end date of the period (YYYY-MM-DD).",
        "default": "2020-01-31"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      },
      {
        "name": "model",
        "type": "BOOLEAN",
        "description": "A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default is *true*.",
        "default": ""
      },
      {
        "name": "freq",
        "type": "STRING",
        "description": "The time frequency of the records. Can be used for custom aggregation. Default is *null*.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/stations/daily\"\nquerystring = {\"start\": start, \"station\": station, \"end\": end}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Daily Station Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides historical daily weather statistics for a specified weather station. It returns a time-series of data where each entry represents a single day and includes metrics like average, minimum, and maximum temperature, precipitation, snow depth, wind speed, atmospheric pressure, and total sun duration. This information is intended for analyzing past weather patterns and climate trends.",
      "output_format": "The output is a JSON object containing a `meta` object with generation details and a `data` key. The `data` key holds a JSON array of objects, where each object corresponds to a day's weather record. Fields such as `snow`, `wdir` (wind direction), `wpgt` (wind peak gust), and `tsun` (sun duration) can be null, indicating that the data is not available for that day."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "date",
            "description": "Can use dates from the source tool's time series data"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the same station ID from the source tool"
          },
          {
            "name": "start",
            "description": "Can use dates from the source tool's time series data"
          },
          {
            "name": "end",
            "description": "Can use dates from the source tool's time series data"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Meta Data",
        "connect params": [
          {
            "name": "id",
            "description": "Can use the same station ID from the source tool"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Climate Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the same station ID from the source tool"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the same station ID from the source tool"
          },
          {
            "name": "start",
            "description": "Can use dates from the source tool's time series data"
          },
          {
            "name": "end",
            "description": "Can use dates from the source tool's time series data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "dt",
            "description": "Can use dates from the source tool's time series data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "percent_rank_period",
        "type": "NUMBER",
        "description": "",
        "default": 100
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "rsi_period",
        "type": "NUMBER",
        "description": "",
        "default": 3
      },
      {
        "name": "up_down_length",
        "type": "NUMBER",
        "description": "",
        "default": 2
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/crsi\"\nquerystring = {\"percent_rank_period\": 100, \"outputsize\": 30, \"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"rsi_period\": 3, \"up_down_length\": 2}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: CRSI",
    "tool description": "Generates overbought and oversold signals based on RSI values for financial assets. This endpoint is part of the Financial Data API, which provides real-time and historical data on stocks, forex, crypto, ETFs, and indices. It leverages technical analysis to help traders identify potential market entry and exit points.",
    "API name": "CRSI",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time-series data for the ConnorsRSI (CRSI) technical indicator for a specified financial asset, such as a stock, forex pair, or cryptocurrency. The output consists of metadata describing the asset and indicator parameters, along with a list of historical CRSI values and their corresponding datetimes. This information is intended to help traders identify potentially overbought (high CRSI) or oversold (low CRSI) market conditions to inform trading strategies.",
      "output_format": "The top-level response is a JSON object containing two keys: `meta` (an object) and `values` (an array). The `values` array contains a list of JSON objects, each representing a data point in the time series. Each data point object includes a `datetime` (string) and a `crsi` value (string-encoded number). The format of the `datetime` string depends on the time interval specified (e.g., `YYYY-MM-DD` for daily, `YYYY-MM-DD HH:MM:SS` for hourly). The provided examples are truncated, suggesting the full list of values might be longer, although no pagination mechanism is shown."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CRSI output contains asset symbol information that can be used to analyze the same asset with other technical indicators"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI metadata can be used to fetch time series data for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to compare with standard RSI values for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCHRSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to analyze the same asset with Stochastic RSI for additional confirmation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to analyze momentum with MACD for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to analyze volatility with Bollinger Bands for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to identify trend direction with SuperTrend for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to measure trend strength with ADX for the same asset"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to get detailed company profile information"
          }
        ]
      }
    ]
  }
]