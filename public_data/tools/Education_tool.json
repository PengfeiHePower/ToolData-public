[
  {
    "parent tool name": "dcj9",
    "parent tool description": "dcj9-unh",
    "tool name": "dcj9: dcj9_test",
    "tool description": "Insufficient information provided. Both the tool description ('test') and parent tool description ('dcj9-unh') lack substantive content about the tool's functionality, purpose, or usage patterns needed to create a meaningful fused description.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "get_test",
        "type": "STRING",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://dcj9.p.rapidapi.com/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dcj9.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "dcj9_test",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "This tool outputs the HTML source code for a static web page. The content of the page appears to be a fixed template, featuring placeholder text like \"DATASCIENCE Title Here\", headers, an image, and a mailto link. Given the tool's name, 'dcj9_test', the output is likely intended for testing purposes, such as verifying HTML rendering or basic web service functionality.",
      "output_format": "The output is a single string containing standard HTML markup. All provided examples are identical, which suggests the tool consistently returns the same static content without variation."
    },
    "connected tools": []
  },
  {
    "parent tool name": "DEI",
    "parent tool description": "The Diversity, Equity, and Inclusion (DEI) API offers the learning resources, conferences, stories and other information.",
    "tool name": "DEI: GetPeople",
    "tool description": "Retrieves a list of influential figures in the Diversity, Equity, and Inclusion (DEI) space. This endpoint leverages a comprehensive database that offers learning resources, conferences, personal stories, and other DEI-related information, allowing users to discover thought leaders and advocates who are making significant contributions to diversity, equity, and inclusion initiatives across various sectors.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dei2.p.rapidapi.com/people/page/{page}/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dei2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "GetPeople",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "This tool retrieves a list of influential figures in the Diversity, Equity, and Inclusion (DEI) field. The output contains detailed profiles for each person, including their name, biography, professional affiliation, location, website, social media links, and associated topics of expertise. This information is intended to help users discover and learn about key thought leaders and advocates in the DEI community.",
      "output_format": "The successful output is a single JSON object containing a 'value' key, which holds an array of individual profiles. Each profile is a nested JSON object. The top-level object also contains metadata like a 'page' number, which suggests the results are paginated. However, in an error state (e.g., 'Page not found'), the tool returns an unstructured HTML document instead of a JSON object."
    },
    "connected tools": [
      {
        "tool name": "TED Talks API: getTalks",
        "connect params": [
          {
            "name": "speaker",
            "description": "The names of influential DEI figures from GetPeople output could be used to find their TED talks"
          },
          {
            "name": "topic",
            "description": "The topics of expertise from DEI: GetPeople output can be used to find related TED talks"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "DEI",
    "parent tool description": "The Diversity, Equity, and Inclusion (DEI) API offers the learning resources, conferences, stories and other information.",
    "tool name": "DEI: GetSamples",
    "tool description": "Retrieves success stories related to Diversity, Equity, and Inclusion (DEI) initiatives. This endpoint provides access to a collection of real-world examples and case studies showcasing successful DEI implementations, drawing from a comprehensive database of learning resources, conferences, and informational content focused on promoting diversity, equity, and inclusion across organizations and industries.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dei2.p.rapidapi.com/samples/page/{page}/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dei2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "GetSamples",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool provides a paginated list of success stories, case studies, and other content related to Diversity, Equity, and Inclusion (DEI). Each entry includes a title, excerpt, publication date, media type (e.g., video), and various URLs (source, web, original). This information is designed to offer real-world examples of successful DEI implementations from different providers like TIME and Fortune.",
      "output_format": "The successful output is a JSON object. This object contains a `value` key, which holds an array of sample objects. The response supports pagination, indicated by a top-level `page` key. In case of an error or if a resource is not found, the tool can return an HTML 404 error page instead of a JSON object."
    },
    "connected tools": []
  },
  {
    "parent tool name": "DEI",
    "parent tool description": "The Diversity, Equity, and Inclusion (DEI) API offers the learning resources, conferences, stories and other information.",
    "tool name": "DEI: GetLearningResources",
    "tool description": "Retrieves diversity, equity, and inclusion (DEI) learning resources for professional development and education. This endpoint connects to a comprehensive DEI API that provides access to curated educational materials, training content, conferences, personal stories, and other informational resources designed to enhance understanding and implementation of inclusive practices in organizations and communities.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dei2.p.rapidapi.com/learning/page/{page}/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dei2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "GetLearningResources",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a paginated list of Diversity, Equity, and Inclusion (DEI) learning resources. Each resource includes a title, excerpt, type (e.g., article, video), and links to the content. This information is designed to help users discover and access educational materials for professional development and understanding of DEI topics.",
      "output_format": "The output is a JSON object with a 'value' key, which contains an array of resource objects. The response is paginated, with a top-level 'page' key indicating the current page number. Individual resource objects contain nested objects for 'provider' and an array for 'images'. Some fields, such as 'originalUrl' or 'price', may be nullable or absent depending on the specific resource."
    },
    "connected tools": [
      {
        "tool name": "TED Talks API: getTalks",
        "connect params": [
          {
            "param_name": "topic",
            "description": "DEI topics from resources could be used to find related TED talks"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dictionary",
    "parent tool description": "Dictionaries API gives you access to our world-renowned dictionary data, including definitions, translations, synonyms, and audio pronunciations.",
    "tool name": "Dictionary: wordSearchTurkish",
    "tool description": "Retrieves the meaning of Turkish words from an authoritative dictionary. This service uses the comprehensive Dictionaries API, which provides access to world-renowned dictionary data, allowing you to look up not only definitions but also translations, synonyms, and audio pronunciations of Turkish terms.",
    "required_parameters": [
      {
        "name": "query",
        "type": "STRING",
        "description": "Enter word",
        "default": "kalem"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dictionary35.p.rapidapi.com/wordSearchTurkish\"\nquerystring = {\"query\": query}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dictionary35.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "wordSearchTurkish",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "Provides dictionary information for Turkish words. For a successful query, the output returns a list of one or more meanings for the searched term. Each meaning includes a Turkish definition ('anlam'), part of speech ('ozellik'), and may include usage examples ('ornek') with author attribution. In case of an error, such as an invalid API key, the output provides an error message.",
      "output_format": "The output is a JSON object. A top-level boolean key 'success' dictates the response structure. If true, a 'result' key contains an array of dictionary entries. Each entry is a deeply nested object where an array named 'kelime' holds the different meanings. The 'ornek' (examples) and 'ozellik' (properties) fields are arrays and can be empty. If 'success' is false, the object contains a 'message' key with an error string."
    },
    "connected tools": [
      {
        "tool name": "Urban Dictionary: Define a Word / Search",
        "connect params": [
          {
            "param_name": "term",
            "description": "The Turkish word could be searched in Urban Dictionary for slang or colloquial meanings"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Dr Almotawa Quotes",
    "parent tool description": "This API provides above 40000 Arabic quotes by Dr Abdulaziz Almotawa.",
    "tool name": "Dr Almotawa Quotes: Get random quote",
    "tool description": "Returns a random quote from a collection of over 40,000 Arabic quotes by Dr. Abdulaziz Almotawa. This API gives access to a comprehensive database of wisdom and insights from the renowned author, providing users with inspirational and thought-provoking content from Arabic literature and philosophy.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "This parameter is to get a quote with characters length less than the number specified",
        "default": "50"
      }
    ],
    "code": "import requests\n\nurl = \"https://dr-almotawa-quotes.p.rapidapi.com/getRandomQuote\"\nquerystring = {\"limit\": limit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dr-almotawa-quotes.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get random quote",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a single, random Arabic quote from Dr. Abdulaziz Almotawa. The output provides the text of the quote, its unique identifier, and a list of its associated categories. This information is intended to provide users with inspirational or thought-provoking content.",
      "output_format": "The output is a JSON object. It contains a 'status' key and a nested 'wisdom' object. The 'wisdom' object holds the quote's details: a numeric 'id', the string 'text' of the quote, and a 'categories' field which is an array of strings."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Drillster 2.0",
    "parent tool description": "Drillster is an open cloud based memorization platform that helps users learn more in less time. Use our API to integrate with Drillster or to create your own memorization solution.\r\n\r\nFor detailed information about this API, please refer to http://www.drillster.com/info/api-2/.",
    "tool name": "Drillster 2.0: Retrieve drill details",
    "tool description": "Retrieves specific drill or course details from Drillster's system. This uses Drillster's open cloud-based memorization platform, which is designed to help users learn more efficiently in less time. The API allows for seamless integration with Drillster's adaptive learning technology, enabling access to educational content and learning resources that can be incorporated into custom memorization solutions.",
    "required_parameters": [
      {
        "name": "drill_id",
        "type": "STRING",
        "description": "The drill or course ID",
        "default": "aD1yumG1SUyhyr3_SspN8w"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://drillster2.p.rapidapi.com/drill/aD1yumG1SUyhyr3_SspN8w\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"drillster2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Retrieve drill details",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns detailed information for a specific educational drill or course. A successful output contains a comprehensive set of metadata, including the drill's ID, name, subject, description, and size. It also provides rich, nested objects with details about the creator, owner, licensing, and associated media like icons and cover images. In case of an error, it returns a simple object with a descriptive message.",
      "output_format": "The output is a single JSON object. For a successful query, this object is deeply nested, containing various data types like strings, integers, arrays of objects (e.g., 'tags'), and other nested objects (e.g., 'creator', 'license'). Error responses are a simple JSON object, typically with a single 'message' key."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Helioviewer v1",
    "parent tool description": "Helioviewer is an open-source project for the visualization of solar and heliospheric data, funded by ESA and NASA.",
    "tool name": "Helioviewer v1: getDataSources",
    "tool description": "Returns a hierarchical list of available solar and heliospheric data sources, with an optional 'verbose' parameter for compatibility with JHelioviewer that outputs the list in an alternative format and limits results to known sets (SDO and SOHO). This endpoint leverages Helioviewer's open-source visualization platform, funded by ESA and NASA, which provides comprehensive solar and heliospheric data visualization capabilities. New data sources can be explicitly included using the optional 'enable' parameter, ensuring JHelioviewer operates properly without requiring client-side upgrades.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "verbose",
        "type": "BOOLEAN",
        "description": "",
        "default": ""
      },
      {
        "name": "enable",
        "type": "STRING",
        "description": "Comma-separated list of observatories to enable.",
        "default": "[Yohkoh,STEREO_A,STEREO_B]"
      },
      {
        "name": "callback",
        "type": "STRING",
        "description": "Wrap the response object in a function call of your choosing.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://helioviewer-v1.p.rapidapi.com/api/v1/getDataSources/\"\nquerystring = {\"verbose\": \"\", \"enable\": \"[Yohkoh,STEREO_A,STEREO_B]\", \"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"helioviewer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "getDataSources",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool provides a hierarchical catalog of available solar and heliospheric data sources. The output is structured as a nested dictionary, categorized by observatory, instrument, and specific measurement. Each individual data source entry contains details such as its unique `sourceId`, a human-readable `nickname`, and the start and end dates of data availability, which is useful for discovering what data can be requested from the service.",
      "output_format": "The output is a single, non-paginated JSON object. The structure is deeply nested, with keys at each level representing a different category (e.g., observatory, instrument). The final leaf in the hierarchy is an object containing the metadata for that specific data source. The tool's description notes that the output format and content can change if the optional 'verbose' parameter is used."
    },
    "connected tools": [
      {
        "tool name": "Helioviewer v1: getJP2Image",
        "connect params": [
          {
            "param_name": "sourceId",
            "description": "The Helioviewer getDataSources output provides sourceId values that can be directly used to specify image data sources in getJP2Image"
          },
          {
            "param_name": "observatory",
            "description": "The getDataSources output contains observatory names that can be used to specify the observatory parameter"
          },
          {
            "param_name": "instrument",
            "description": "The getDataSources output contains instrument names that can be used to specify the instrument parameter"
          },
          {
            "param_name": "detector",
            "description": "The getDataSources output contains detector information that can be used to specify the detector parameter"
          },
          {
            "param_name": "measurement",
            "description": "The getDataSources output contains measurement information that can be used to specify the measurement parameter"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Helioviewer v1",
    "parent tool description": "Helioviewer is an open-source project for the visualization of solar and heliospheric data, funded by ESA and NASA.",
    "tool name": "Helioviewer v1: getNewsFeed",
    "tool description": "Retrieves the XML RSS feed of the official Helioviewer Project Blog, providing access to the latest news, updates, and information from this open-source solar visualization platform. This endpoint connects you to content from the Helioviewer Project, which is funded by ESA and NASA to enable visualization of solar and heliospheric data, allowing researchers and space weather enthusiasts to stay current with developments in solar observation technology and findings.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "callback",
        "type": "STRING",
        "description": "Wrap the response object in a function call of your choosing.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://helioviewer-v1.p.rapidapi.com/api/v1/getNewsFeed/\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"helioviewer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "getNewsFeed",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns an Atom XML feed from the Helioviewer Project's official blog. This feed contains the latest news, updates, and announcements, such as information about service status and new features. Each entry in the feed includes the post's title, publication date, author, a summary, and the full content, making it useful for tracking project developments and staying informed about solar observation technology.",
      "output_format": "The output is a single string containing an XML document that follows the Atom feed standard. The root `<feed>` element contains metadata and one or more `<entry>` elements, each representing a blog post. The content of the posts is embedded as HTML within a CDATA section."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Helioviewer v1",
    "parent tool description": "Helioviewer is an open-source project for the visualization of solar and heliospheric data, funded by ESA and NASA.",
    "tool name": "Helioviewer v1: getUserVideos",
    "tool description": "Retrieves a chronological listing of the most recent user-generated movies that have been publicly shared to YouTube, with results limited by the requested or default value of the `num` parameter (and potentially truncated when reaching the specified `since` date). This endpoint is part of Helioviewer, an open-source project funded by ESA and NASA that specializes in the visualization of solar and heliospheric data, allowing users to access community-created content related to solar observations and space weather phenomena.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "num",
        "type": "NUMBER",
        "description": "Number of shared user-generated movies to include in the response.  Default is 10.",
        "default": "10"
      },
      {
        "name": "since",
        "type": "STRING",
        "description": "Optionally truncate result set if this date/time is reached.  ISO 8601 combined UTC date and time UTC format.",
        "default": ""
      },
      {
        "name": "force",
        "type": "BOOLEAN",
        "description": "Optionally bypass cache to retrieve most up-to-date data.",
        "default": ""
      },
      {
        "name": "callback",
        "type": "STRING",
        "description": "Wrap the response object in a function call of your choosing.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://helioviewer-v1.p.rapidapi.com/api/v1/getUserVideos/\"\nquerystring = {\"num\": \"10\", \"since\": \"\", \"force\": \"\", \"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"helioviewer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "getUserVideos",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool provides a list of recently created, user-generated videos about solar phenomena, which have been shared on YouTube. For each video, the output includes metadata such as the YouTube URL, title, publication date, and links to various thumbnail sizes. It also contains technical details specific to the solar data visualized, including the observation start and end times, data sources, image scale, and video dimensions.",
      "output_format": "The tool returns a JSON array, where each element is a JSON object that corresponds to a single video. Within each object, the `thumbnails` key contains a nested object with URLs for different image sizes. Several fields that represent numerical data, such as `movieLength`, `width`, and `height`, are formatted as strings. The list is chronological and its length can be limited by request parameters, but the output itself does not contain pagination cursors."
    },
    "connected tools": [
      {
        "tool name": "Helioviewer v1: getJP2Image",
        "connect params": [
          {
            "param_name": "date",
            "description": "Could use the observation start/end times from video metadata"
          },
          {
            "param_name": "sourceId",
            "description": "Could use the data source IDs from video metadata"
          },
          {
            "param_name": "observatory",
            "description": "Could use the observatory information from video metadata"
          },
          {
            "param_name": "instrument",
            "description": "Could use the instrument information from video metadata"
          },
          {
            "param_name": "detector",
            "description": "Could use the detector information from video metadata"
          },
          {
            "param_name": "measurement",
            "description": "Could use the measurement information from video metadata"
          }
        ]
      },
      {
        "tool name": "TED Talks API: getTalks",
        "connect params": [
          {
            "param_name": "id",
            "description": "Could extract YouTube video IDs from the video URLs"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Helioviewer v1",
    "parent tool description": "Helioviewer is an open-source project for the visualization of solar and heliospheric data, funded by ESA and NASA.",
    "tool name": "Helioviewer v1: getJP2Image",
    "tool description": "Downloads a JP2 image from a solar observation dataset that most closely matches your specified date, requiring either a sourceId parameter or a combination of observatory, instrument, detector, and measurement details. This endpoint is part of Helioviewer, an open-source project funded by ESA and NASA that specializes in the visualization of solar and heliospheric data, allowing researchers and space enthusiasts to access and analyze high-quality imagery of solar phenomena.",
    "required_parameters": [
      {
        "name": "date",
        "type": "STRING",
        "description": "Desired date/time of the JP2 image. ISO 8601 combined UTC date and time UTC format.",
        "default": "2014-01-01T23:59:59Z"
      }
    ],
    "optional_parameters": [
      {
        "name": "observatory",
        "type": "STRING",
        "description": "Observatory name.",
        "default": "SDO"
      },
      {
        "name": "instrument",
        "type": "STRING",
        "description": "Instrument name.",
        "default": "AIA"
      },
      {
        "name": "detector",
        "type": "STRING",
        "description": "Detector name.",
        "default": "AIA"
      },
      {
        "name": "measurement",
        "type": "STRING",
        "description": "Measurement name.",
        "default": "335"
      },
      {
        "name": "jpip",
        "type": "BOOLEAN",
        "description": "Optionally return a JPIP URI instead of the binary data of the image itself.",
        "default": ""
      },
      {
        "name": "json",
        "type": "BOOLEAN",
        "description": "Optionally return a JSON object.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://helioviewer-v1.p.rapidapi.com/api/v1/getJP2Image/\"\nquerystring = {\"date\": \"2014-01-01T23:59:59Z\", \"sourceId\": \"14\", \"observatory\": \"SDO\", \"instrument\": \"AIA\", \"detector\": \"AIA\", \"measurement\": \"335\", \"jpip\": \"\", \"json\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"helioviewer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "getJP2Image",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool's primary output is a JP2 image file, which contains solar observation data. This output is returned as binary data. In cases of error, such as providing an invalid date format, the tool returns an HTML document that includes a human-readable error message explaining what went wrong.",
      "output_format": "A successful response is raw binary data for a JP2 image, which may appear as an empty string in a text-based context. An error response is a structured HTML document."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Indonesia School List",
    "parent tool description": "This API provides School List in Indonesia by Province (Propinsi), City (Kabupaten), and District (Kecamatan).",
    "tool name": "Indonesia School List: List of School in Sub-Disctrict (Kecamatan)",
    "tool description": "Lists schools within a specific Sub-District (Kecamatan) in Indonesia, providing each school's NPSN and encrypted school ID (sekolah_id_enkrip) that can be used to look up detailed school information through other endpoints. This API offers comprehensive access to Indonesia's educational institutions organized hierarchically by Province (Propinsi), City (Kabupaten), and District (Kecamatan), allowing for systematic navigation through the country's school system.",
    "required_parameters": [
      {
        "name": "kode_wilayah_kecamatan_id",
        "type": "STRING",
        "description": "",
        "default": "056010"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://indonesia-school-list.p.rapidapi.com/sekolah_by_kode_kecamatan\"\nquerystring = {\"kode_wilayah_kecamatan_id\": kode_wilayah_kecamatan_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"indonesia-school-list.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "List of School in Sub-Disctrict (Kecamatan)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of schools within a specified Indonesian sub-district (Kecamatan). Each school entry provides identifying information such as its name, NPSN, education level, and location, as well as an encrypted school ID ('sekolah_id_enkrip'). This encrypted ID is intended to be used in other tools to retrieve more detailed school information.",
      "output_format": "The successful output is a JSON array of objects, where each object represents a school. Some string fields, like 'sekolah_id_enkrip', may contain significant trailing whitespace. In case of an API error, the tool returns a JSON object containing 'messages' and 'info' keys explaining the failure."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Indonesia School List",
    "parent tool description": "This API provides School List in Indonesia by Province (Propinsi), City (Kabupaten), and District (Kecamatan).",
    "tool name": "Indonesia School List: Number of Schools in Indonesia Sub-District (Kecamatan)",
    "tool description": "Retrieves the number of schools in a specified Indonesian Sub-District (Kecamatan) and returns the kode_wilayah identifier that can be used with other endpoints. This API is part of a comprehensive service that provides access to school listings throughout Indonesia, organized hierarchically by Province (Propinsi), City (Kabupaten), and District (Kecamatan). The returned kode_wilayah field is particularly valuable as it serves as a key identifier for accessing more detailed school information through the API's other endpoints.",
    "required_parameters": [
      {
        "name": "kode_wilayah_kabupaten_id",
        "type": "STRING",
        "description": "",
        "default": "056000"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://indonesia-school-list.p.rapidapi.com/sekolah_kecamatan_by_kode_kabupaten\"\nquerystring = {\"kode_wilayah_kabupaten_id\": kode_wilayah_kabupaten_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"indonesia-school-list.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Number of Schools in Indonesia Sub-District (Kecamatan)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Indonesian sub-districts (Kecamatan) with a statistical breakdown of schools within each. For each sub-district, the output details the number of schools by type (e.g., SD, SMP, SMA) and status (public vs. private). It also provides the parent province and city, and most importantly, a `kode_wilayah` identifier which is essential for making subsequent calls to other API endpoints for more detailed information.",
      "output_format": "The successful output is a JSON array of objects, where each object represents a sub-district. The `kode_wilayah` string values include significant trailing whitespace. In case of an API failure, the tool returns a stringified JSON object containing error messages."
    },
    "connected tools": [
      {
        "tool name": "Indonesia School List: List of School in Sub-Disctrict (Kecamatan)",
        "connect params": [
          {
            "name": "kode_wilayah_kecamatan_id",
            "description": "The source tool returns kode_wilayah identifiers for Indonesian sub-districts that can be directly used with this parameter"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Indonesia School List",
    "parent tool description": "This API provides School List in Indonesia by Province (Propinsi), City (Kabupaten), and District (Kecamatan).",
    "tool name": "Indonesia School List: Number of Schools in Indonesian City / District (Kabupaten / Kota)",
    "tool description": "Returns the number of schools in a specified Indonesian city or district (Kabupaten/Kota) along with the corresponding kode_wilayah identifier that can be used in other endpoints. This API is part of a comprehensive service that provides access to school listings throughout Indonesia, organized hierarchically by Province (Propinsi), City (Kabupaten), and District (Kecamatan), allowing users to navigate and retrieve educational institution data across the country's administrative divisions.",
    "required_parameters": [
      {
        "name": "kode_wilayah_propinsi_id",
        "type": "STRING",
        "description": "",
        "default": "050000"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://indonesia-school-list.p.rapidapi.com/sekolah_kabupaten_by_kode_propinsi\"\nquerystring = {\"kode_wilayah_propinsi_id\": kode_wilayah_propinsi_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"indonesia-school-list.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Number of Schools in Indonesian City / District (Kabupaten / Kota)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "This tool provides a list of Indonesian cities/districts (Kabupaten/Kota) and a detailed statistical breakdown of the number of educational institutions within each. For every location, it returns the total school count and specific counts for different school levels (e.g., 'sd', 'smp', 'sma') and types, further categorized into public ('_n' suffix) and private ('_s' suffix). The output also includes a `kode_wilayah` identifier for each city/district, which can be used as an input for other related tools.",
      "output_format": "The successful output is a JSON array of objects, where each object contains data for a single city or district. In case of an API failure, the tool returns a single JSON object with 'messages' and 'info' keys describing the error. The `kode_wilayah` field is a string that appears to have trailing spaces, which may be significant. Keys for school counts are abbreviations (e.g., 'sd' for Sekolah Dasar/Primary School)."
    },
    "connected tools": [
      {
        "tool name": "Indonesia School List: List of School in Sub-Disctrict (Kecamatan)",
        "connect params": [
          {
            "name": "kode_wilayah_kecamatan_id",
            "description": "The source tool provides kode_wilayah identifiers that can be used to retrieve schools in specific sub-districts"
          }
        ]
      },
      {
        "tool name": "Indonesia School List: Number of Schools in Indonesia Sub-District (Kecamatan)",
        "connect params": [
          {
            "name": "kode_wilayah_kabupaten_id",
            "description": "The source tool provides kode_wilayah identifiers that can be used to retrieve school counts in specific districts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Onyomi reading",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, allowing parameters to be combined as needed for customized searches. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, enabling detailed exploration and retrieval of Japanese writing system components.",
    "required_parameters": [
      {
        "name": "on",
        "type": "STRING",
        "description": "Katakana or romaji",
        "default": "\u30b7\u30f3"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"on\": on}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Onyomi reading",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese Kanji characters based on search criteria. For each Kanji in the list, the output provides the character itself and its stroke count, along with detailed information about its primary radical, including the radical's character, stroke count, and a standard order number. This information is intended to help users study and understand the structure of Kanji characters.",
      "output_format": "The top-level structure of the output is a JSON array. Each element in the array is an object containing two nested objects: 'kanji' and 'radical'. The 'kanji' object contains the character and its stroke count. The 'radical' object contains the radical's character, stroke count, and order. Some radical characters are represented using unicode escape sequences (e.g., '\\ue704')."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji English meaning",
        "connect params": [
          {
            "name": "kem",
            "description": "The Kanji output provides characters that could be used to look up their English meanings"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "The source tool provides stroke counts for Kanji characters which can be used to find other Kanji with the same stroke count"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical English meaning",
        "connect params": [
          {
            "name": "rem",
            "description": "The source tool provides radical information which can be used to find meanings of these radicals"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "The source tool provides radical stroke counts which can be used to find other radicals with the same stroke count"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Kunyomi reading",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, which can be combined as needed for more complex queries. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, allowing developers to build applications with comprehensive Japanese character information.",
    "required_parameters": [
      {
        "name": "kun",
        "type": "STRING",
        "description": "Hiragana or romaji",
        "default": "oya"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"kun\": kun}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Kunyomi reading",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The output is a list of objects, each providing structural information about a specific Japanese kanji character. For each kanji, the tool returns the character symbol, its total stroke count, and details about its primary radical. The radical information includes the radical's character, its stroke count, and an ordering number.",
      "output_format": "The tool returns a JSON array of objects. Each object in the array corresponds to a single kanji and contains two nested objects: 'kanji' and 'radical', which hold the specific details. The examples do not show any pagination or null values."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Onyomi reading",
        "connect params": [
          {
            "name": "on",
            "description": "Could use kanji character from the source output to find its Onyomi reading"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji English meaning",
        "connect params": [
          {
            "name": "kem",
            "description": "Could use kanji character from the source output to find its English meaning"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "Could directly use the stroke count information from the source output"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical English meaning",
        "connect params": [
          {
            "name": "rem",
            "description": "Could use the radical information from the source output to find its English meaning"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "Could directly use the radical stroke count from the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Kanji English meaning",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, which can be combined as needed for customized queries. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, allowing developers to build applications with rich Japanese language content.",
    "required_parameters": [
      {
        "name": "kem",
        "type": "STRING",
        "description": "Simplified English kanji meaning",
        "default": "parent"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"kem\": kem}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Kanji English meaning",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of objects, each detailing a Japanese Kanji character. The information for each entry includes the Kanji character and its stroke count, along with its associated radical character, the radical's stroke count, and its order number. This structured data is intended for use in applications that teach or display information about the components of Japanese Kanji.",
      "output_format": "The output is a JSON array of objects. Each object contains two nested objects: 'kanji' and 'radical'. The 'kanji' object contains 'character' (string) and 'stroke' (integer) keys. The 'radical' object contains 'character' (string), 'stroke' (integer), and 'order' (integer) keys. No null values are observed in the examples."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "param_name": "ks",
            "description": "Can use the stroke count from the Kanji information in the source output"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "param_name": "rs",
            "description": "Can use the radical stroke count from the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
    "tool description": "Provides access to individual Advanced Search URL parameters for testing purposes, allowing parameters to be combined as needed for customized queries. This endpoint is part of the Kanji alive free API, which offers CC-BY licensed Japanese language data including comprehensive information on kanji characters, radicals, and their associated media files through a web application interface.",
    "required_parameters": [
      {
        "name": "ks",
        "type": "NUMBER",
        "description": "Positive integer",
        "default": "16"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"ks\": ks}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Kanji stroke number",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji that match a specific stroke count. For each kanji, the output provides the character itself, its total stroke count, and detailed information about its primary radical, including the radical's character, stroke count, and an order number. This allows users to find and study kanji based on their complexity.",
      "output_format": "The output is a JSON array of objects. Each object in the array represents a single kanji and contains two nested objects: `kanji` and `radical`. The `kanji` object holds the character and its stroke count. The `radical` object contains the radical's character, its stroke count, and a numerical order. Some radical characters are represented by Private Use Area (PUA) Unicode codepoints (e.g., `\\ue748`). The list appears to be complete for a given query and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji English meaning",
        "connect params": [
          {
            "name": "kem",
            "description": "The kanji output contains characters that can be used to search for their English meanings"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Onyomi reading",
        "connect params": [
          {
            "name": "on",
            "description": "The kanji characters from the stroke count output can be used to find their Onyomi readings"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kunyomi reading",
        "connect params": [
          {
            "name": "kun",
            "description": "The kanji characters from the stroke count output can be used to find their Kunyomi readings"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical English meaning",
        "connect params": [
          {
            "name": "rem",
            "description": "The radical information from the kanji stroke count output can be used to search for radical meanings"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Radical English meaning",
    "tool description": "Provides access to individual Advanced Search URL parameters for testing purposes, allowing parameters to be combined as needed for customized queries. This endpoint is part of the free Kanji alive API, which offers comprehensive CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files through a web application interface.",
    "required_parameters": [
      {
        "name": "rem",
        "type": "STRING",
        "description": "Radical's meaning in English",
        "default": "see"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"rem\": rem}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Radical English meaning",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters that are associated with a specific radical. For each kanji found, the output provides the character and its total stroke count. It also includes detailed information about the kanji's primary radical, such as the radical's character, its stroke count, and an order identifier.",
      "output_format": "The output is a JSON array of objects. Each object contains two nested JSON objects: 'kanji' and 'radical'. The 'kanji' object details the specific character and its stroke count, while the 'radical' object provides information about the associated radical. Some radical characters are represented using private use area Unicode characters (e.g., '\\ue720')."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "The source tool provides stroke count information for kanji characters, which can be used to search for kanji with specific stroke counts"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "The source tool provides radical stroke count information, which can be used to search for kanji with radicals of specific stroke counts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Radical position",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, which can be combined as needed for more complex queries. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, allowing developers to build applications with comprehensive Japanese character information.",
    "required_parameters": [
      {
        "name": "rpos",
        "type": "STRING",
        "description": "Hiragana or romaji",
        "default": "hen"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"rpos\": rpos}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Radical position",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters. For each kanji, the output provides the character itself, its total stroke count, its primary radical character, the radical's stroke count, and a numerical identifier for the radical. This data is intended for applications that need to display or process detailed information about kanji and their components.",
      "output_format": "The output is a JSON array of objects. Each object in the array represents a single kanji and contains two nested objects: 'kanji' and 'radical'. The 'kanji' object holds the character and its stroke count. The 'radical' object contains the radical's character, stroke count, and an 'order' number. Some radical characters are represented using Unicode escape sequences (e.g., '\\ue759')."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "The source tool provides kanji stroke counts that can be used to search for kanji with specific stroke counts"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "The source tool provides radical stroke counts that can be used to search for kanji with radicals of specific stroke counts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, which can be combined as needed for more complex queries. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, allowing developers to build applications with comprehensive Japanese character information.",
    "required_parameters": [
      {
        "name": "rs",
        "type": "STRING",
        "description": "Positive integer",
        "default": "7"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"rs\": rs}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Radical stroke number",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The output is a list of Japanese kanji characters that are grouped by the stroke count of their primary radical. For each kanji in the list, the tool provides the character itself, its total stroke count, and detailed information about its radical, including the radical's character, its specific stroke count, and an ordering number. This allows for studying kanji based on the complexity of their radicals.",
      "output_format": "The tool returns a JSON array of objects. Each object represents a single kanji and contains two nested objects: 'kanji' and 'radical'. The 'kanji' object holds the character and its total stroke count. The 'radical' object holds the radical's character, its stroke count, and an 'order' number. Note that some radical characters are represented by Unicode Private Use Area (PUA) codepoints (e.g., '\\ue723'). The provided examples appear to be truncated."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "The kanji stroke count information from the source tool can be used to search for kanji with specific stroke counts"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical position",
        "connect params": [
          {
            "name": "rpos",
            "description": "The radical information from the source tool can be used to search for kanji with radicals in specific positions"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical English meaning",
        "connect params": [
          {
            "name": "rem",
            "description": "The radical information from the source tool can be used to search for kanji with radicals of specific meanings"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Study list (AP exam)",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, which can be combined as needed for more complex queries. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, allowing developers to build applications with comprehensive Japanese character information.",
    "required_parameters": [
      {
        "name": "list",
        "type": "STRING",
        "description": "Kanji divided into chapters (1-20) by Kanji alive",
        "default": "ap:c3"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"list\": list}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Study list (AP exam)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters relevant to the AP exam. For each kanji, the output provides the character itself, its stroke count, and information about its primary radical, including the radical's character, stroke count, and order number. This data is intended for developers building Japanese language learning applications.",
      "output_format": "The output is a JSON array of objects. Each object contains two nested objects, 'kanji' and 'radical'. The 'kanji' object details the character and its stroke count. The 'radical' object provides the radical's character, stroke count, and order. Some radical characters are represented using Unicode private use area escape sequences (e.g., '\\ue746'). The provided examples appear to be truncated."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Onyomi reading",
        "connect params": [
          {
            "name": "on",
            "description": "Could use kanji characters from the source output to look up their Onyomi readings"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kunyomi reading",
        "connect params": [
          {
            "name": "kun",
            "description": "Could use kanji characters from the source output to look up their Kunyomi readings"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji English meaning",
        "connect params": [
          {
            "name": "kem",
            "description": "Could use kanji characters from the source output to look up their English meanings"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "Could use the stroke count information from the source output to find similar kanji"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical English meaning",
        "connect params": [
          {
            "name": "rem",
            "description": "Could use the radical information from the source output to find their English meanings"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "Could use the radical stroke count from the source output to find related radicals"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Study list (Macquarie)",
    "tool description": "Provides access to individual Advanced Search URL parameters for testing purposes, allowing parameters to be combined as needed for customized queries. This endpoint is part of the free Kanji alive API, which offers comprehensive CC-BY licensed language data on Japanese kanji, radicals, and their associated media files through a web application interface.",
    "required_parameters": [
      {
        "name": "list",
        "type": "STRING",
        "description": "Kanji divided into chapters (12-22)",
        "default": "mac:c12"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced\"\nquerystring = {\"list\": list}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Study list (Macquarie)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters from a specific study list (Macquarie). For each kanji in the list, the output provides the character itself, its total stroke count, its associated radical character, the radical's stroke count, and the radical's order number. This information is intended for users studying the Japanese language, particularly for learning to recognize and write kanji.",
      "output_format": "The output is a JSON array of objects. Each object represents a single kanji and contains two nested JSON objects: 'kanji' and 'radical'. The 'kanji' object contains the character and its stroke count. The 'radical' object contains the radical's character, stroke count, and order. All fields in the examples are non-null."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "Positive integer",
            "connection_info": "The kanji stroke count from the source tool's output can be used as input for this parameter to find other kanji with the same stroke count."
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "Positive integer",
            "connection_info": "The radical stroke count from the source tool's output can be used as input for this parameter to find other kanji with radicals of the same stroke count."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Kanji grade level",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, which can be combined as needed for customized queries. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, allowing developers to build applications with comprehensive Japanese character information.",
    "required_parameters": [
      {
        "name": "grade",
        "type": "STRING",
        "description": "Positive integer",
        "default": "2"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"grade\": grade}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Kanji grade level",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese Kanji characters. For each Kanji, it provides the character symbol and its stroke count. It also includes detailed information about the associated radical, such as the radical's character, its stroke count, and its order number. This data is intended for applications that need comprehensive information about Japanese characters.",
      "output_format": "The output is a JSON array of objects. Each object in the array represents a single Kanji and contains two nested objects: 'kanji' and 'radical'. The 'kanji' object holds the character and its stroke count, while the 'radical' object holds the radical's character, stroke count, and order. Some radical characters are represented using Unicode escape sequences (e.g., '\\ue720')."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Onyomi reading",
        "connect params": [
          {
            "name": "on",
            "description": "Could use the kanji character from the source output to look up its Onyomi reading"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kunyomi reading",
        "connect params": [
          {
            "name": "kun",
            "description": "Could use the kanji character from the source output to look up its Kunyomi reading"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji English meaning",
        "connect params": [
          {
            "name": "kem",
            "description": "Could use the kanji character from the source output to find its English meaning"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "Could use the stroke count information from the source output directly"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Numbers",
    "parent tool description": "An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"",
    "tool name": "Numbers: Get date fact",
    "tool description": "Gets an interesting fact about a specific day of the year (like a historical event, birth, or commemoration). This uses an API that specializes in number-related trivia, providing access to a collection of fascinating facts about dates, years, mathematical properties, and numerical curiosities. For example, you might learn that 'February 27th is the day in 1964 that the government of Italy asked for help to keep the Leaning Tower of Pisa from toppling over.'",
    "required_parameters": [
      {
        "name": "month",
        "type": "STRING",
        "description": "The 1-indexed month (eg. 6 for June)",
        "default": "6"
      },
      {
        "name": "day",
        "type": "STRING",
        "description": "The day of the month",
        "default": "21"
      }
    ],
    "optional_parameters": [
      {
        "name": "fragment",
        "type": "STRING",
        "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.",
        "default": true
      },
      {
        "name": "json",
        "type": "STRING",
        "description": "Specify \"true\" to return result as JSON instead of plaintext.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://numbersapi.p.rapidapi.com/6/21/date\"\nquerystring = {\"fragment\": true, \"json\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbersapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get date fact",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "This tool returns a single historical fact or event associated with a specific day of the year. The output includes a text description of the event, the year it occurred, and the day of the year represented as a number (e.g., 1 for January 1st). It also includes a boolean flag to confirm if a fact was found.",
      "output_format": "The output is a single, non-nested JSON object. All keys ('text', 'year', 'number', 'found', 'type') appear to be consistently present in the response. The 'number' field corresponds to the day of the year (1-366). There is no indication of pagination or arrays."
    },
    "connected tools": [
      {
        "tool name": "Numbers: Get year fact",
        "connect params": [
          {
            "param_name": "year",
            "description": "The year from the date fact could be used to get additional facts about that year"
          }
        ]
      },
      {
        "tool name": "TED Talks API: getTalks",
        "connect params": [
          {
            "param_name": "from_record_date",
            "description": "The year from the date fact could be used to find talks recorded after that date"
          },
          {
            "param_name": "from_publish_date",
            "description": "The year from the date fact could be used to find talks published after that date"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Numbers",
    "parent tool description": "An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"",
    "tool name": "Numbers: Get math fact",
    "tool description": "Retrieves mathematical properties and characteristics about a specific number. This uses an API that provides comprehensive numerical information, drawing from a database of interesting mathematical facts such as prime factors, divisibility properties, and special mathematical classifications. Beyond just mathematical properties, the parent service also offers trivia, date facts, and year-related information about numbers, such as '5 is the number of platonic solids' or '42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo.'",
    "required_parameters": [
      {
        "name": "number",
        "type": "STRING",
        "description": "The integer of interest",
        "default": "1729"
      }
    ],
    "optional_parameters": [
      {
        "name": "fragment",
        "type": "STRING",
        "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.",
        "default": true
      },
      {
        "name": "json",
        "type": "STRING",
        "description": "Specify \"true\" to return result as JSON instead of plaintext.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://numbersapi.p.rapidapi.com/1729/math\"\nquerystring = {\"fragment\": true, \"json\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbersapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get math fact",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a single fact about a specific number. The output contains a descriptive string of the fact, the number itself, a boolean flag indicating if a fact was found, and the type of fact (e.g., 'math'). The tool is useful for discovering interesting mathematical properties, trivia, or historical facts associated with an integer.",
      "output_format": "The output is a single, non-nested JSON object. It contains four keys: 'text' (string), 'number' (integer), 'found' (boolean), and 'type' (string). The output is not an array, so pagination does not apply. It is assumed all fields are non-nullable."
    },
    "connected tools": [
      {
        "tool name": "Dictionary: wordSearchTurkish",
        "connect params": [
          {
            "name": "query",
            "use_field": "text"
          }
        ]
      },
      {
        "tool name": "Numbers: Get trivia fact",
        "connect params": [
          {
            "name": "number",
            "use_field": "number"
          }
        ]
      },
      {
        "tool name": "Numbers: Get year fact",
        "connect params": [
          {
            "name": "year",
            "use_field": "number"
          }
        ]
      },
      {
        "tool name": "Numbers Translator: Numbers Translator",
        "connect params": [
          {
            "name": "text",
            "use_field": "number"
          }
        ]
      },
      {
        "tool name": "Urban Dictionary: Define a Word / Search",
        "connect params": [
          {
            "name": "term",
            "use_field": "text"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Numbers",
    "parent tool description": "An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"",
    "tool name": "Numbers: Get random fact",
    "tool description": "Retrieves a random number fact without requiring any input. This uses an API that provides a wealth of interesting trivia, mathematical properties, date-related events, and historical year facts about numbers. For example, you might learn that '5 is the number of platonic solids', '42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo', or discover that 'February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over'.",
    "required_parameters": [
      {
        "name": "type",
        "type": "STRING",
        "description": "One of \"trivia\", \"math\", \"date\", or \"year\"",
        "default": "trivia"
      }
    ],
    "optional_parameters": [
      {
        "name": "min",
        "type": "STRING",
        "description": "Minimum number, inclusive",
        "default": "10"
      },
      {
        "name": "max",
        "type": "STRING",
        "description": "Maximium number, inclusive",
        "default": "20"
      },
      {
        "name": "fragment",
        "type": "STRING",
        "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.",
        "default": true
      },
      {
        "name": "json",
        "type": "STRING",
        "description": "Specify \"true\" to return result as JSON instead of plaintext.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://numbersapi.p.rapidapi.com/random/trivia\"\nquerystring = {\"min\": \"10\", \"max\": \"20\", \"fragment\": true, \"json\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbersapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get random fact",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object containing a random fact about a number. The object includes the descriptive fact as a text string, the number the fact is about, and the category of the fact (e.g., 'math', 'date', 'year'). For date-related facts, a 'year' key may also be present.",
      "output_format": "The output is a single, non-nested JSON object. It does not support pagination. Some keys appear to be conditional; for example, the 'year' key is only present in the 'date' type example. It is assumed that if the 'found' key is false, other data fields might be null, but this is not shown in the examples."
    },
    "connected tools": [
      {
        "tool name": "Numbers: Get math fact",
        "connect params": [
          {
            "param_name": "number",
            "description": "The number from the random fact could be used to get specific mathematical properties"
          }
        ]
      },
      {
        "tool name": "Numbers: Get trivia fact",
        "connect params": [
          {
            "param_name": "number",
            "description": "The number from the random fact could be used to get additional trivia about the same number"
          }
        ]
      },
      {
        "tool name": "Numbers: Get year fact",
        "connect params": [
          {
            "param_name": "year",
            "description": "If the random fact is about a year or contains a year value, it could be used to get more information about that year"
          }
        ]
      },
      {
        "tool name": "Numbers: Get date fact",
        "connect params": [
          {
            "param_name": "month",
            "description": "If the random fact is about a date, the month component could be extracted and used"
          },
          {
            "param_name": "day",
            "description": "If the random fact is about a date, the day component could be extracted and used"
          }
        ]
      },
      {
        "tool name": "Numbers Translator: Numbers Translator",
        "connect params": [
          {
            "param_name": "text",
            "description": "The number from the random fact could be translated into its word form"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Numbers",
    "parent tool description": "An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"",
    "tool name": "Numbers: Get trivia fact",
    "tool description": "Gets a trivia fact about a specific number. This uses an API that provides interesting numerical information, drawing from a collection of trivia, mathematical properties, date facts, and historical year events. For instance, you might learn that 5 is the number of platonic solids, 42 appears in Microsoft's Windows 98 logo, or discover historical events that occurred on dates like February 27th, 1964, when Italy requested help to prevent the Leaning Tower of Pisa from collapsing.",
    "required_parameters": [
      {
        "name": "number",
        "type": "STRING",
        "description": "The integer of interest",
        "default": "42"
      }
    ],
    "optional_parameters": [
      {
        "name": "fragment",
        "type": "STRING",
        "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.",
        "default": true
      },
      {
        "name": "notfound",
        "type": "STRING",
        "description": "Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact).",
        "default": "floor"
      },
      {
        "name": "json",
        "type": "STRING",
        "description": "Specify \"true\" to return result as JSON instead of plaintext.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://numbersapi.p.rapidapi.com/42/trivia\"\nquerystring = {\"fragment\": true, \"notfound\": \"floor\", \"json\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbersapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get trivia fact",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object containing a trivia fact about a specific number. The output includes the descriptive text of the fact, the number itself, a boolean flag indicating if a fact was found, and the type of fact (e.g., 'trivia', 'math', 'date').",
      "output_format": "The output is a single, non-nested JSON object. It contains four keys: `text` (string), `number` (integer or string), `found` (boolean), and `type` (string). There is no pagination or complex nesting. The type of the `number` field can vary between an integer and a string."
    },
    "connected tools": [
      {
        "tool name": "Numbers: Get math fact",
        "connect params": [
          {
            "param_name": "number",
            "source_field": "number",
            "description": "The number from the trivia fact can be used to get mathematical properties about the same number"
          }
        ]
      },
      {
        "tool name": "Numbers: Get year fact",
        "connect params": [
          {
            "param_name": "year",
            "source_field": "number",
            "description": "If the number represents a year, it can be used to get historical facts about that year"
          }
        ]
      },
      {
        "tool name": "Numbers: Get date fact",
        "connect params": [
          {
            "param_name": "month",
            "source_field": "number",
            "description": "If the number is between 1-12, it could be used as a month input"
          },
          {
            "param_name": "day",
            "source_field": "number",
            "description": "If the number is between 1-31, it could be used as a day input"
          }
        ]
      },
      {
        "tool name": "Numbers Translator: Numbers Translator",
        "connect params": [
          {
            "param_name": "text",
            "source_field": "number",
            "description": "The number from the trivia fact can be translated into its word form"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Numbers",
    "parent tool description": "An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"",
    "tool name": "Numbers: Get year fact",
    "tool description": "Retrieves an interesting historical or numerical fact about a specific year. This uses an API that specializes in number-related trivia, drawing from a collection of mathematical, historical, and cultural facts about numbers, including years, dates, and mathematical properties. For example, you might learn when significant historical events occurred in a particular year, or discover numerical curiosities like '1729 is the Hardy-Ramanujan number, the smallest number expressible as the sum of two cubes in two different ways.'",
    "required_parameters": [
      {
        "name": "year",
        "type": "STRING",
        "description": "The year of interest",
        "default": "1492"
      }
    ],
    "optional_parameters": [
      {
        "name": "fragment",
        "type": "STRING",
        "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.",
        "default": true
      },
      {
        "name": "json",
        "type": "STRING",
        "description": "Specify \"true\" to return result as JSON instead of plaintext.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://numbersapi.p.rapidapi.com/1492/year\"\nquerystring = {\"fragment\": true, \"json\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbersapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get year fact",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a single fact about a given year. The output includes the text of a historical event, the specific month and day it occurred, the year queried, and a boolean flag indicating if a result was found. This tool is used for retrieving interesting historical trivia associated with a particular year.",
      "output_format": "The output is a single, non-nested JSON object. It does not appear to support pagination or return multiple results in an array. All fields ('date', 'text', 'number', 'found', 'type') are present in the successful examples, suggesting they are non-nullable when a fact is found."
    },
    "connected tools": [
      {
        "tool name": "TED Talks API: getTalks",
        "connect params": [
          {
            "param_name": "from_publish_date",
            "description": "The year from the fact could be used as a starting point for finding TED talks published after that historical event"
          },
          {
            "param_name": "from_record_date",
            "description": "The year from the fact could be used as a starting point for finding TED talks recorded after that historical event"
          }
        ]
      },
      {
        "tool name": "Urban Dictionary: Define a Word / Search",
        "connect params": [
          {
            "param_name": "term",
            "description": "Key terms from the historical fact could be searched in Urban Dictionary"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Numbers Translator",
    "parent tool description": "Convert numerical numbers to words. For example 23879908709817834 will give you \"Twenty-three quadrillion eight hundred seventy-nine trillion nine hundred eight billion seven hundred nine million eight hundred seventeen thousand eight hundred thirty-four\".",
    "tool name": "Numbers Translator: Numbers Translator",
    "tool description": "Translates numerical digits into their word form representation (e.g., converting 23879908709817834 to \"Twenty-three quadrillion eight hundred seventy-nine trillion nine hundred eight billion seven hundred nine million eight hundred seventeen thousand eight hundred thirty-four\"). This tool converts any number into its fully spelled-out word equivalent, making it useful for formal documents, financial records, or educational purposes where numbers need to be expressed in written language.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "text",
        "type": "STRING",
        "description": "Numerical value of the number",
        "default": "23879908709817834"
      }
    ],
    "code": "import requests\n\nurl = \"https://numbers-spell.p.rapidapi.com/numbers\"\nquerystring = {\"text\": \"23879908709817834\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbers-spell.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Numbers Translator",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool's output provides the word-form representation of a given numerical input. It returns the original number as a string and its corresponding spelled-out translation. The output also includes metadata indicating the success of the translation operation.",
      "output_format": "The output is a single JSON object. The core information, containing the original text and its translated word form, is nested under the 'contents' key. A 'success' object at the top level contains metadata, specifically a 'total' count, which appears to always be 1."
    },
    "connected tools": [
      {
        "tool name": "Numbers: Get math fact",
        "connect params": [
          {
            "name": "number",
            "description": "The integer of interest"
          }
        ]
      },
      {
        "tool name": "Numbers: Get trivia fact",
        "connect params": [
          {
            "name": "number",
            "description": "The integer of interest"
          }
        ]
      },
      {
        "tool name": "Numbers: Get year fact",
        "connect params": [
          {
            "name": "year",
            "description": "The year of interest"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "Positive integer"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "Positive integer"
          }
        ]
      },
      {
        "tool name": "Random Words: Get multiple random words",
        "connect params": [
          {
            "name": "count",
            "description": "The word count must be between 2 and 20"
          },
          {
            "name": "wordLength",
            "description": ""
          },
          {
            "name": "minLength",
            "description": ""
          },
          {
            "name": "maxLength",
            "description": ""
          }
        ]
      },
      {
        "tool name": "TED Talks API: getTalks",
        "connect params": [
          {
            "name": "id",
            "description": "ID of a desired specific talk"
          },
          {
            "name": "min_duration",
            "description": "Return talks which their duration in seconds is at least the provided value"
          },
          {
            "name": "max_duration",
            "description": "Return talks which their duration in seconds is at most the provided value"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "periodicTable",
    "parent tool description": "It provides detailed information about periodic table",
    "tool name": "periodicTable: periodic table",
    "tool description": "Provides detailed information about specific elements in the periodic table, including their properties, atomic structure, and chemical characteristics. This tool draws from comprehensive periodic table data to deliver accurate scientific information about elements, helping users understand fundamental chemistry concepts, element behaviors, and physical properties for educational, research, or reference purposes.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "all",
        "type": "STRING",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://periodictable.p.rapidapi.com/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"periodictable.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "periodic table",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of objects, with each object containing detailed information about a specific chemical element. The data includes atomic properties (mass, number, radius), physical characteristics (boiling/melting points, density, state), chemical data (oxidation states, electron configuration), and historical context. This output is designed for scientific and educational reference.",
      "output_format": "The output is a JSON array of objects, where each object represents a single element. All data values, including numerical ones like 'atomicNumber' and 'boilingPoint', are formatted as strings. Some fields can contain an empty string to represent null or unavailable data."
    },
    "connected tools": [
      {
        "tool name": "Urban Dictionary: Define a Word / Search",
        "connect params": [
          {
            "name": "term",
            "description": "Element names or chemical terminology could be searched for slang or cultural meanings"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Random Words",
    "parent tool description": "Random words api provides you a list of random words or a single random word",
    "tool name": "Random Words: Get multiple random words",
    "tool description": "Retrieves multiple random words (between 2 and 50) from an extensive database of over 35,000 words. This endpoint allows you to specify exactly how many random words you want returned, with the count parameter accepting values from 2 to 50 inclusive. Note that the wordLength parameter cannot be used simultaneously with minLength and/or maxLength parameters. Part of a comprehensive random word service that can provide either individual words or customized lists of random words for various applications like creative writing, vocabulary building, or game development.",
    "required_parameters": [
      {
        "name": "count",
        "type": "NUMBER",
        "description": "The word count must be between 2 and 20",
        "default": "5"
      }
    ],
    "optional_parameters": [
      {
        "name": "excludes",
        "type": "STRING",
        "description": "",
        "default": ""
      },
      {
        "name": "includes",
        "type": "STRING",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://random-words5.p.rapidapi.com/getMultipleRandom\"\nquerystring = {\"count\": count}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"random-words5.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get multiple random words",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The output is a list of randomly selected English words. The number of words in the list is determined by the user's input, ranging from 2 to 50. This data is intended for use in creative writing, vocabulary building, or game development.",
      "output_format": "The output is a JSON array of strings. Each string in the array is a single random word. The entire response is a single, flat, non-paginated list."
    },
    "connected tools": [
      {
        "tool name": "Urban Dictionary: Define a Word / Search",
        "connect params": [
          {
            "name": "term",
            "description": "A random word can be used to look up its slang definition"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Stars API",
    "parent tool description": "API to serve information about stars and planets scraped from wikipedia. Get to know over 200 stars and surrounding planets, in just a few lines of code.",
    "tool name": "Stars API: Planet list",
    "tool description": "Returns the planets surrounding a specified star, providing detailed astronomical data about celestial bodies in that star system. This endpoint leverages an API that serves information scraped from Wikipedia, giving you access to comprehensive data about over 200 stars and their surrounding planets in just a few lines of code. The service simplifies astronomical research by centralizing planetary system information from across the galaxy.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "starid",
        "type": "STRING",
        "description": "",
        "default": "4"
      }
    ],
    "code": "import requests\n\nurl = \"https://stars-api.p.rapidapi.com/planetList\"\nquerystring = {\"starid\": starid}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"stars-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Planet list",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of planets that orbit a specified star. For each planet, the output provides its name, mass, temperature, and discovery information, which includes the method, date, and location of the discovery. This data, sourced from Wikipedia, is intended for astronomical research. If a star has no known planets, the tool returns an empty list.",
      "output_format": "The output is a JSON array of objects, where each object represents one planet. Some fields within a planet object, such as 'mass' and 'temperature', can be null. Each planet object contains a nested 'discovery' object detailing how it was found. The results for a given star are returned as a complete list in a single response, with no indication of pagination."
    },
    "connected tools": [
      {
        "tool name": "periodicTable: periodic table",
        "connect params": [
          {
            "name": "all",
            "description": "Planet composition data could be related to elements in the periodic table"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "TED Talks API",
    "parent tool description": "Get TED talks based on multiple different parameters and filtering options, from the speaker, topic, talk duration, and more.",
    "tool name": "TED Talks API: getTalks",
    "tool description": "Gets detailed information about specific TED talks based on provided parameters such as speaker name, topic, or duration. This endpoint leverages a comprehensive database of TED talks, allowing you to filter and retrieve targeted content from the vast collection of presentations. The service enables precise searching across multiple dimensions including speakers, subject matter, talk length, and additional filtering options, making it easy to find exactly the inspirational or educational content you're looking for.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "audio_lang",
        "type": "STRING",
        "description": "Return talks which their audio language is the provided language, the provided value should be the language slug according to the /audio_languages endpoint",
        "default": "en"
      },
      {
        "name": "speaker",
        "type": "STRING",
        "description": "Return talks which at least on of their speakers is the provided speaker, the provided value should be the speaker slug according to the /speakers endpoint",
        "default": "yuval_noah_harari"
      },
      {
        "name": "publish_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were published on TED.com only on the exact provided date",
        "default": ""
      },
      {
        "name": "topic",
        "type": "STRING",
        "description": "Return talks which at least on of their topics is the provided topics, the provided value should be the speaker slug according to the /topics endpoint",
        "default": "politics"
      },
      {
        "name": "subtitle_lang",
        "type": "STRING",
        "description": "Return talks which have subtitles in the provided language, the provided value should be the language slug according to the /subtitle_languages endpoint",
        "default": "he"
      },
      {
        "name": "max_duration",
        "type": "NUMBER",
        "description": "Return talks which their duration in seconds is at most the provided value",
        "default": ""
      },
      {
        "name": "to_publish_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were published on TED.com only before the provided date",
        "default": ""
      },
      {
        "name": "from_publish_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were published on TED.com only after the provided date",
        "default": ""
      },
      {
        "name": "min_duration",
        "type": "NUMBER",
        "description": "Return talks which their duration in seconds is at least the provided value",
        "default": "300"
      },
      {
        "name": "record_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were recorded only in the exact provided date",
        "default": ""
      },
      {
        "name": "to_record_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were recorded only before the provided date",
        "default": ""
      },
      {
        "name": "from_record_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were recorded only after the provided date",
        "default": "2017-01-01"
      }
    ],
    "code": "import requests\n\nurl = \"https://ted-talks-api.p.rapidapi.com/talks\"\nquerystring = {\"audio_lang\": audio_lang, \"speaker\": speaker, \"topic\": topic, \"subtitle_lang\": subtitle_lang, \"min_duration\": min_duration, \"from_record_date\": from_record_date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ted-talks-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "getTalks",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool output is a structured object containing the results of a search for TED talks. It includes a list of the talks that match the query, a count of the number of results, and a list of any errors that occurred. The output also echoes the parameters used for the search, providing a complete record of the request and its outcome.",
      "output_format": "The output is a string containing a JSON object. The primary data is located in a nested array at `result.results`. The schema for the individual talk objects within this array is not defined in the examples. The top-level object also includes a `num_results` integer and an `errors` array. In some cases, the output can be an empty string."
    },
    "connected tools": []
  },
  {
    "parent tool name": "thefluentme",
    "parent tool description": "The AI-powered language pronunciation API with ChatGPT",
    "tool name": "thefluentme: Get language by id",
    "tool description": "Returns detailed information about a specific language when provided with its unique identifier. This endpoint is part of an AI-powered language pronunciation system integrated with ChatGPT, designed to help users access accurate pronunciation guides and language information for learning and communication purposes.",
    "required_parameters": [
      {
        "name": "language_id",
        "type": "NUMBER",
        "description": "",
        "default": ""
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://thefluentme.p.rapidapi.com/language/{language_id}\"\nquerystring = {\"language_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thefluentme.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get language by id",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The output is a single object containing details for a specific language, retrieved by its unique ID. It provides the language's numerical identifier, its name, and a descriptive string for the available pronunciation voice, which may include region and gender. This information is used by a language learning system to fetch accurate pronunciation guides for users.",
      "output_format": "The output is a single, flat JSON object. It is not an array and does not contain nested structures. The `language_name` field may contain trailing whitespace. No pagination or cursoring is indicated, as the tool retrieves a single entity."
    },
    "connected tools": [
      {
        "tool name": "Dictionary: wordSearchTurkish",
        "connect params": []
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Onyomi reading",
        "connect params": []
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Kunyomi reading",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "Uncovered Treasure",
    "parent tool description": "The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.",
    "tool name": "Uncovered Treasure: /random",
    "tool description": "Retrieves a random biblical insight or truth from the extensive collection. This endpoint draws from the Uncovered Treasure API, which contains over 25,000 revealed truths meticulously documented by Phil Largent across a 25-year period, covering every Book and chapter of the Bible. The random selection feature provides users with spontaneous access to biblical wisdom and revelations without needing to specify particular passages or themes.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "callback",
        "type": "STRING",
        "description": "Optional JSONP callback",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://uncovered-treasure-v1.p.rapidapi.com/random\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uncovered-treasure-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/random",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool's output is a single, randomly selected biblical insight from the Uncovered Treasure collection. Each insight includes the text of the revelation itself, the specific biblical context (e.g., book and chapter), and the date it was documented. It also provides metadata such as the book's numerical order in the Bible and a list of related topics.",
      "output_format": "The output is a JSON object with a top-level key named \"results\". The value is a JSON array that contains a single object representing the random insight. This insight object includes fields like \"date\" (string), \"context\" (string), \"scriptures\" (array of strings), \"text\" (string), \"topics\" (array of strings, which can be empty), and \"bookOrder\" (number)."
    },
    "connected tools": [
      {
        "tool name": "Uncovered Treasure: /verse/{verse}",
        "connect params": [
          {
            "param_name": "verse",
            "description": "Can use the scripture reference from the random insight to get more insights on the same verse"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Uncovered Treasure",
    "parent tool description": "The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.",
    "tool name": "Uncovered Treasure: /verse/{verse}",
    "tool description": "Gets treasure insights based on a specific Bible verse. This endpoint taps into the Uncovered Treasure API's extensive collection of over 25,000 revealed truths meticulously recorded by Phil Largent across a 25-year period, covering every Book and chapter in the Bible. The service provides access to these spiritual insights and interpretations organized by verse reference, allowing users to explore deeper meanings and revelations from biblical text.",
    "required_parameters": [
      {
        "name": "verse",
        "type": "STRING",
        "description": "Use common English name with chapter number and optionally verse, such as \"1 Corinthians 1\", \"1 Corinthians 1:5\" or \"James 3\". Does NOT support ranged searches, such as \"James 3:1-4\".",
        "default": "Acts 21:8"
      }
    ],
    "optional_parameters": [
      {
        "name": "callback",
        "type": "STRING",
        "description": "Optional JSONP callback",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://uncovered-treasure-v1.p.rapidapi.com/verse/Acts 21:8\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uncovered-treasure-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/verse/{verse}",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of theological insights and interpretations related to a specific Bible verse. Each insight includes the text of the revelation, the date it was recorded, its biblical context, associated scripture references, and a list of topics. The information is intended to provide users with deeper spiritual meanings and revealed truths from biblical texts as recorded by Phil Largent.",
      "output_format": "The output is a JSON object containing a single key, \"results\", which holds an array of insight objects. Each object contains fields such as 'date' (string), 'context' (string), 'scriptures' (array of strings), 'text' (string), 'topics' (array of strings which can be empty), and 'bookOrder' (integer). There is no indication of pagination or cursoring."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Uncovered Treasure",
    "parent tool description": "The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.",
    "tool name": "Uncovered Treasure: /today",
    "tool description": "Gets the treasure of the day, providing a daily revealed truth from the Bible. This endpoint draws from the Uncovered Treasure API's extensive collection of over 25,000 biblical insights and revelations that have been meticulously recorded by Phil Largent throughout his 25-year journey of scripture study. Each daily treasure offers users access to profound biblical wisdom and interpretations from various Books and chapters of the Bible.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "callback",
        "type": "STRING",
        "description": "Optional JSONP callback",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://uncovered-treasure-v1.p.rapidapi.com/today\"\nquerystring = {\"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uncovered-treasure-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/today",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool provides a \"treasure of the day,\" which is a biblical insight or interpretation. Each output includes the interpretive text, the corresponding scripture reference(s) from the Bible, and the date the insight was recorded. This information is intended to provide users with a daily piece of wisdom from the Bible.",
      "output_format": "The output is a JSON object with a top-level key named \"results\". The value of this key is an array that contains a single JSON object representing the daily treasure. This inner object contains keys such as 'date', 'context', 'scriptures' (an array of strings), 'text', and 'topics' (an array which can be empty)."
    },
    "connected tools": [
      {
        "tool name": "Uncovered Treasure: /verse/{verse}",
        "connect params": [
          {
            "name": "verse",
            "description": "The scripture references from today's treasure could be used to get more insights on the same verse"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Urban Dictionary",
    "parent tool description": "Access all of the Urban Dictionary, the one-stop shop for slang definitions",
    "tool name": "Urban Dictionary: Define a Word / Search",
    "tool description": "Defines a specific word or searches for word definitions by accessing Urban Dictionary, the comprehensive one-stop shop for slang definitions. This tool allows you to look up contemporary slang terms, internet language, and cultural expressions that might not appear in traditional dictionaries, providing user-contributed definitions that reflect how language is actually used in various communities and online spaces.",
    "required_parameters": [
      {
        "name": "term",
        "type": "STRING",
        "description": "",
        "default": "yeet"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://urban-dictionary7.p.rapidapi.com/v0/define\"\nquerystring = {\"term\": term}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"urban-dictionary7.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Define a Word / Search",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool's output is a list of user-submitted definitions for a searched word or phrase. Each definition object contains the definition text, an example of its usage in a sentence, the author's username, voting statistics (thumbs up/down), a creation date, and a permanent link to the definition on the Urban Dictionary website. This allows users to understand the various meanings, contexts, and popularity of slang and cultural terms.",
      "output_format": "The output is a string representation of a JSON object. This object has a single key, \"list\", which contains an array of definition objects. Each object within the array corresponds to a single definition entry. The 'definition' and 'example' fields are strings that may contain newline characters (\\n, \\r\\n) and bracketed substrings that are likely hyperlinks on the source website. Some fields, like 'current_vote', might be empty strings."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Rocket League",
    "parent tool description": "Ranks, stats, news & more, provided by the fastest and most powerful API for Rocket League.",
    "tool name": "Rocket League: Population",
    "tool description": "Checks the current player population across different Rocket League playlists using the `/population` endpoint. This leverages the fastest and most powerful Rocket League API to provide real-time data on how many players are active in various game modes, complementing the broader suite of features that deliver comprehensive ranks, player statistics, and news for the Rocket League community.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rocket-league1.p.rapidapi.com/population\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rocket-league1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Population",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides real-time data on the Rocket League player population. It returns the total number of players currently online and provides a more detailed breakdown of player counts for each specific game mode or playlist. This information can be used to check server status or see which game modes are the most popular at a given moment.",
      "output_format": "The output is a single JSON object. It contains a top-level integer key 'online' for the total player count, and a key 'playlists' which holds an array of nested objects. Each object in this array represents a specific game mode and details its 'name' as a string and its current 'population' as an integer."
    },
    "connected tools": [
      {
        "tool name": "Rocket League: Tournaments",
        "connect params": [
          {
            "name": "region",
            "description": "The region parameter could be selected based on population data to target regions with higher player counts for better tournament experiences"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Card Draw Simulator",
    "parent tool description": "Draw cards from a regular 52 playing cards deck with a variety of options.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "value",
        "type": "STRING",
        "description": "",
        "default": "all"
      },
      {
        "name": "suit",
        "type": "STRING",
        "description": "",
        "default": "\u2660"
      },
      {
        "name": "back",
        "type": "STRING",
        "description": "",
        "default": "false"
      },
      {
        "name": "pulls",
        "type": "STRING",
        "description": "",
        "default": "10"
      }
    ],
    "code": "import requests\n\nurl = \"https://card-draw-simulator.p.rapidapi.com/cards\"\nquerystring = {\"value\": value, \"suit\": suit, \"back\": back, \"pulls\": pulls}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"card-draw-simulator.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Card Draw Simulator: Cards",
    "tool description": "Draws multiple cards from a standard 52-card deck. This is part of a tool that offers various card-drawing options, utilizing a randomized algorithm to ensure fair and unpredictable selections, ideal for applications like game simulations or probability experiments.",
    "API name": "Cards",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool output provides a list of playing cards drawn from a standard 52-card deck. Each card is represented as a string that combines its rank (e.g., 'A', 'K', '10') and suit symbol (e.g., '\u2663', '\u2666', '\u2665'). The number of cards in the list varies, corresponding to the requested number of cards to draw. This data is intended for simulating card games or conducting probability experiments.",
      "output_format": "The output is a JSON object containing a single key, \"cards\". The value associated with this key is a JSON array of strings, where each string represents one card. The examples are provided as string-serialized JSON, but the native output is a JSON object. There is no indication of pagination or cursoring."
    },
    "connected tools": [
      {
        "tool name": "Card Draw Simulator: Card",
        "connect params": [
          {
            "name": "suit",
            "description": "Can use the suit from a drawn card"
          },
          {
            "name": "value",
            "description": "Can use the value/rank from a drawn card"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice rolls",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the number of cards drawn as input for number of dice"
          },
          {
            "name": "sides",
            "description": "Could use card values (1-13) as number of sides"
          },
          {
            "name": "rolls",
            "description": "Could use the number of cards drawn as input for number of rolls"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom dice",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the number of cards drawn as input for number of dice"
          },
          {
            "name": "sides",
            "description": "Could use card values (1-13) as number of sides"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice rolls",
        "connect params": [
          {
            "name": "rolls",
            "description": "Could use the number of cards drawn as input for number of rolls"
          },
          {
            "name": "dice",
            "description": "Could use the number of cards drawn as input for number of dice"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Regular dice",
        "connect params": [
          {
            "name": "dice",
            "description": "Could use the number of cards drawn as input for number of dice"
          }
        ]
      },
      {
        "tool name": "Dice Roll Simulator: Custom die",
        "connect params": [
          {
            "name": "sides",
            "description": "Could use a card value (1-13) as number of sides"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Billboard",
    "parent tool description": "Billboard charts: Hot 100, Billboard 200, Billboard 200 Global, Artist 100 and more",
    "tool name": "Billboard: Billboard 200",
    "tool description": "Provides detailed Billboard 100 chart information, showing the current rankings of the most popular songs in the United States. This endpoint delivers access to Billboard's comprehensive music chart ecosystem, which includes not only the iconic Hot 100 singles chart, but also the Billboard 200 albums chart, Billboard Global 200, Artist 100 rankings, and various other genre-specific and specialized music charts that track popularity and performance across the music industry.",
    "required_parameters": [
      {
        "name": "date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Set the date for which you want to get a chart.",
        "default": "2020-03-18"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://billboard2.p.rapidapi.com/billboard_200\"\nquerystring = {\"date\": \"2020-03-18\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"billboard2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Billboard 200",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "This tool provides a list of albums currently ranked on the Billboard 200 chart. For each album, it returns detailed information including the artist, title, current rank, rank from the previous week, peak position, and the total number of weeks on the chart. The output also includes a URL for the album's cover art and a boolean flag for special awards or recognition.",
      "output_format": "The output is a JSON array of objects, where each object represents a single album on the chart. The value for the 'artist' key is inconsistent; it can be either a plain string or an HTML `<a>` tag that requires parsing. Numeric values such as 'rank', 'last_week', 'peak_position', and 'weeks_on_chart' are returned as strings. The 'weeks_on_chart' key can have an empty string as its value."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use album title and artist name from Billboard 200 chart as search query"
          },
          {
            "name": "type",
            "description": "Can be set to 'albums' to search for albums from Billboard 200 chart"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_dcphase\"\nquerystring = {\"series_type\": \"close\", \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: HT_DCPHASE",
    "tool description": "Calculates the dominant cycle phase using Hilbert Transform techniques to analyze financial market cycles. This endpoint leverages the parent tool's financial data infrastructure, which provides real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to identify cyclical patterns in market behavior. Built on advanced signal processing methods described in *Rocket Science for Traders* by John F. Ehlers, it helps traders make informed decisions by detecting phase shifts in price movements, enhancing technical analysis capabilities within the broader financial data platform.",
    "API name": "HT_DCPHASE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The output provides the Hilbert Transform Dominant Cycle Phase (HT_DCPHASE) indicator for a given financial instrument over a series of time intervals. The response includes metadata about the instrument (e.g., symbol, interval, exchange) and a time-series list of data points. Each data point contains a datetime and its corresponding HT_DCPHASE value, which helps traders analyze market cycles and potential phase shifts.",
      "output_format": "The output is a single JSON object with two top-level keys: 'meta' and 'values'. The 'meta' key holds an object with descriptive information about the request and the instrument. The 'values' key holds a JSON array of data points, sorted in reverse chronological order (most recent first). Each object in the array contains a 'datetime' string and the 'ht_dcphase' value, which is also represented as a string."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: HT_SINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_TRENDLINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_TRENDMODE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_PHASOR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPERIOD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ICHIMOKU",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Symbol from the source output can be used"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Arabic news API",
    "parent tool description": "this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631",
    "tool name": "Arabic news API: CNN Arabic",
    "tool description": "\u064a\u0633\u062a\u0631\u062c\u0639 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0633\u064a \u0627\u0646 \u0627\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0648\u0647\u0648 \u062c\u0632\u0621 \u0645\u0646 \u062e\u062f\u0645\u0629 API \u0645\u062a\u0643\u0627\u0645\u0644\u0629 \u062a\u062c\u0645\u0639 \u0622\u062e\u0631 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u0648\u0627\u0644\u0631\u0648\u0627\u0628\u0637 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0645\u062b\u0644 \u0627\u0644\u062c\u0632\u064a\u0631\u0629\u060c \u0628\u064a \u0628\u064a \u0633\u064a \u0639\u0631\u0628\u064a\u060c \u0633\u064a \u0627\u0646 \u0627\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u0648\u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0648\u063a\u064a\u0631\u0647\u0627. \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0625\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u062c\u062f\u064a\u062f\u0629 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631 \u0644\u0636\u0645\u0627\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0623\u062d\u062f\u062b \u0627\u0644\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0645\u0646 \u0627\u0644\u0645\u0635\u0627\u062f\u0631 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0627\u0644\u0631\u0627\u0626\u062f\u0629.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://arabic-news-api.p.rapidapi.com/cnnarabic\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabic-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "CNN Arabic",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "This tool retrieves a list of the latest news articles from the CNN Arabic news website. Each article in the list includes a headline, a sub-headline, the main content or a snippet, the publication date, and URLs for both an associated image and the full article. The output is intended to provide a comprehensive summary of recent news stories from this specific Arabic news source.",
      "output_format": "The tool returns a JSON object containing a single key, \"results\". The value of this key is an array of objects, where each object represents a single news article. Each article object consistently contains the following string fields: 'headline', 'underHeadline', 'content', 'date', 'image', and 'url'."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use headlines from CNN Arabic articles as search terms"
          }
        ]
      },
      {
        "tool name": "Coronavirus Smartable: GetNews",
        "connect params": [
          {
            "name": "location",
            "description": "Can use location mentions from CNN Arabic articles about COVID-19"
          }
        ]
      },
      {
        "tool name": "India Today Unofficial: Tag Search",
        "connect params": [
          {
            "name": "tag",
            "description": "Can use topics or keywords extracted from CNN Arabic headlines"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use movie-related keywords from CNN Arabic entertainment news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use keywords or topics from CNN Arabic headlines"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Allows one of following : 5m|15m|30m|1h|1d|1wk|1mo|3mo",
        "default": "15m"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "diffandsplits",
        "type": "STRING",
        "description": "Allows one of following : true|false",
        "default": "false"
      }
    ],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/hi/history\"\nquerystring = {\"interval\": interval, \"symbol\": symbol, \"diffandsplits\": diffandsplits}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
    "tool description": "Provides historical data for stocks, ETFs, and mutual funds. This endpoint is part of the Mboum Finance Official API, which offers comprehensive financial data including SEC filings, news, and screeners. It leverages a database of financial instruments and regulatory filings to deliver detailed historical pricing and performance metrics, enabling users to analyze market trends and make informed investment decisions.",
    "API name": "stock/history/{stock}/{interval}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The output provides historical market data for a specified financial instrument. It consists of a metadata object containing current market details, company information, and request details, and a body object containing a time-series of open, high, low, close (OHLC) prices, volume, and adjusted close price. This information is intended for analyzing historical performance and market trends.",
      "output_format": "The response is a single JSON object with two top-level keys: 'meta' and 'body'. The 'body' is a nested JSON object where each key is a string representation of a Unix timestamp. The value for each key is another object containing the detailed OHLC data for that specific time interval. No pagination or cursoring is apparent in the examples."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query weekly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query current quotes"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query intraday time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query monthly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to calculate technical indicators"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query related news"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query calendar events"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query time series data"
          },
          {
            "name": "interval",
            "description": "The source tool provides interval information that can be used to specify the time interval for the data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides stock symbol information in its metadata that can be used to query related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Gas Price",
    "parent tool description": "Reach gasoline and diesel prices in different fuel stations in different cities.",
    "tool name": "Gas Price: usaCitiesList",
    "tool description": "Retrieves a list of cities with gasoline and diesel price information across the USA. This service accesses a database of fuel stations to provide comparative pricing data, allowing users to check and compare current fuel costs in different urban areas. The tool helps travelers, commuters, and businesses make cost-effective decisions by providing up-to-date information on fuel prices across various American cities.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/usaCitiesList\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "usaCitiesList",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a structured list of US cities, organized by state, for which fuel price information is available. This output functions as a directory, showing the geographic coverage of the gas price data service. A user would consult this list to identify available cities before making a more specific query for actual fuel prices in a chosen location.",
      "output_format": "The output is a JSON object with a top-level 'result' key. The value of 'result' is an array that contains another, single array of state objects. Each state object contains the state's name and a nested array of city objects. Each city object, in turn, contains the name of the city."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use city names from the usaCitiesList output as destination inputs for trip planning"
          }
        ]
      },
      {
        "tool name": "Gas Price: stateUsaPrice",
        "connect params": [
          {
            "name": "state",
            "description": "Can use state names from the usaCitiesList output to query gas prices for specific states"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "Can use city names from the usaCitiesList output as search strings for travel suggestions"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use city names from the usaCitiesList output as location names for hotel searches"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Wayfair",
    "parent tool description": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
    "tool name": "Wayfair: products/v2/detail (Deprecating)",
    "tool description": "Retrieves detailed information about a specific product, providing comprehensive data about its features, specifications, and availability. This API connects to Wayfair.com's extensive product database, allowing you to access the same complete product information that appears on the retail website, including categories, pricing, dimensions, materials, and other product attributes. The service helps developers and businesses integrate Wayfair's product catalog into their applications or systems with accurate and up-to-date product details.",
    "required_parameters": [
      {
        "name": "sku",
        "type": "STRING",
        "description": "The value of sku fields returned in \u2026/products/list or \u2026/products/search endpoint.",
        "default": "W003078383"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/products/v2/detail\"\nquerystring = {\"sku\": sku}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "products/v2/detail (Deprecating)",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a detailed object for a specific Wayfair product. A successful response contains comprehensive product attributes, such as pricing, sale status, available quantity, and image details. It also includes aggregated customer review data and a list of individual customer reviews, mirroring the information on a retail product page.",
      "output_format": "The output is a single JSON object. All data is nested under a top-level `data` key, which contains a `product` object. This `product` object can be `null` if the product is not found. In case of an error, a top-level `errors` array will be present, and the `data` object may contain partial information. The structure is deeply nested with arrays for lists like images and reviews."
    },
    "connected tools": [
      {
        "tool name": "Wayfair: products/get-home-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-similar-items",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-warranty-services",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-images",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-financing-offers",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: reviews/list",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-common-info",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      },
      {
        "tool name": "Wayfair: products/get-pricing",
        "connect params": [
          {
            "name": "sku",
            "description": "The product SKU can be extracted from the Wayfair product detail output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Easy Weather",
    "parent tool description": "Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.",
    "required_parameters": [
      {
        "name": "longitude",
        "type": "STRING",
        "description": "",
        "default": "-80.13"
      },
      {
        "name": "latitude",
        "type": "STRING",
        "description": "",
        "default": "25.77"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://easy-weather1.p.rapidapi.com/current/basic\"\nquerystring = {\"longitude\": longitude, \"latitude\": latitude}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"easy-weather1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Easy Weather: Current conditions (basic)",
    "tool description": "Retrieves basic current weather conditions for a given latitude and longitude. This is part of a comprehensive service offering detailed current conditions, hourly and daily forecasts, and weather alerts in JSON format, providing users with thorough weather insights based on geographic coordinates.",
    "API name": "Current conditions (basic)",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides basic, current weather conditions for a specific geographic coordinate pair (latitude and longitude). It includes key metrics like temperature, atmospheric pressure, humidity, cloud cover percentage, and a simple text description of the conditions (e.g., 'Clear'). The response also contains metadata, such as the time the data was reported and whether it is currently daylight at the location.",
      "output_format": "The output is a single, non-paginated JSON object. Key information is nested within the `currentWeather` object. The response also echoes the input `parameters` used for the query. Based on the examples, all fields seem to be non-nullable."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/avgprice\"\nquerystring = {\"outputsize\": 30, \"interval\": \"1min\", \"symbol\": \"AAPL\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: AVGPRICE",
    "tool description": "Calculates the average price using the formula (open + high + low + close) / 4. This endpoint is part of a financial data platform offering real-time and historical data for stocks, forex, crypto, ETFs, and indices, empowering developers to access comprehensive market insights for analysis and application development.",
    "API name": "AVGPRICE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides historical time-series data for the average price of a financial instrument, such as a stock, forex pair, or cryptocurrency. The output consists of metadata about the requested symbol and interval, and a list of data points. Each data point includes a specific datetime and the corresponding average price, calculated as (open + high + low + close) / 4, for that period.",
      "output_format": "The output is a single JSON object containing two main keys: `meta` and `values`. `meta` is an object holding metadata about the query, like the symbol, interval, and currency. `values` is a JSON array of objects, sorted in reverse chronological order. Each object in the array represents a single time period and contains a `datetime` (string) and an `avgprice` (a string-encoded number)."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: ADD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for ADD calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DIV",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for DIV calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MULT",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for MULT calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUB",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for SUB calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CORREL",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for correlation analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BETA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for beta calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for SMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for EMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: WMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for WMA calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for RSI calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output contains financial instrument data that can be used as the symbol input for MACD calculations"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AVGPRICE output provides financial instrument data that can be used as the symbol input for Bollinger Bands calculations"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/plus_dm\"\nquerystring = {\"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: PLUS_DM",
    "tool description": "Calculates the Plus Directional Movement (PLUS_DM) by subtracting the previous high price from the current high price. This endpoint is part of a financial data API that provides instant access to real-time and historical data for stocks, forex, crypto, ETFs, indices, and more, leveraging market data feeds to support technical analysis and trading decisions. The calculation uses precise price data to help developers build tools for financial market evaluation, with detailed documentation available at [twelvedata.com/docs](https://twelvedata.com/docs) and API key setup instructions [here](https://twelvedata.com/apikey).",
    "API name": "PLUS_DM",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides the Plus Directional Movement (PLUS_DM) for a specific financial instrument (stock, forex, or crypto) over a series of time intervals. The output includes a list of PLUS_DM values, each associated with a specific datetime, sorted in reverse chronological order. This data is intended for use in technical analysis to gauge the strength of an upward price trend.",
      "output_format": "The output is a single JSON object with two top-level keys: `meta` and `values`. The `meta` key contains a JSON object with metadata about the financial symbol and the indicator parameters. The `values` key contains a JSON array of data point objects, where each object has a `datetime` (string) and a `plus_dm` (string-formatted number). The `values` array is sorted by date in descending order."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol can be derived from the meta section of PLUS_DM output"
          },
          {
            "name": "interval",
            "description": "The interval can be derived from the meta section of PLUS_DM output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADXR",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol can be derived from the meta section of PLUS_DM output"
          },
          {
            "name": "interval",
            "description": "The interval can be derived from the meta section of PLUS_DM output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: DX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol can be derived from the meta section of PLUS_DM output"
          },
          {
            "name": "interval",
            "description": "The interval can be derived from the meta section of PLUS_DM output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MINUS_DI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol can be derived from the meta section of PLUS_DM output"
          },
          {
            "name": "interval",
            "description": "The interval can be derived from the meta section of PLUS_DM output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MINUS_DM",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol can be derived from the meta section of PLUS_DM output"
          },
          {
            "name": "interval",
            "description": "The interval can be derived from the meta section of PLUS_DM output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: PLUS_DI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol can be derived from the meta section of PLUS_DM output"
          },
          {
            "name": "interval",
            "description": "The interval can be derived from the meta section of PLUS_DM output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol can be derived from the meta section of PLUS_DM output"
          },
          {
            "name": "interval",
            "description": "The interval can be derived from the meta section of PLUS_DM output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Youtube Music API (Detailed)",
    "parent tool description": "Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.",
    "tool name": "Youtube Music API (Detailed): Get Song",
    "tool description": "Returns metadata and streaming information about a song or video, providing comprehensive details on the content's attributes and playback capabilities. This endpoint leverages the detailed YouTube Music API, which offers extensive access to music-related data including lyrics, trends, albums, artists, songs, users, and playlists across the YouTube Music platform. The returned information helps applications integrate with or analyze content from one of the world's largest music streaming services.",
    "required_parameters": [
      {
        "name": "video_id",
        "type": "STRING",
        "description": "",
        "default": "RS0FhoKAHvA"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://youtube-music-api-detailed.p.rapidapi.com/get_song\"\nquerystring = {\"video_id\": video_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get Song",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object containing detailed metadata and streaming information for a song or video from YouTube Music. This includes data such as content description, a list of countries where it's available, deep-linking information for mobile applications, and content category. The information is designed to help applications integrate with or analyze content from the YouTube Music platform.",
      "output_format": "The output is a single, deeply nested JSON object. The root key is 'microformat', which contains a 'microformatDataRenderer' object with the song's metadata. Fields can be strings, booleans, or arrays of strings (like 'availableCountries'). The provided examples are truncated, so the full structure is not visible."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use song title/artist information from YouTube Music API output"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Can use song title/artist information from YouTube Music API output"
          }
        ]
      },
      {
        "tool name": "SoundCloud Scraper: Download Lyrics on Spotify (2 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "Can use song information to find equivalent on SoundCloud"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Song Related",
        "connect params": [
          {
            "name": "browse_id",
            "description": "Can use browse_id if available in the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      },
      {
        "name": "timezone",
        "type": "STRING",
        "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
        "default": "auto"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/astro\"\nquerystring = {\"lon\": lon, \"lat\": lat, \"timezone\": timezone}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: astro",
    "tool description": "Retrieves global sun and moon data (sunrise/sunset, moonrise/moonset, moon phase) for the next 30 days based on GPS coordinates or place_id from location endpoints. This leverages the parent tool's hyper-local weather forecasting capabilities, powered by machine learning models and real-time data updates, to deliver accurate astronomical insights tailored to specific locations.",
    "API name": "astro",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides astronomical data for a given location, specified by latitude and longitude. The output includes daily information for the next 30 days, covering sunrise/sunset times, moonrise/moonset times, and the moon phase for each day. This information is intended to be used for planning or analysis that depends on daylight hours or lunar cycles.",
      "output_format": "The primary output is a JSON object. A successful response contains location metadata (`lat`, `lon`, `timezone`, etc.) and a nested `astro` object. The `astro.data` key holds a JSON array where each element is an object representing a single day's astronomical data. Timestamps for rise and set events are provided in ISO 8601 format. An unsuccessful request, such as one with missing parameters, returns a simple JSON object with a `detail` key containing an error message string."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's location metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cost of living and prices",
    "parent tool description": "Prices for more then 60 goods and services for more then 8000+ cities around the world from TravelTables.com",
    "tool name": "Cost of living and prices: Cities",
    "tool description": "Retrieves a comprehensive list of all cities in the database along with their corresponding country names, IDs, latitude, and longitude coordinates. This endpoint accesses TravelTables.com's extensive global database covering over 8000+ cities worldwide, which serves as the foundation for their price comparison service that tracks more than 60 different goods and services across these locations. The geographical data provided by this endpoint enables location-based cost analysis and travel planning.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cost-of-living-and-prices.p.rapidapi.com/cities\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cost-of-living-and-prices.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Cities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of over 8000 cities from a global database. For each city, the output provides its name, the country it belongs to, a unique identifier (ID), and its precise geographical coordinates (latitude and longitude). This data is intended to be used as a foundational reference for location-based queries, such as cost analysis or travel planning.",
      "output_format": "The output is expected to be a JSON array, where each element is an object representing a single city. Each city object contains keys for the city's ID, name, country, latitude, and longitude. Given the large number of cities mentioned (8000+), the API might employ pagination to deliver the results in chunks, though this is not explicitly stated."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use city name and country from the source tool output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool output"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool output"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city name from the source tool output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "Can use latitude from the source tool output"
          },
          {
            "param_name": "longitude",
            "description": "Can use longitude from the source tool output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city name from the source tool output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Anime News Net",
    "parent tool description": "This anime news API allows users to get details about the latest anime news, including the news headline, category, publication date and a brief introduction. It also provides an image relevant to the news item and the full content of the news item. Users can use this API to stay updated on the latest anime news easily and quickly",
    "tool name": "Anime News Net: Get anime news list",
    "tool description": "Retrieves the most up-to-date anime list in real time, providing current information on available anime titles. This anime news API gives users access to comprehensive anime information as part of a service that delivers the latest anime news, including headlines, categories, publication dates, and brief introductions. The API also includes relevant images and full content for news items, enabling users to stay effortlessly informed about both current anime titles and breaking news in the anime world.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://anime-news-net.p.rapidapi.com/api/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"anime-news-net.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get anime news list",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of recent anime-related news articles. Each article in the list includes a title, summary, publication date, category, and topic. Additionally, it provides a URL to the full article, a link to a thumbnail image, and API-specific details for potentially fetching more information.",
      "output_format": "The output is a JSON array of objects. Each object represents a news article and contains two nested JSON objects: `article` and `details_api`. The `article` object holds the main content (title, summary, URL, etc.), while the `details_api` object contains metadata for subsequent API calls. Some string values, such as `title`, `category`, and `topic`, contain leading and trailing newline characters (`\\n`)."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use anime titles or topics from the anime news articles as search terms"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can search for anime movie titles or related content mentioned in the anime news"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use anime titles or topics from the anime news as search keywords"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/balance-sheet\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
    "tool description": "Retrieves balance sheet data for stocks, including assets, liabilities, and equity, by company ticker or identifier. This endpoint is part of the Mboum Finance Official API, which offers comprehensive financial data such as stocks, options, ETFs, mutual funds, SEC filings, and news. It leverages real-time market data and extensive financial databases to provide accurate, up-to-date information, enabling investors to assess a company's financial health and make informed decisions.",
    "API name": "stock/balance-sheet/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides detailed historical balance sheet data for a specified stock ticker. The output includes both quarterly (`balanceSheetHistoryQuarterly`) and annual (`balanceSheetHistory`) reports, itemizing assets, liabilities, and equity. This allows users to perform in-depth financial analysis and evaluate a company's financial health over time.",
      "output_format": "The response is a nested JSON object. A top-level `body` key contains the financial data. Inside `body`, `balanceSheetHistoryQuarterly` and `balanceSheetHistory` objects each contain a `balanceSheetStatements` array. Each element in the array is a report for a single period. Financial figures within a report are presented as objects with raw numeric values (`raw`) and multiple formatted string representations (`fmt`, `longFmt`). The presence of specific financial metrics can vary between reports."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query daily time series data for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query weekly time series data for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query current price quotes for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query intraday time series data for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to query monthly time series data for the same stock"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to calculate technical indicators for the same stock"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve historical price data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve earnings history"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve complementary income statements"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve earnings details"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve institutional ownership details"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve insider holder information"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve key statistics"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve insider holder information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve company profile information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve calendar events"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve institutional ownership details"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The balance sheet data contains company ticker information that can be used to retrieve earnings information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Easy Weather",
    "parent tool description": "Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.",
    "required_parameters": [
      {
        "name": "longitude",
        "type": "STRING",
        "description": "",
        "default": "103.86"
      },
      {
        "name": "latitude",
        "type": "STRING",
        "description": "",
        "default": "1.28"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://easy-weather1.p.rapidapi.com/daily/5\"\nquerystring = {\"longitude\": longitude, \"latitude\": latitude}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"easy-weather1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Easy Weather: Daily forecast (5 days)",
    "tool description": "Generates a 5-day daily weather forecast based on the provided latitude and longitude. This endpoint is part of a comprehensive weather service that delivers detailed current conditions, hourly forecasts, daily forecasts, and alerts in JSON format, leveraging real-time meteorological data to enable precise, location-specific planning and decision-making.",
    "API name": "Daily forecast (5 days)",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a 5-day weather forecast for a given geographical coordinate. The output is a JSON object containing metadata and a `forecastDaily` object, which holds an array of daily forecast data. Each daily forecast includes a summary with min/max temperatures, UV index, and precipitation details. It is further broken down into more granular `daytimeForecast` and `overnightForecast` objects, which provide specifics like cloud cover, humidity, and wind conditions.",
      "output_format": "The output is a single, non-paginated JSON object. The core forecast data is located in the `forecastDaily.days` key, which is an array of objects, one for each of the 5 forecast days. Each daily forecast object contains two further nested objects, `daytimeForecast` and `overnightForecast`, detailing conditions for those periods. All timestamps are in ISO 8601 format."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Kubric: The Comprehensive Movie News API",
    "parent tool description": "Stay up-to-date with Kubric, your ultimate movie news API. Access top sources, search by title or keyword, and experience visually engaging cinema updates and insights.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "superman"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "",
        "default": "10"
      },
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      }
    ],
    "code": "import requests\n\nurl = \"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/basic/search\"\nquerystring = {\"q\": \"superman\", \"limit\": \"10\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kubric-the-comprehensive-movie-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
    "tool description": "The /news/basic/search endpoint searches for movie news articles by title or keyword. This is part of Kubric, your ultimate movie news API, which aggregates data from top sources to deliver visually engaging cinema updates and insights, ensuring you stay informed with personalized and timely information.",
    "API name": "Basic Search",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool returns a list of movie news articles based on a search query. Each article in the results includes its title, a snippet, the source publication, author, publication date, and a URL to the full article. The output also contains metadata like a unique ID, an image URL, and the sentiment of the article.",
      "output_format": "The output is a JSON object with a main `body` field. This `body` contains a `results` array, where each element is an object representing a single news article. A `totalArticles` field in the `body` suggests that the results are paginated, as it indicates a number higher than the count of items in the `results` array."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use movie titles, company names, or industry keywords from the source tool's results"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Can use movie titles or keywords from the source tool's results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Radio World - 75,000+ Worldwide FM Radio stations..",
    "parent tool description": "This is one of the largest collection of FM Radios API from around the world. Listen Updated 79,000+ Radio stations. All the Stations are Updating Daily & Weekly basis, New stations are Adding As soon as possible. At least 100+ Stations Are adding and 1000+ Stations are fixing to this API Weekly (This is minium ratio).",
    "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: getHomePage",
    "tool description": "Retrieves a limited number of radio stations to display on your landing or home page based on a specified limit parameter. This endpoint provides an easy way to showcase selected stations without additional development work. It draws from one of the world's largest collections of FM radio stations, featuring over 79,000 stations from around the globe that are updated daily and weekly. The database continuously expands with approximately 100+ new stations added and 1000+ stations fixed weekly, ensuring you always have access to fresh, functioning radio content for your website's front page.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Item limitation on landing page. (default: 10)",
        "default": "10"
      }
    ],
    "code": "import requests\n\nurl = \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_home.php\"\nquerystring = {\"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "getHomePage",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output is a list of featured radio stations, designed for display on a website's home page. For each station, it provides comprehensive details including its unique ID, name, image, streaming URL, genre, and country of origin (name, ID, and flag icon). A top-level 'status' field indicates the success of the API request.",
      "output_format": "The output is a single JSON object. This object contains a key named \"featured\", which holds a JSON array of radio station objects. Each object within the array has a flat structure with key-value pairs containing station details. There is no evidence of pagination or cursoring in the output."
    },
    "connected tools": [
      {
        "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: searchStation",
        "connect params": [
          {
            "name": "keyword",
            "description": "The station name from the source tool's output could be used as a search keyword"
          }
        ]
      },
      {
        "tool name": "Radio World - 75,000+ Worldwide FM Radio stations..: getStationByCountry",
        "connect params": [
          {
            "name": "country_id",
            "description": "The country ID from the source tool's output could be used to filter stations by country"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "The station name from the source tool's output could be used as a search term"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "The station name or genre from the source tool's output could be used as a search query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapToolkit",
    "parent tool description": "A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "kml",
        "type": "STRING",
        "description": "",
        "default": "forward geometry K-UrlML"
      },
      {
        "name": "geometry",
        "type": "STRING",
        "description": "",
        "default": "forward geometry GeoJSON"
      },
      {
        "name": "gpx_backward",
        "type": "STRING",
        "description": "",
        "default": "backward geometry GPX-Url"
      },
      {
        "name": "kml_backward",
        "type": "STRING",
        "description": "",
        "default": "backward geometry KML-Url"
      },
      {
        "name": "callback",
        "type": "STRING",
        "description": "",
        "default": "JSONP Callback Functionname"
      },
      {
        "name": "gpx",
        "type": "STRING",
        "description": "",
        "default": "forward geometry GPX-Url"
      },
      {
        "name": "end",
        "type": "STRING",
        "description": "",
        "default": "lng,lat"
      },
      {
        "name": "start",
        "type": "STRING",
        "description": "",
        "default": "lng,lat"
      },
      {
        "name": "geometry_backward",
        "type": "STRING",
        "description": "",
        "default": "backward geometry GeoJSON"
      },
      {
        "name": "language",
        "type": "STRING",
        "description": "",
        "default": "de"
      }
    ],
    "code": "import requests\n\nurl = \"https://maptoolkit.p.rapidapi.com/enhance/routing\"\nquerystring = {\"kml\": kml, \"geometry\": geometry, \"gpx_backward\": gpx_backward, \"kml_backward\": kml_backward, \"routeType\": routetype, \"callback\": callback, \"gpx\": gpx, \"end\": end, \"start\": start, \"geometry_backward\": geometry_backward, \"language\": language}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"maptoolkit.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "MapToolkit: Routing Enhancement",
    "tool description": "Generates a routing along a specific cycleway using detailed map data and cycleway information. This leverages the toolkit's routing capabilities, part of a comprehensive mapping service that includes map tiles, geocoding, static maps, and elevation data, to create precise and customized bike routes.",
    "API name": "Routing Enhancement",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool's output provides detailed information for a bicycle route along a specific cycleway. This likely includes the route's path, represented as a series of geographic coordinates (a polyline), turn-by-turn navigation instructions, and summary data such as the total distance and estimated travel time. This data is intended for use in applications that display routes on a map or provide navigational guidance.",
      "output_format": "The provided examples are empty strings, which makes the format highly uncertain. A standard API for this purpose would typically return a JSON object containing keys for route geometry, steps, and a summary. However, the empty strings could imply the output is a raw string (like an encoded polyline or a route ID), that no standard data is returned, or that the examples represent a null/error state. The exact structure is unknown due to this ambiguity."
    },
    "connected tools": [
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "routeresultid",
            "description": "Could use the route data to display the bicycle path on a static map"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "path",
            "description": "Could use the route's polyline coordinates to draw the bicycle path on a static map"
          },
          {
            "name": "geojson",
            "description": "Could use the route's geometry data to render the bicycle path on a map"
          }
        ]
      },
      {
        "tool name": "TrueWay Directions: FindDrivingPath",
        "connect params": [
          {
            "name": "waypoints",
            "description": "Could use key points from the bicycle route as waypoints for alternative routing"
          }
        ]
      },
      {
        "tool name": "TrueWay Directions: FindDrivingRoute",
        "connect params": [
          {
            "name": "stops",
            "description": "Could use key points from the bicycle route as stops for alternative routing"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Elevation",
        "connect params": [
          {
            "name": "points",
            "description": "Could use the route's coordinates to get detailed elevation data along the path"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Could use points from the bicycle route to identify county boundaries"
          },
          {
            "name": "latitude",
            "description": "Could use points from the bicycle route to identify county boundaries"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/earnings\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/earnings/{stock}",
    "tool description": "Retrieves earnings details for a specified stock, including revenue, profit, and key financial metrics. This endpoint is part of the Mboum Finance Official API, which offers comprehensive financial data covering stocks, options, ETFs, mutual funds, SEC filings, and market news. It leverages real-time financial databases and SEC regulatory filings to deliver accurate, up-to-date earnings information, enabling investors to make informed decisions based on reliable financial performance data.",
    "API name": "stock/earnings/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides comprehensive earnings data for a specified stock. It includes both historical yearly and quarterly reports on revenue and total earnings (profit). Additionally, it presents a quarterly comparison of actual versus estimated earnings per share (EPS) and provides the estimated dates for future earnings announcements. This information is intended to help investors analyze a company's financial performance over time and against market expectations.",
      "output_format": "The output is a single, deeply nested JSON object. The main data is located under the `body.earnings` path. Financial figures like revenue and earnings are consistently presented in a nested object with three fields: `raw` (a raw number), `fmt` (a short-form formatted string, e.g., '76.03B'), and `longFmt` (a full, comma-separated string). The response contains arrays for `yearly` and `quarterly` data but does not use pagination."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: search",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Logo",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the stock symbol from the earnings data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Realtime Stock Data",
    "parent tool description": "The worlds cheapest Realtime stock data provider",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "string",
        "description": "",
        "default": "aapl"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://realtime-stock-data.p.rapidapi.com/index-trend/{symbol}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"realtime-stock-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Realtime Stock Data: index-trend",
    "tool description": "Generates labor demand forecasts by analyzing historical sales and employee data. This uses advanced quantitative methods from the world's cheapest real-time stock data provider to deliver actionable insights, leveraging real-time financial metrics to enhance workforce planning accuracy.",
    "API name": "index-trend",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides financial metrics and growth estimates for a given stock or index ticker. A successful response includes the symbol, its P/E and PEG ratios, and an array of growth estimates for various past and future periods. If the ticker is invalid or data is unavailable, the tool returns an error message.",
      "output_format": "The output is a JSON object with two top-level keys: 'source' (string) and 'data' (object). For successful queries, the 'data' object contains a 'symbol' (string), 'peRatio' (number), 'pegRatio' (number), and an 'estimates' array. This array is a list of objects, where each object has a 'period' (string) and a 'growth' (number). The 'growth' key can be omitted from these objects. In case of an error, the 'data' object contains a 'message' string."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: search",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Logo",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mapilion - Vector and Raster Map Tiles",
    "parent tool description": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
    "required_parameters": [
      {
        "name": "type",
        "type": "string",
        "description": "",
        "default": "v3"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/tilejson/{type}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Mapilion - Vector and Raster Map Tiles: Get Tile Json",
    "tool description": "Returns tile JSON for specified styles (v3, hillshading-v1, hillshading-v2). This is part of Mapilion's service, which provides scalable vector and raster map tiles leveraging OpenStreetMap and OpenMapTiles data, enabling developers to access customizable map representations for diverse applications.",
    "API name": "Get Tile Json",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object containing metadata for a map tileset, conforming to the TileJSON specification. This object provides essential configuration details, such as the URL template for fetching map tiles, the data format (e.g., 'pbf' for vector, 'png' for raster), zoom levels, and required attribution. This information is intended to be used by mapping client libraries (like MapLibre or Leaflet) to render a map based on the selected style.",
      "output_format": "The output is a single, non-array JSON object. The structure follows the TileJSON standard. A key named `tiles` contains an array with a single URL template string. For vector tile outputs, there is a `vector_layers` key which contains an array of objects detailing the data layers within the tileset. The output is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Mapilion - Vector and Raster Map Tiles: Get Vector Tile",
        "connect params": [
          {
            "name": "z",
            "description": "The source tool provides zoom level information that can be used for fetching appropriate vector tiles"
          },
          {
            "name": "x",
            "description": "The source tool provides tile URL templates that include x coordinates for vector tiles"
          },
          {
            "name": "y",
            "description": "The source tool provides tile URL templates that include y coordinates for vector tiles"
          }
        ]
      },
      {
        "tool name": "Mapilion - Vector and Raster Map Tiles: Get Hillshading Tile",
        "connect params": [
          {
            "name": "z",
            "description": "The source tool provides zoom level information that can be used for fetching appropriate hillshading tiles"
          },
          {
            "name": "x",
            "description": "The source tool provides tile URL templates that include x coordinates for hillshading tiles"
          },
          {
            "name": "y",
            "description": "The source tool provides tile URL templates that include y coordinates for hillshading tiles"
          },
          {
            "name": "version",
            "description": "The source tool mentions hillshading versions (v1, v2) that can be specified when fetching tiles"
          }
        ]
      },
      {
        "tool name": "Mapilion - Vector and Raster Map Tiles: Get Fonts",
        "connect params": [
          {
            "name": "fontstack",
            "description": "The source tool's TileJSON may include font information needed for rendering vector tiles"
          },
          {
            "name": "range",
            "description": "The source tool's TileJSON may include font range information needed for rendering vector tiles"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "center",
            "description": "The source tool provides center coordinates that can be used to position a static map"
          },
          {
            "name": "zoom",
            "description": "The source tool provides zoom level information that can be used for generating static maps"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapFanAPI - Search",
    "parent tool description": "MapFan API \u306e\u691c\u7d22API\u3067\u3059\u3002\u5404\u7a2e\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\uff08\u4f4f\u6240\u3001\u30b9\u30dd\u30c3\u30c8\u30fbPOI\u3001\u99c5\u3001\u90f5\u4fbf\u756a\u53f7\uff09\u3084\u3001\u30ea\u30d0\u30fc\u30b9\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\uff08\u7def\u5ea6\u7d4c\u5ea6\u304b\u3089\u4f4f\u6240\u53d6\u5f97\uff09\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306e\u4f4f\u6240\u8aa4\u5165\u529b\u5bfe\u7b56\u306b\u6709\u7528\u306a\u4f4f\u6240\u968e\u5c64\u691c\u7d22\u3082\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002",
    "required_parameters": [
      {
        "name": "name",
        "type": "STRING",
        "description": "### \u691c\u7d22\u5bfe\u8c61\u306e\u99c5\u540d\u79f0\u6587\u5b57\u5217\n\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u8907\u6570\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u8907\u6570\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u3001AND\u691c\u7d22\u3068\u306a\u308a\u307e\u3059\u3002\n\n#### \u6ce8\u8a18\n- URL\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305fUTF-8\u306e\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n- \u672b\u5c3e\u306e \u201c\u99c5\u201d\u306f\u7701\u7565\u53ef\u80fd\u3067\u3059\u304c\u3001\u7701\u7565\u3059\u308b\u3053\u3068\u3067\u7570\u306a\u308b\u691c\u7d22\u7d50\u679c\u3068\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002",
        "default": "\u65b0\u5bbf"
      }
    ],
    "optional_parameters": [
      {
        "name": "pos",
        "type": "NUMBER",
        "description": "### \u53d6\u5f97\u958b\u59cb\u4f4d\u7f6e\n\u691c\u7d22\u7d50\u679c\u306e\u8fd4\u5374\u958b\u59cb\u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`\n\u203b1\u4ef6\u76ee\u304b\u3089 `num` \u3067\u6307\u5b9a\u3055\u308c\u305f\u4ef6\u6570\u5206\u306e\u7d50\u679c\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "fmt",
        "type": "ENUM",
        "description": "### \u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n|\u30d5\u30a9\u30fc\u30de\u30c3\u30c8|\u5024|\n|---|---|\n|JSON|json |\n|XML|xml|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`json`\n\n#### \u6ce8\u8a18\n`callback`\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\u304c\u7834\u68c4\u3055\u308c\u3001JSONP\u5f62\u5f0f\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "gateway",
        "type": "ENUM",
        "description": "### \u99c5\u51fa\u5165\u53e3\u691c\u7d22\u8a2d\u5b9a\n\u99c5\u51fa\u5165\u53e3\u3092\u691c\u7d22\u5bfe\u8c61\u306b\u542b\u3081\u308b\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n|\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u542b\u3081\u306a\u3044|0|\n|\u542b\u3081\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`",
        "default": ""
      },
      {
        "name": "callback",
        "type": "STRING",
        "description": "### JSONP\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u7528\u95a2\u6570\u540d\n\u95a2\u6570\u540d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306fJSONP\u5f62\u5f0f\u3067\u7d50\u679c\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001`fmt`\u3067\u6307\u5b9a\u3055\u308c\u305f\u5f62\u5f0f\u3067\u7d50\u679c\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "num",
        "type": "NUMBER",
        "description": "### \u53d6\u5f97\u4ef6\u6570\n\u691c\u7d22\u7d50\u679c\u306e\u8fd4\u5374\u4ef6\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5927|500|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`50`\n\n#### \u6ce8\u8a18\n`gateway=1`\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\uff08\u99c5\u51fa\u5165\u53e3\u3092\u691c\u7d22\u5bfe\u8c61\u306b\u542b\u3081\u305f\u5834\u5408\uff09\u3001\u99c5\u691c\u7d22\u7d50\u679c\u3001\u99c5\u51fa\u5165\u53e3\u691c\u7d22\u7d50\u679c\u305d\u308c\u305e\u308c\u306e\u8fd4\u5374\u4ef6\u6570\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://mapfanapi-search.p.rapidapi.com/sta\"\nquerystring = {\"name\": name}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapfanapi-search.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "MapFanAPI - Search: sta",
    "tool description": "Provides station search functionality based on location queries, leveraging the MapFan API's broader geocoding capabilities. This endpoint utilizes the API's comprehensive address and point-of-interest indexing to retrieve accurate station data, supporting tasks like route planning and location discovery. As part of the MapFan Search API, it benefits from integrated reverse geocoding and address hierarchy validation to ensure reliable results even with ambiguous input, making it a critical tool for applications requiring precise geographic information.",
    "API name": "sta",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a list of train stations matching a location query. For each station found, it provides the name (often including the specific train line), a phonetic reading in Japanese (yomi), and precise geographic coordinates (latitude and longitude). The output also includes various identification codes for the station type, operating corporation, and train line, along with metadata on the total number of results found.",
      "output_format": "The output is a single JSON object. The primary data is located in the \"results\" key, which contains a JSON array of station objects. The top-level keys `hit`, `start_pos`, and `end_pos` indicate support for pagination. All values in the examples are strings or numbers; no null values are observed."
    },
    "connected tools": [
      {
        "tool name": "boundaries-io: Query by Location for County boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Zipcode boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Neighborhood boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "boundaries-io: Query by Location for Place boundaries",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: calcroute",
        "connect params": [
          {
            "name": "start",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as a starting point"
          },
          {
            "name": "destination",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as a destination point"
          },
          {
            "name": "via",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as waypoints"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: multicalcroute",
        "connect params": [
          {
            "name": "start",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as a starting point"
          },
          {
            "name": "destination",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as a destination point"
          },
          {
            "name": "via",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as waypoints"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: nearroadinfo",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: altcalcroute",
        "connect params": [
          {
            "name": "start",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as a starting point"
          },
          {
            "name": "destination",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as a destination point"
          },
          {
            "name": "via",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output as waypoints"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Search: spotarea",
        "connect params": [
          {
            "name": "lonlat",
            "description": "Can use the longitude,latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Routing",
        "connect params": [
          {
            "name": "points",
            "description": "Can use the latitude,longitude from station coordinates in MapFanAPI output as waypoints"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Elevation",
        "connect params": [
          {
            "name": "points",
            "description": "Can use the [latitude,longitude] from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "Places Nearby a Coordinates: Nearby",
        "connect params": [
          {
            "name": "lon",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "Reverse Geocoding and Geolocation Service: GetTimezone",
        "connect params": [
          {
            "name": "longitude",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "latitude",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "TrueWay Geocoding: ReverseGeocode",
        "connect params": [
          {
            "name": "location",
            "description": "Can use the latitude,longitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "Address From To Latitude Longitude: Coordinates  (latitude longitude) to Address",
        "connect params": [
          {
            "name": "lng",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "Geocode - Forward and Reverse: Reverse geocode",
        "connect params": [
          {
            "name": "lng",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/reversegeocoding",
        "connect params": [
          {
            "name": "lon",
            "description": "Can use the longitude from station coordinates in MapFanAPI output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from station coordinates in MapFanAPI output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cloud Cast",
    "parent tool description": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "New York"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cloud-cast.p.rapidapi.com/wind/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cloud-cast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Cloud Cast: Get wind speed",
    "tool description": "Retrieves the current wind speed for a specified city. This is part of Cloudcast, a real-time weather API built with Node.js and Express that provides comprehensive meteorological data, including temperature, humidity, and wind speed, enabling users to access accurate and up-to-date weather information efficiently.",
    "API name": "Get wind speed",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides the current wind speed and direction for a given location. A successful response contains a numerical value for the speed and the direction in degrees. In case of a service-level error, such as the application not being available, the tool returns an HTML error page instead of structured data.",
      "output_format": "The successful output is a flat JSON object containing two keys: 'speed' (float) and 'deg' (integer). In case of a service failure, the output is an HTML document. The provided examples of successful outputs are strings that resemble Python dictionaries (using single quotes) but are intended to be interpreted as JSON objects. The output is not paginated or nested."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "While not directly using wind speed, this tool provides comprehensive weather data that could be complemented by the wind speed information from the source tool"
          },
          {
            "name": "lon",
            "description": "While not directly using wind speed, this tool provides comprehensive weather data that could be complemented by the wind speed information from the source tool"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "This tool provides weather updates that could be enhanced with the specific wind speed data from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/min\"\nquerystring = {\"symbol\": \"AAPL\", \"outputsize\": 30, \"series_type\": \"close\", \"interval\": \"1min\", \"time_period\": 9, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MIN",
    "tool description": "Retrieves the minimum value of a financial instrument over a specified period, requiring parameters like symbol and interval. This endpoint leverages Twelve Data's financial data API, which provides real-time and historical data on stocks, forex, crypto, ETFs, and indices, to deliver accurate minimum value insights. By accessing a comprehensive dataset spanning multiple asset classes, developers can efficiently analyze price trends and make informed decisions, streamlining integration into applications that require precise financial analytics.",
    "API name": "MIN",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns time-series data for the minimum value of a specified financial instrument (e.g., stock, forex, crypto) over a defined lookback period. The output includes a list of data points, each with a timestamp and the corresponding minimum value. It also contains metadata about the instrument, the interval (e.g., 1day, 4h), and the parameters used for the minimum calculation, making it useful for technical analysis and identifying price support levels.",
      "output_format": "The output is a single JSON object containing two primary keys: 'meta' and 'values'. The 'meta' key holds a nested object with metadata about the query and the financial instrument. The 'values' key contains an array of objects, where each object represents a time-series data point with a 'datetime' and the calculated 'min' value, which is returned as a string. There is no indication of pagination in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Customizable Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MAX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the MIN output metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the MIN output metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the MIN output metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the MIN output metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the MIN output metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          },
          {
            "name": "interval",
            "description": "The interval from the MIN output metadata can be used as input"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MIN output can be used as input"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Webull",
    "parent tool description": "Query public data for investment products including stocks, fractional shares, options, ETFs, and ADRs as on webull.com",
    "required_parameters": [
      {
        "name": "ids",
        "type": "STRING",
        "description": "The value of tickerId field returned in other endpoints, such as .../stock/search or .../market/get-common-ranking or .../market/get-top-active or .../market/get-top-gainers or etc... Separated by comma for multiple tickers",
        "default": "913256135,913303964,913353822,913354090"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://webull.p.rapidapi.com/market/get-realtime-quotes\"\nquerystring = {\"ids\": ids}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webull.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Webull: market/get-realtime-quotes",
    "tool description": "Retrieves real-time stock quotes for multiple symbols by querying public data from webull.com, which provides investment product information including stocks, fractional shares, options, ETFs, and ADRs. This enables users to efficiently monitor and compare stock prices, leveraging the platform's comprehensive financial data to support informed investment decisions.",
    "API name": "market/get-realtime-quotes",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output is an array of JSON objects, where each object provides a comprehensive, real-time quote for a specific financial instrument, such as a stock or an index. The data encompasses current pricing (close, change, high, low), trading volume, and for stocks, key fundamental metrics like P/E ratio, EPS, and dividend yield. This information is designed to help users monitor market activity and evaluate investment opportunities.",
      "output_format": "The output is a JSON array, where each element is an object representing a single security. The structure of these objects is not uniform; the fields present depend on the type of instrument (e.g., a stock object contains fields like 'pe' and 'eps' which are absent in an index object). Some fields, like 'latestEarningsDate', can contain empty strings, indicating potential nullability."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the security of your choice. For example: symbol=MSFT"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/cashflow-statement/{stock}_",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": ""
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ..."
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Blaze Verify",
    "parent tool description": "Email Verification by Emailable is astonishingly easy and low-cost. Simple, reliable, and affordable list cleaning shouldn\u2019t be hard to find. Emailable helps marketers and developers build powerful and effective marketing campaigns.<br><a href=\"https://emailable.com/docs/api?utm_source=rapid_api&utm_medium=web&utm_campaign=short_description\" style='font-weight:bold;'>View API Docs</a> | <a href=\"https://app.emailable.com/signup?utm_source=rapid_api&utm_medium=web&utm_campaign=short_description\" style='font-weight:bold;'>Click Here to Sign Up for an API Key</a>",
    "tool name": "Blaze Verify: Verify an email",
    "tool description": "Verifies a single email address, with the option to retry verification requests for up to 5 minutes if they exceed the timeout (after which additional requests count against your usage). This uses Emailable's astonishingly easy and low-cost email verification service, which provides simple, reliable, and affordable list cleaning for marketers and developers. The service helps build powerful and effective marketing campaigns by ensuring your email lists contain valid addresses, with verification results returned as soon as they're available.",
    "required_parameters": [
      {
        "name": "email",
        "type": "STRING",
        "description": "The email you want verified.",
        "default": ""
      }
    ],
    "optional_parameters": [
      {
        "name": "accept_all",
        "type": "BOOLEAN",
        "description": "Does an accept-all check. Heavily impacts API's response time. Default: false",
        "default": ""
      },
      {
        "name": "smtp",
        "type": "BOOLEAN",
        "description": "The SMTP step takes up a majority of the API's response time. If you would like to speed up your response times, you can disable this step. Default: true",
        "default": ""
      },
      {
        "name": "timeout",
        "type": "NUMBER",
        "description": "Optional timeout to wait for response (in seconds). Min: 2, Max: 30. Default: 5",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://blaze-verify.p.rapidapi.com/v1/verify\"\nquerystring = {\"email\": email}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"blaze-verify.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Verify an email",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "The tool provides a detailed verification report for a single email address. This report includes the deliverability status (e.g., 'deliverable', 'undeliverable'), a numeric score, and the reason for the status. It also returns metadata about the email, such as whether it is a disposable, role-based, or free email address, and provides technical details like the domain's MX record and SMTP provider. The output may also contain inferred personal information like name and gender.",
      "output_format": "The output is a single, non-nested JSON object. Several fields, such as `did_you_mean`, `last_name`, and `tag`, can be null if the information is not found or not applicable."
    },
    "connected tools": [
      {
        "tool name": "Alpha Email Verification: Email Checker",
        "connect params": [
          {
            "name": "email",
            "description": "Can use the verified email address from the source tool"
          }
        ]
      },
      {
        "tool name": "Email Existence Validator: Get the MX Records",
        "connect params": [
          {
            "name": "email",
            "description": "Can use the verified email address from the source tool"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: Role Account",
        "connect params": [
          {
            "name": "domain",
            "description": "Can extract and use the domain portion from the verified email"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: FreeDomain",
        "connect params": [
          {
            "name": "domain",
            "description": "Can extract and use the domain portion from the verified email"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
        "connect params": [
          {
            "name": "domain",
            "description": "Can extract and use the domain portion from the verified email"
          }
        ]
      },
      {
        "tool name": "fast Email verifier: email Check SMTP",
        "connect params": [
          {
            "name": "username",
            "description": "Can extract the username portion from the verified email"
          },
          {
            "name": "domain",
            "description": "Can extract the domain portion from the verified email"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Youtube Music API (Detailed)",
    "parent tool description": "Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.",
    "tool name": "Youtube Music API (Detailed): Get User",
    "tool description": "Retrieves a user's page from YouTube Music, including their owned videos and playlists. This endpoint accesses YouTube Music's comprehensive database of content creators and their media collections, allowing you to explore specific user profiles within the platform's vast ecosystem of lyrics, trends, albums, artists, songs, playlists, and other musical content. The data returned provides insight into a particular user's curated music collections and uploaded content.",
    "required_parameters": [
      {
        "name": "user_id",
        "type": "STRING",
        "description": "channelId of the user",
        "default": "UC44hbeRoCZVVMVg5z0FfIww"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://youtube-music-api-detailed.p.rapidapi.com/get_user\"\nquerystring = {\"user_id\": user_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get User",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool retrieves information about a specific YouTube Music user. A successful response is a JSON object containing the user's name and a list of their playlists. Each playlist in the list includes its title, description, ID, and an array of associated thumbnail images with different resolutions. In case of a server-side issue, the tool may return an HTML error page instead of the expected JSON data.",
      "output_format": "The successful output is a single JSON object. This object contains nested structures, notably a 'playlists' object which in turn contains a 'results' key holding an array of playlist objects. The presence of 'browseId' and 'params' fields suggests a potential pagination mechanism, possibly for retrieving more playlists. In case of failure, the output format changes to an HTML string."
    },
    "connected tools": []
  },
  {
    "parent tool name": "iata_airport_codes",
    "parent tool description": "A list of world iata airport codes",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://iata_airport_codes.p.rapidapi.com/RRT7bH/world_iata_airport_codes\"\nquerystring = {\"Code\": code}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"iata_airport_codes.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "iata_airport_codes: Get All iata airport codes",
    "tool description": "Retrieves a comprehensive list of all IATA airport codes, sourced from a globally maintained database. This endpoint provides access to the core dataset of the parent tool, which serves as an authoritative reference for airport code information, enabling applications to validate locations, integrate travel data, or analyze aviation networks with accurate, standardized identifiers.",
    "API name": "Get All iata airport codes",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of airport records from a global database. Each record is an object containing a unique numerical ID, the airport's three-letter IATA code, and a formatted airport name which includes the city and the code. This information is primarily used to validate airport codes or populate user interfaces with a comprehensive list of airports.",
      "output_format": "The output is a JSON array of objects. Each object represents a single airport and contains the keys 'id' (integer), 'iata_code' (string), and 'airport_name' (string). The examples do not indicate any pagination or null values."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use airport city names from the source tool"
          }
        ]
      },
      {
        "tool name": "Deutsche Bahn: Autocomplete",
        "connect params": [
          {
            "name": "query",
            "description": "Can use airport city names from the source tool"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "Can use IATA airport codes from the source tool"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportMetar",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use IATA airport codes from the source tool"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Can use IATA airport codes from the source tool"
          },
          {
            "name": "counterpart_ident",
            "description": "Can use IATA airport codes from the source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search flights locations",
        "connect params": [
          {
            "name": "name",
            "description": "Can use airport city names from the source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto complete",
        "connect params": [
          {
            "name": "string",
            "description": "Can use airport city names or IATA codes from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 500
      },
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/cars/downloadCities\"\nquerystring = {\"limit\": 500, \"resume_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download cities",
    "tool description": "Downloads a list of cities. This endpoint is part of the Priceline.com API, which enables users to search for hotels, cars, and flights, providing essential city data to support travel planning and booking processes.",
    "API name": "Download cities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output provides a paginated list of cities with their geographic and identifying details. For each city, it returns a unique Priceline ID (cityid_ppn), name, state code, country code, latitude, and longitude. This information is designed to support travel planning and booking by providing essential city data for other API functions.",
      "output_format": "The output is a deeply nested JSON object. The primary data is a list of cities, structured as a JSON object with sequential keys (e.g., 'city_0', 'city_1') rather than a JSON array. The response includes a 'resume_key' field, which indicates that the results are paginated and this key can be used to fetch the next set of cities."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Can use city name and country code from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output"
          },
          {
            "name": "lng",
            "description": "Can use longitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count  listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output"
          },
          {
            "name": "lng",
            "description": "Can use longitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's output"
          },
          {
            "name": "lng",
            "description": "Can use longitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "latitude",
        "type": "NUMBER",
        "description": "Latitude",
        "default": "50.073658"
      },
      {
        "name": "longitude",
        "type": "NUMBER",
        "description": "Longitude",
        "default": "14.418540"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/hotels/locations-by-geo\"\nquerystring = {\"latitude\": \"50.073658\", \"longitude\": \"14.418540\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Search hotels locations by geolocation",
    "tool description": "Searches locations using specified latitude and longitude coordinates. This functionality is part of the Priceline.com API, which enables travel-related searches for hotels, cars, and flights, allowing users to pinpoint exact destinations for booking services.",
    "API name": "Search hotels locations by geolocation",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns detailed location information based on a provided latitude and longitude. The output consists of a primary matched city, including its name, state, country, and precise coordinates. It also provides a list of other surrounding cities, each with similar location details and its respective distance from the searched point, which helps in identifying locations for travel bookings.",
      "output_format": "The output is a single JSON object. It contains a main `matchedCity` object with details of the primary location and a `surroundingCities` key, which holds an array of objects for nearby locations. This array can be empty. Several fields, particularly those related to state or specific points of interest, can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The matched city name, state, and country can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude from the matched city coordinates"
          },
          {
            "name": "lng",
            "description": "Longitude from the matched city coordinates"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude from the matched city coordinates"
          },
          {
            "name": "lng",
            "description": "Longitude from the matched city coordinates"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "The matched city name can be used as a search string"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The matched city name can be used as a search parameter"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "flnr",
        "type": "STRING",
        "description": "The flight number to request",
        "default": "DL456"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/flight/search\"\nquerystring = {\"flnr\": flnr}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: flightSearch",
    "tool description": "Retrieves a list of flights for a specific flight number, with optional date filters to narrow results, ordered by departure date ascending, and includes the next departure time for pagination. This endpoint is part of Flightera's service, which provides flight status, on-time performance, and statistics. It leverages the parent tool's data to ensure accurate flight information retrieval, enforcing subscription-level date range restrictions to deliver reliable results.",
    "API name": "flightSearch",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool output is a JSON object that provides information about flights. In a successful case, it is expected to return a list of flight data, including status and performance statistics, ordered by departure date. In an error case, such as when the requested date is outside the user's subscription limits, it returns a JSON object with an 'Error' key and a descriptive message.",
      "output_format": "The output is a JSON object. The provided examples only illustrate the error format, which consists of a single key 'Error' with a string value. Based on the description, a successful response would likely contain a list of flight objects and a 'next_departure_time' key for pagination."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: flightInfo",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          },
          {
            "name": "date",
            "description": "The date, if omitted the current flight will be returned"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: flightStatistics",
        "connect params": [
          {
            "name": "flnr",
            "description": "The flight number to request"
          },
          {
            "name": "aptFrom",
            "description": "Departure airport ident"
          },
          {
            "name": "aptTo",
            "description": "Arrival airport ident"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Ident of the airport to request"
          },
          {
            "name": "time",
            "description": "Timestamp in UTC"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Realtime Crypto Prices",
    "parent tool description": "Get the Fastest and Realtime Crypto Rates and more...",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "",
        "default": "BTC"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://realtime-crypto-prices.p.rapidapi.com/marketcap\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"realtime-crypto-prices.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Realtime Crypto Prices: Market Capitalization",
    "tool description": "Retrieves the market capitalization of a cryptocurrency coin in US Dollars. This endpoint is part of a service that provides real-time crypto rates and additional financial metrics, leveraging fast data feeds and comprehensive blockchain analytics to deliver accurate, up-to-date information for investors and traders.",
    "API name": "Market Capitalization",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides the market capitalization of a specific cryptocurrency. It includes the coin's ticker symbol, the raw market capitalization as a large integer in US Dollars, and a human-readable, formatted string of the same value. This information is useful for investors and traders to quickly assess the market size and valuation of a cryptocurrency.",
      "output_format": "The output is a single, flat JSON object. It does not appear to use arrays, nesting, or pagination. It is assumed that all keys ('symbol', 'marketcap', 'readable_marketcap') are always present and non-null."
    },
    "connected tools": [
      {
        "tool name": "Realtime Crypto Prices: Get Realtime Volume",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides the cryptocurrency symbol which can be used directly to fetch volume data for the same coin"
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Liquidity Value",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides the cryptocurrency symbol which can be used directly to fetch liquidity data for the same coin"
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Realtime Rates",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides the cryptocurrency symbol which can be used directly to fetch price data for the same coin"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: DIGITAL_CURRENCY_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The source tool provides the cryptocurrency symbol which can be used to fetch weekly historical data for the same coin"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: CURRENCY_EXCHANGE_RATE (Crypto)",
        "connect params": [
          {
            "name": "from_currency",
            "description": "The source tool provides the cryptocurrency symbol which can be used as the from_currency parameter"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Cryptocurrencies List",
        "connect params": [
          {
            "name": "currency_base",
            "description": "The source tool provides the cryptocurrency symbol which can be used to filter the cryptocurrency list"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active/area/{area}",
    "tool description": "Retrieves a list of active weather alerts by geographical area in ATOM format, which returns items in CAP-ATOM standard. This endpoint leverages the National Weather Service API (api.weather.gov) maintained by NOAA (National Oceanic and Atmospheric Administration), providing access to critical real-time weather warnings and alerts as part of their comprehensive national weather data service. The API delivers authoritative government-issued weather alerts to help users stay informed about potentially dangerous weather conditions in specified areas.",
    "required_parameters": [
      {
        "name": "area",
        "type": "STRING",
        "description": "area: a valid area, see list in counts endpoint",
        "default": "TX"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active/area/{area}\"\nquerystring = {\"area\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/alerts/active/area/{area}",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of active weather alerts for a specified U.S. geographical area. The output, structured as a GeoJSON FeatureCollection, contains one or more alerts, each detailing the event type (e.g., Winter Storm Warning, Dense Fog), severity, affected locations, and timing (onset, expiration). This real-time information from the National Weather Service is intended to inform users about potentially hazardous weather conditions.",
      "output_format": "The output is a single JSON object following the GeoJSON FeatureCollection structure. The core data is a list of alert \"features\" under the `features` key. Each feature's `properties` object contains detailed information about a specific alert. Some fields within an alert, such as `geometry` or the `ends` timestamp, can be null. If there are no active alerts, the `features` list will likely be empty."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "long",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cloud Cast",
    "parent tool description": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "New York"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cloud-cast.p.rapidapi.com/hourly/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cloud-cast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Cloud Cast: Get hourly forecast",
    "tool description": "Gets the hourly forecast for a specified city. This is part of Cloudcast, a simple and efficient API built with Node.js and Express that provides real-time weather information, including temperature, humidity, wind speed, and other vital meteorological data, ensuring accurate and timely forecasts.",
    "API name": "Get hourly forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of future weather forecasts for a specified city, presented in 3-hour intervals. Each forecast in the list provides detailed meteorological data including temperature (in Kelvin), humidity, wind speed, cloud cover, visibility, and probability of precipitation. In the event of an API failure or an invalid request, the tool may return an HTML error page instead of weather data.",
      "output_format": "A successful response is a JSON array of objects, where each object represents a forecast for a specific 3-hour time block. These objects have a nested structure; for instance, the 'main' key contains temperature and pressure data, and the 'weather' key contains an array with weather descriptions. Some keys, such as 'rain', are conditional and may not be present in all forecast objects. A failed response can be an HTML string."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude extracted from source tool's forecast location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude extracted from source tool's forecast location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude extracted from source tool's forecast location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude extracted from source tool's forecast location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/calendar-events\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/calendar-events/{stock}",
    "tool description": "Retrieves stock calendar events by accessing real-time financial data and market schedules. This endpoint is part of the Mboum Finance Official API, which offers comprehensive tools for stocks, options, ETFs, mutual funds, SEC filings, news, and screeners. It leverages the API's integrated financial databases to provide timely information on market holidays, earnings dates, and other scheduled events, helping users stay informed about critical market timelines.",
    "API name": "stock/calendar-events/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides key calendar events for a specific stock ticker. This includes upcoming earnings announcement and call dates, along with associated analyst estimates for earnings per share (EPS) and revenue (average, low, and high). It also provides ex-dividend and dividend payment dates, helping users track important corporate events that could impact stock prices.",
      "output_format": "The output is a single, nested JSON object. Key data is located under the `body` attribute. Some fields, like `earningsDate` and `earningsCallDate`, are arrays of objects to accommodate multiple potential dates. Dividend-related fields, such as `exDividendDate` and `dividendDate`, can be either an object with date details or an empty array if no dividend is scheduled."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve weekly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve current price information"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve intraday time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve monthly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to calculate technical indicators"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve historical data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/cashflow-statement/{stock}_",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve cash flow statements"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve earnings history"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve income statements"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve earnings details"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve institutional ownership data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve insider holder information"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve balance sheet data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve options data"
          },
          {
            "name": "expiration",
            "description": "The earnings date or dividend date from calendar events can be used to find relevant options expirations"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve options data"
          },
          {
            "name": "expiration",
            "description": "The earnings date or dividend date from calendar events can be used to find relevant options expirations"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve key statistics"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve insider holder information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve company profile"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve additional calendar events"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve institutional ownership data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the calendar events can be used to retrieve earnings information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flixbus",
    "parent tool description": "A service that provides flixbus travel search, available cities, stations, timetables and routes. Site: www.flixbus.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
    "required_parameters": [
      {
        "name": "station_id",
        "type": "NUMBER",
        "description": "Station id",
        "default": "66"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flixbus.p.rapidapi.com/v1/schedule\"\nquerystring = {\"station_id\": \"66\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Flixbus: schedule",
    "tool description": "Retrieves a schedule for Flixbus routes, including departure times and destinations. This endpoint is part of a service that provides Flixbus travel search, available cities, stations, timetables, and routes, leveraging real-time data from Flixbus's network to enable efficient trip planning.",
    "API name": "schedule",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides schedule information for a specific Flixbus station. A successful response includes comprehensive details about the station itself (ID, name, address, coordinates) and a schedule object containing lists of arrivals and departures. Error responses consist of a simple object with a 'detail' key explaining the reason for the failure, such as 'Not found'.",
      "output_format": "The output is a JSON object. A successful response is a nested object with two main keys: 'schedule' and 'station'. The 'schedule' object contains 'arrivals' and 'departures', which are arrays, and an optional 'message' string. The structure of the items within the 'arrivals' and 'departures' arrays is not shown in the examples. An error response is a simple JSON object with a single 'detail' key holding a string message."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The Flixbus station location can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the Flixbus station coordinates"
          },
          {
            "name": "lng",
            "description": "Can use the longitude from the Flixbus station coordinates"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the Flixbus station coordinates"
          },
          {
            "name": "lng",
            "description": "Can use the longitude from the Flixbus station coordinates"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "Can use the station name/city as a search string"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the Flixbus station coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the Flixbus station coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Zappos Realtime Data",
    "parent tool description": "Zappos Realtime Data",
    "tool name": "Zappos Realtime Data: Zappos product detail by Product ID",
    "tool description": "Retrieves detailed, up-to-date product information from Zappos using a specific product_id as input. This endpoint connects to Zappos' realtime data system, allowing access to current product details, availability, pricing, and specifications at the moment of query. The realtime nature of this data ensures that information such as inventory levels, price changes, and product status reflects the most current state in Zappos' catalog, making it valuable for applications requiring accurate and timely product information.",
    "required_parameters": [
      {
        "name": "product_id",
        "type": "NUMBER",
        "description": "",
        "default": "9098084"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://zappos-realtime-data.p.rapidapi.com/product.php\"\nquerystring = {\"product_id\": product_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"zappos-realtime-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Zappos product detail by Product ID",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive, real-time data object for a specific Zappos product. This information includes core product details like name, brand, and description, as well as dynamic data such as availability, stock status, and available sizes. A significant portion of the output is a detailed summary of customer reviews, providing aggregated ratings, distributions for various attributes (comfort, fit, look), review counts, and the text of notable reviews.",
      "output_format": "The output is a single JSON object. The main product data is nested within a key named 'product', which is a JSON array that appears to always contain a single object. The structure is deeply nested, with complex objects for 'reviewSummary' and 'sizing'. The API uses null values, empty lists, and empty objects to represent the absence of data, such as for products with no reviews or undefined sizing."
    },
    "connected tools": [
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "The product name from Zappos product detail can be used as a search keyword"
          }
        ]
      },
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "name": "asin",
            "description": "If the Zappos product data contains an ASIN or product identifier that's compatible with Amazon"
          }
        ]
      },
      {
        "tool name": "BestBuy Product Data: BestBuyProductData",
        "connect params": [
          {
            "name": "keyword",
            "description": "The product name or brand from Zappos product detail can be used as a search keyword"
          }
        ]
      },
      {
        "tool name": "Aliexpress DataHub: Aliexpress - Item Search 3",
        "connect params": [
          {
            "name": "q",
            "description": "The product name or brand from Zappos product detail can be used as a search query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "market",
        "type": "STRING",
        "description": "",
        "default": "Tenerife"
      },
      {
        "name": "offset",
        "type": "NUMBER",
        "description": "index to start from",
        "default": "0"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket\"\nquerystring = {\"maxGuestCapacity\": maxguestcapacity, \"market\": market, \"bedrooms\": bedrooms, \"offset\": offset}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Listings by market",
    "tool description": "Retrieves 50 listing IDs and last updated timestamps for prices, availability, and ratings in a specified market, filterable by bedrooms and max guest capacity. This endpoint leverages the parent tool's access to Airbnb's daily-updated database of listings, enabling users to track pricing and availability fluctuations across 300+ client accounts. By focusing on core metadata, it provides a streamlined way to monitor critical updates without retrieving full listing details, supporting data-driven decisions through timely, structured insights.",
    "API name": "Listings by market",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output is a list of up to 50 Airbnb listings within a specified market. For each listing, it provides the unique Airbnb ID and the last known timestamps for updates to its price (`last_updated`), availability (`last_avail_check`), and ratings (`last_ratings`). This information is intended for monitoring changes and trends in key listing data without needing to retrieve full, detailed listing information.",
      "output_format": "The output is a JSON object containing a `results` key, which holds a JSON array of listing objects. Each object in the array represents a single listing. The `last_ratings` field within a listing object can be null. The description indicates a fixed return limit of 50 listings per request, and there is no evidence of pagination or cursoring in the examples."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "bedrooms",
            "connection_type": "Can use the same bedroom filter as the source"
          },
          {
            "param_name": "maxGuestCapacity",
            "connection_type": "Can use the same guest capacity filter as the source"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "bedrooms",
            "connection_type": "Can use the same bedroom filter as the source"
          },
          {
            "param_name": "maxGuestCapacity",
            "connection_type": "Can use the same guest capacity filter as the source"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "sd",
        "type": "NUMBER",
        "description": "",
        "default": 2
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "ma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 20
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/bbands\"\nquerystring = {\"sd\": 2, \"series_type\": \"close\", \"symbol\": \"AAPL\", \"ma_type\": \"SMA\", \"interval\": \"1min\", \"time_period\": 20, \"outputsize\": 30, \"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: BBANDS",
    "tool description": "Calculates Bollinger Bands\u00ae (BBANDS) to measure volatility around a moving average, using standard deviation as the key parameter. This endpoint leverages the parent tool's financial data API, which provides real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to analyze market trends with precision and context.",
    "API name": "BBANDS",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns time-series data for Bollinger Bands, a technical analysis indicator used to measure market volatility. The output consists of the upper, middle, and lower bands for a specified financial instrument (such as a stock, forex, or cryptocurrency pair) over a series of time intervals. This information helps traders and analysts identify potential price breakouts and assess whether an asset is overbought or oversold.",
      "output_format": "The output is a single JSON object with two main keys: `meta` and `values`. The `meta` key holds an object containing metadata about the requested symbol and the indicator's parameters. The `values` key contains a JSON array of data point objects, sorted in reverse chronological order. Each object in this array includes a `datetime` and the corresponding `upper_band`, `middle_band`, and `lower_band` values. All numerical values for the bands are returned as strings."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the BBANDS output can be used to query the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the BBANDS output can be used to analyze the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the BBANDS output can be used to analyze the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the BBANDS output can be used to analyze the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the BBANDS output can be used to analyze the same instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the BBANDS output can be used to analyze the same instrument"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the BBANDS output can be used for further technical analysis"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the BBANDS output can be used to get current price information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "WeatherAPI.com",
    "parent tool description": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/sports.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "WeatherAPI.com: Sports API",
    "tool description": "Retrieves a listing of upcoming sports events for football, cricket, and golf in JSON format. This endpoint is part of WeatherAPI.com's extensive APIs, which provide weather, geolocation, and sports data, leveraging its comprehensive infrastructure to deliver structured event listings for sports enthusiasts.",
    "API name": "Sports API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns lists of upcoming sporting events categorized by sport (football, cricket, and golf). For each event, it provides detailed information including the teams or players involved, the tournament name, the stadium and country of the event, and the scheduled start date and time. This data is intended to be used by applications that display sports schedules and event listings.",
      "output_format": "The output is a single JSON object. The top-level keys are the names of the sports ('football', 'cricket', 'golf'). The value for each key is a JSON array of event objects. This array can be empty if there are no upcoming events for that sport. Each event object contains string fields: 'stadium', 'country', 'region', 'tournament', 'start', and 'match'. The 'region' field was observed to be an empty string in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: find_places",
        "connect params": [
          {
            "name": "text",
            "description": "Place name to search for",
            "value_from_source": "stadium or country"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: find_places_prefix",
        "connect params": [
          {
            "name": "text",
            "description": "Place name prefix to search for",
            "value_from_source": "stadium or country"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "",
            "value_from_source": "stadium"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "",
            "value_from_source": "stadium"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "",
            "value_from_source": "stadium"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "name": "city",
            "description": "name of a city",
            "value_from_source": "stadium"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Halsey Lyric Snippets",
    "parent tool description": "An API that allows users to view short excerpts of Halsey's songs.",
    "tool name": "Halsey Lyric Snippets: specified {song}",
    "tool description": "Retrieves a specific song by name and returns its content in the response. This endpoint is part of an API that provides access to short excerpts of Halsey's songs, allowing users to view selected portions of her musical works when searching for a particular title.",
    "required_parameters": [
      {
        "name": "song",
        "type": "string",
        "description": "",
        "default": "Ashley"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://halsey-lyric-snippets.p.rapidapi.com/song/{song}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"halsey-lyric-snippets.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "specified {song}",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output provides details for a specific Halsey song, including a unique identifier, the song's title, and a list of lyric snippets. The lyrics are presented as short excerpts or lines, not the full song text. If the specified song is not found in the database, the tool returns an empty list.",
      "output_format": "The output is a JSON array. If a song is found, this array contains a single object with a unique string `_id`, the song `name`, and a `lyrics` key which holds an array of strings. Each string in the `lyrics` array is a short excerpt from the song. If the song is not found, the tool returns an empty array `[]`."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "The song name from Halsey lyrics output can be used to search for the full track"
          },
          {
            "name": "type",
            "description": "Can be set to 'tracks' to specifically search for songs"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query",
            "description": "The song name from Halsey lyrics output can be used to search for the song on YouTube Music"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "The song name from Halsey lyrics output can be used to search for the song"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "dev-to-api",
    "parent tool description": "API that fetches the latest blogs from dev.to website",
    "tool name": "dev-to-api: Get all the year's top articles",
    "tool description": "Returns the top articles from the dev.to website for a specified year. This endpoint is part of an API that fetches blog content from dev.to, allowing users to access popular programming articles, tutorials, and discussions that received the highest engagement during a particular year. The service helps developers stay informed about trending topics and valuable resources in the software development community without having to manually search through the site's archives.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dev-to-api1.p.rapidapi.com/articles/top/year\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dev-to-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Get all the year's top articles",
    "domain name": "News_Media",
    "output_info": {
      "output_info_summary": "The tool's output is a list of the most popular articles from the dev.to website for a specified year. Each entry in the list represents an article, providing its title and a direct URL to the content. This information enables users to discover and access trending programming articles, tutorials, and discussions from a particular year.",
      "output_format": "The output is a JSON string that deserializes into an array of objects. Each object represents an article and contains at least a 'title' (string) and a 'url' (string). While the provided examples show only a single article in the array, the tool's purpose suggests the array can contain multiple articles."
    },
    "connected tools": [
      {
        "tool name": "BizToc: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use article titles from dev.to as search terms to find related business/finance news"
          }
        ]
      },
      {
        "tool name": "Kubric: The Comprehensive Movie News API: Basic Search",
        "connect params": [
          {
            "name": "q",
            "description": "Could use programming article titles related to movies/entertainment tech as search terms"
          }
        ]
      },
      {
        "tool name": "News Network: Search News",
        "connect params": [
          {
            "name": "keyword",
            "description": "Could use article titles from dev.to as search keywords to find related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "tool name": "meteostat: Hourly Point Data",
    "tool description": "Retrieves historical hourly weather observations for a specified geographic location, aggregated from multiple governmental interfaces. This endpoint is part of the Historical Weather & Climate Data API, which provides access to comprehensive archives of meteorological measurements and climate records, allowing users to analyze past weather patterns and trends with precision.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "The point's longitude.",
        "default": "-79.4"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "The point's latitude.",
        "default": "43.6667"
      },
      {
        "name": "end",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The end date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      },
      {
        "name": "start",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The start date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      }
    ],
    "optional_parameters": [
      {
        "name": "tz",
        "type": "STRING",
        "description": "The time zone according to the tz database. Default is UTC.",
        "default": "America/Toronto"
      },
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "The point's elevation.",
        "default": "113"
      },
      {
        "name": "freq",
        "type": "STRING",
        "description": "The time frequency of the records. Can be used for custom aggregation. Default is *null*.",
        "default": ""
      },
      {
        "name": "model",
        "type": "BOOLEAN",
        "description": "A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default is *true*.",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/point/hourly\"\nquerystring = {\"lon\": lon, \"lat\": lat, \"end\": end, \"start\": start, \"tz\": tz, \"alt\": alt}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Hourly Point Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides historical hourly weather observations for a given location. The response contains a list of hourly data points, including temperature, precipitation, humidity, wind speed and direction, and atmospheric pressure. This information is designed for analyzing past weather patterns, trends, and specific meteorological events.",
      "output_format": "The output is a single JSON object containing two keys: `meta` and `data`. `meta` is an object with metadata about the request, such as the data generation time and the weather stations used. `data` is a JSON array of objects, where each object represents a single hour's weather observation. Some fields within the data objects, such as `snow`, `wpgt`, and `tsun`, can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude and longitude from the source tool's location data in format 'lat,lon'"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude and longitude from the source tool's location data in format 'lat,lon'"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude and longitude from the source tool's location data in format 'lat,-lon'"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude and longitude from the source tool's location data in format 'lat, lon'"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Real-Time PNR Status API for Indian Railways",
    "parent tool description": "It is an unofficial PNR Status API that provides real-time information on the status of Indian Railways train reservations. This API is designed for educational purposes only and is not affiliated with Indian Railways in any way.",
    "tool name": "Real-Time PNR Status API for Indian Railways: PNR Status",
    "tool description": "Provides real-time information on the status of Indian Railways train reservations through an unofficial PNR Status API. This service allows users to check current reservation details, including seat assignments, departure times, and journey status for Indian Railways bookings. The API delivers up-to-date tracking information for educational purposes only and is not affiliated with Indian Railways in any official capacity.",
    "required_parameters": [
      {
        "name": "pnr_status",
        "type": "NUMBER",
        "description": "",
        "default": "6217743114"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://real-time-pnr-status-api-for-indian-railways.p.rapidapi.com/indianrail/{pnr_status}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"real-time-pnr-status-api-for-indian-railways.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "PNR Status",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The output provides the real-time status of an Indian Railways train reservation for a specific PNR (Passenger Name Record). This includes current reservation details, such as seat assignments (e.g., coach and berth numbers), train departure and arrival times, and the overall journey status (e.g., confirmed, waiting list, cancelled). This information allows a user to track their train booking.",
      "output_format": "The format is unknown due to a lack of output examples. Given that it is an API providing structured data, the output is likely a JSON object. This object would probably contain various key-value pairs representing the PNR details, such as 'train_number', 'journey_date', and a nested list of 'passengers' with their individual booking statuses."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The train's destination city could be used as a trip planning destination"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "name": "string",
            "description": "The train's destination city could be used to search for travel options"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Forecast",
    "parent tool description": "Get 16 days weather forecast data - worldwide - geographical coordinates...",
    "tool name": "Forecast: RapidApiGetForecastHourlyByCoordinates",
    "tool description": "Retrieves detailed hourly weather forecast information for a specified location. This endpoint is part of a comprehensive weather forecasting service that provides worldwide meteorological data for up to 16 days, using geographical coordinates to deliver precise location-based predictions. The service enables users to access granular hour-by-hour weather conditions, allowing for detailed planning and decision-making based on anticipated weather patterns at specific times throughout the day.",
    "required_parameters": [
      {
        "name": "latitude",
        "type": "NUMBER",
        "description": "Latitude",
        "default": 46.95828
      },
      {
        "name": "longitude",
        "type": "NUMBER",
        "description": "Longitude",
        "default": 10.87152
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://forecast9.p.rapidapi.com/rapidapi/forecast/{latitude}/{longitude}/hourly/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"forecast9.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "RapidApiGetForecastHourlyByCoordinates",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed hourly weather forecast for a specified geographical location. The output is a list of hourly data points, each containing comprehensive meteorological information such as temperature, pressure, humidity, cloud cover, wind speed and direction, and precipitation probability. This allows for precise, short-term activity planning based on anticipated weather conditions.",
      "output_format": "The tool returns a JSON object with a single key, \"items\", which holds an array of hourly forecast objects. Each object in the array represents a consecutive hour and contains nested objects for detailed metrics like 'weather', 'prec' (precipitation), 'temperature', 'clouds', and 'wind'. Many fields within these objects, such as 'sunHours', 'rainHours', or min/max values, can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Yahoo Finance_v2",
    "parent tool description": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "start",
        "type": "NUMBER",
        "description": "Enter a start index",
        "default": "0"
      }
    ],
    "code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/co/collections/most_actives\"\nquerystring = {\"start\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Yahoo Finance_v2: market/most_actives",
    "tool description": "Retrieves stocks sorted by intraday trade volume in descending order, leveraging the Yahoo Finance API's comprehensive financial data to provide real-time insights into high-volume trading activity. This endpoint utilizes real-time market data aggregation to surface stocks with the most active trading volume, enabling users to identify trending assets and make informed decisions based on current market dynamics.",
    "API name": "market/most_actives",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool returns a list of the most actively traded stocks, sorted in descending order by their intraday trade volume. For each stock, it provides a comprehensive set of financial data, including real-time pricing, market capitalization, historical averages (50-day, 200-day), price-to-book ratio, and full company name. This information is intended to help users identify trending stocks and analyze current market dynamics based on high trading activity.",
      "output_format": "The output is a single JSON object. The core information is a list of stock data objects nested under the 'quotes' key. The top-level object also includes metadata for pagination, such as 'start' (the starting index), 'count' (the number of records in the response), and 'total' (the total number of records available)."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Search Endpoint",
        "connect params": [
          {
            "name": "keywords",
            "description": "Company names from most active stocks can be used as search keywords"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: search",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The most active stocks from the source tool can be used as input for stock tickers"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "The most active stocks from the source tool can be used as input for stock tickers"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The most active stocks from the source tool can be used as input for stock tickers"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Logo",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The most active stocks from the source tool can be used as input for stock symbols"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BestBuy Product Data",
    "parent tool description": "BestBuy Product Data API\nContact me at: muktheeswaran.m@gmail.com for builing custom spiders or custom requests.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "iphone"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://bestbuy-product-data.p.rapidapi.com/bestbuy/\"\nquerystring = {\"keyword\": keyword, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bestbuy-product-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "BestBuy Product Data: BestBuyProductData",
    "tool description": "Retrieves product data from BestBuy's database based on a keyword and pagination. This endpoint is part of the BestBuy Product Data API, which provides access to a comprehensive product database, allowing users to search for items like electronics, appliances, and more. The keyword parameter enables specific product searches (e.g., 'iphone', 'ps5'), while the page parameter facilitates navigation through results. Contact muktheeswaran.m@gmail.com for custom spiders or requests.",
    "API name": "BestBuyProductData",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool retrieves a list of products from BestBuy based on a search keyword. For each product, it provides detailed information including the title, price, model number, SKU, user rating, and URLs for the product page and image. If no products are found for the given keyword, it returns an error object with a descriptive message.",
      "output_format": "The output is a string that can be parsed into a JSON structure. A successful response is a stringified JSON array of product objects. An unsuccessful response (e.g., no results) is a stringified JSON object containing a single key, 'Error', with a string value explaining the issue. Within the product objects, some fields like 'color' can be null. Data types can be inconsistent; for example, 'regular_price' can be a number or the string 'Not Given'."
    },
    "connected tools": [
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "name": "keyword",
            "description": "Can use product titles from BestBuy results to search for similar products on Zappos"
          }
        ]
      },
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "name": "asin",
            "description": "Can use model numbers from BestBuy products to potentially find matching products on Amazon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapFanAPI - Map",
    "parent tool description": "MapFan API \u306e\u5730\u56f3API\u3067\u3059\u3002\u30b9\u30af\u30ed\u30fc\u30eb\u5730\u56f3\u306b\u5fc5\u8981\u306aWMTS\u5f62\u5f0f\u306e\u5730\u56f3\u753b\u50cf\u3084\u3001\u6307\u5b9a\u3055\u308c\u305f\u7def\u5ea6\u7d4c\u5ea6\u30fb\u30b5\u30a4\u30ba\u30fb\u7e2e\u5c3a\u306e\u9759\u6b62\u753b\u5730\u56f3\u753b\u50cf\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002",
    "tool name": "MapFanAPI - Map: mapimage",
    "tool description": "Retrieves a map image with specified latitude/longitude, size, and scale parameters. This endpoint uses MapFan API's mapping technology to deliver static map images based on the coordinates (`lonlat`), dimensions (`size`), and zoom level (`scale`) you provide. When the resolution parameter is set to 2, the returned image will be twice the size specified in the size parameter. The MapFan API offers comprehensive mapping capabilities, including WMTS format images for scrollable maps and these customizable static map images for precise location visualization.",
    "required_parameters": [
      {
        "name": "lonlat",
        "type": "STRING",
        "description": "### \u4e2d\u5fc3\u7def\u5ea6\u7d4c\u5ea6\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n`\u7d4c\u5ea6,\u7def\u5ea6`\n\n#### \u8a18\u8ff0\u4f8b\n`139.767231,35.681196`\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|\u7d4c\u5ea6 120, \u7def\u5ea620|\n|\u6700\u5927|\u7d4c\u5ea6 155, \u7def\u5ea646|\n\n#### \u6ce8\u8a18\n\u7def\u5ea6\u7d4c\u5ea6\u306e\u6e2c\u5730\u7cfb\u306f\u3001\u4e16\u754c\u6e2c\u5730\u7cfb\uff08JGD2011\uff09\u3068\u306a\u308a\u307e\u3059\u3002",
        "default": "139.767231,35.681196"
      },
      {
        "name": "scale",
        "type": "NUMBER",
        "description": "### \u5730\u56f3\u7e2e\u5c3a\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|6|\n|\u6700\u5927|21|",
        "default": "16"
      },
      {
        "name": "size",
        "type": "STRING",
        "description": "### \u753b\u50cf\u30b5\u30a4\u30ba\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n`[\u753b\u50cf\u5e45\uff08\u30d4\u30af\u30bb\u30eb\u5024\uff09],[\u753b\u50cf\u9ad8\u3055\uff08\u30d4\u30af\u30bb\u30eb\u5024\uff09]`\n\n#### \u8a18\u8ff0\u4f8b\n`320,240`\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u30b5\u30a4\u30ba|\n|---|---|\n|\u6700\u5c0f\u5024|1px, 1px|\n|\u6700\u5927\u5024|2048px, 2048px|",
        "default": "320,240"
      }
    ],
    "optional_parameters": [
      {
        "name": "icon",
        "type": "STRING",
        "description": "### \u30a2\u30a4\u30b3\u30f3\u8a2d\u5b9a\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n`[\u30a2\u30a4\u30b3\u30f3\u5b9a\u7fa9#1]|[\u30a2\u30a4\u30b3\u30f3\u5b9a\u7fa9#2]|\u2026|[\u30a2\u30a4\u30b3\u30f3\u5b9a\u7fa9#n]`\n\n#### \u8a18\u8ff0\u5f62\u5f0f\uff08\u30a2\u30a4\u30b3\u30f3\u5b9a\u7fa9\uff09\n`[\u30a2\u30a4\u30b3\u30f3\u7a2e\u5225\u30b3\u30fc\u30c9],[\u7d4c\u5ea6\u306e\u5024],[\u7def\u5ea6\u306e\u5024]`\n\n#### \u8a18\u8ff0\u4f8b\n`1,139.7672,35.6811|102,139.7671,35.6799`\n\n#### \u7bc4\u56f2\n|n\uff08\u30a2\u30a4\u30b3\u30f3\u5b9a\u7fa9\u306e\u4ef6\u6570\uff09|\u5024|\n|---|---|\n|\u6700\u5927|50|\n\n|\u7d4c\u5ea6\u3001\u7def\u5ea6|\u5024|\n|---|---|\n|\u6700\u5c0f|\u7d4c\u5ea6120, \u7def\u5ea620|\n|\u6700\u5927|\u7d4c\u5ea6155, \u7def\u5ea646|\n\n#### \u6ce8\u8a18\n- scaler\u30fbcentericon\u304con\u306e\u5834\u5408\u3001\u8868\u793a\u3055\u308c\u308b\u30b9\u30b1\u30fc\u30e9\u30fb\u4e2d\u5fc3\u70b9\u30a2\u30a4\u30b3\u30f3\u3082\u305d\u308c\u305e\u308c\u30a2\u30a4\u30b3\u30f3\u5b9a\u7fa9\u3068\u3057\u3066\u4ef6\u6570\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u307e\u3059\u3002\n- \u30a2\u30a4\u30b3\u30f3\u7a2e\u5225\u30b3\u30fc\u30c9\u306e\u8a2d\u5b9a\u5024\u306b\u3064\u3044\u3066\u306f\u3001\u4ed8\u5247. \u30a2\u30a4\u30b3\u30f3\u7a2e\u5225\u4e00\u89a7\u3092\u53c2\u7167\u3002",
        "default": ""
      },
      {
        "name": "centericon",
        "type": "ENUM",
        "description": "### \u4e2d\u5fc3\u70b9\u30a2\u30a4\u30b3\u30f3\u8868\u793a\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`off`",
        "default": ""
      },
      {
        "name": "logo",
        "type": "ENUM",
        "description": "### \u30d6\u30e9\u30f3\u30c9\u30ed\u30b4\u306e\u8868\u793a/\u975e\u8868\u793a\u6307\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\n\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`off`\n\n#### \u6ce8\u8a18\nmapstyle\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 on \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`[E03004] map parameter error (invalid combination)`\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\nmapstyle\u3068\u4ed6\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u53ef\u5426\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "landmarkicon",
        "type": "ENUM",
        "description": "### \u30e9\u30f3\u30c9\u30de\u30fc\u30af\u30a2\u30a4\u30b3\u30f3\u306e\u8868\u793a/\u975e\u8868\u793a\u6307\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\n\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`off`\n\n#### \u6ce8\u8a18\nmapstyle\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 on \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`[E03004] map parameter error (invalid combination)`\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\nmapstyle\u3068\u4ed6\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u53ef\u5426\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "### \u51fa\u529b\u3059\u308b\u753b\u50cf\u5f62\u5f0f\n|\u753b\u50cf\u5f62\u5f0f|\u5024|\n|---|---|\n|png|image/png|\n|jpeg|image/jpeg|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`image/png`",
        "default": ""
      },
      {
        "name": "resolution",
        "type": "ENUM",
        "description": "### \u89e3\u50cf\u5ea6\u30d1\u30e9\u30e1\u30fc\u30bf\n\u89e3\u50cf\u5ea6\u306b2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u6a19\u6e96\u306e2\u500d\u306e\u30b5\u30a4\u30ba\u306e\u753b\u50cf\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\n\n|\u89e3\u50cf\u5ea6|\u5024|\n|---|---|\n|\u6a19\u6e96|1|\n|2\u500d|2|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`",
        "default": ""
      },
      {
        "name": "rotationangle",
        "type": "NUMBER",
        "description": "### \u89d2\u5ea6\u30d1\u30e9\u30e1\u30fc\u30bf\n\u5730\u56f3\u3092\u6307\u5b9a\u3057\u305f\u89d2\u5ea6\u306b\u50be\u3051\u305f\u753b\u50cf\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|0\uff08\u5317\u4e0a\uff09|\n|\u6700\u5927|359|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`\n\n#### \u6ce8\u8a18\n- \u6574\u6570\u306e\u307f\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n- \u6642\u8a08\u56de\u308a\u306b\u5897\u52a0\u3057\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "routeresultid",
        "type": "STRING",
        "description": "### \u30eb\u30fc\u30c8\u7d50\u679cID\n\u6307\u5b9a\u3057\u305f\u30eb\u30fc\u30c8\u7d50\u679cID\u306b\u7d10\u4ed8\u304f\u30eb\u30fc\u30c8\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\u30eb\u30fc\u30c8\u7d50\u679cID\u306f\u30eb\u30fc\u30c8\u691c\u7d22API\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "routeicon",
        "type": "ENUM",
        "description": "### \u30eb\u30fc\u30c8\u30a2\u30a4\u30b3\u30f3\u7a2e\u5225\n|\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u30eb\u30fc\u30c8\u30a2\u30a4\u30b3\u30f3\u3092\u8868\u793a\u3057\u306a\u3044|0|\n|\u6a19\u6e96\u306e\u30eb\u30fc\u30c8\u30a2\u30a4\u30b3\u30f3\u3092\u8868\u793a\u3059\u308b|1|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`",
        "default": ""
      },
      {
        "name": "scaler",
        "type": "ENUM",
        "description": "### \u30b9\u30b1\u30fc\u30e9\u8868\u793a\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`off`",
        "default": ""
      },
      {
        "name": "bldgname",
        "type": "ENUM",
        "description": "### \u30d3\u30eb\u540d\u306e\u8868\u793a/\u975e\u8868\u793a\u6307\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\n\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`off`\n\n#### \u6ce8\u8a18\n- mapstyle\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 on \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`[E03004] map parameter error (invalid combination)`\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\nmapstyle\u3068\u4ed6\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u53ef\u5426\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n- \u30d3\u30eb\u540d\u79f0\u306f\u3001\u30b9\u30b1\u30fc\u30eb\u304c19\u4ee5\u4e0a\u306e\u5834\u5408\u306e\u307f\u63cf\u753b\u3055\u308c\u307e\u3059\u3002",
        "default": ""
      },
      {
        "name": "contour",
        "type": "ENUM",
        "description": "### \u7b49\u9ad8\u7dda\u306e\u8868\u793a/\u975e\u8868\u793a\u6307\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\n\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`on`\n\n#### \u6ce8\u8a18\nmapstyle\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 on \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`[E03004] map parameter error (invalid combination)`\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\nmapstyle\u3068\u4ed6\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u53ef\u5426\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      },
      {
        "name": "target",
        "type": "ENUM",
        "description": "### \u5730\u56f3\u306e\u8868\u793a\u5185\u5bb9\n|\u8868\u793a\u5185\u5bb9|\u5024|\n|---|---|\n|\u80cc\u666f\u306e\u307f\u3092\u8868\u793a|1|\n|\u6ce8\u8a18\u306e\u307f\u3092\u8868\u793a|2|\n|\u80cc\u666f + \u6ce8\u8a18\u3092\u8868\u793a|3|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`3`",
        "default": ""
      },
      {
        "name": "mapstyle",
        "type": "STRING",
        "description": "### \u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u6307\u5b9a\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n`[\u30c7\u30b6\u30a4\u30f3]_[\u6ce8\u8a18\u30b5\u30a4\u30ba]`\n\n|\u30c7\u30b6\u30a4\u30f3|\u5024|\n|---|---|\n|\u6a19\u6e96|std|\n|\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb|gray|\n|RPG\u98a8\u5730\u56f3|rpg|\n|\u53e4\u5730\u56f3\u98a8\u5730\u56f3|antique|\n|\u9053\u8def\u5f37\u8abf\u5730\u56f3|hlightroad|\n|\u9244\u9053\u5f37\u8abf\u5730\u56f3|hlightrail|\n|\u5370\u5237\u7528\u767d\u9ed2\u30c7\u30b6\u30a4\u30f3|monochrome|\n|\u304a\u3082\u3066\u306a\u3057\u30de\u30c3\u30d7|tourism|\n\n|\u6ce8\u8a18\u30b5\u30a4\u30ba|\u5024|\n|---|---|\n|\u4e2d|pc|\n|\u5927|sp|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`std_pc`\n\n#### \u6ce8\u8a18\n\u8a73\u7d30\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://mapfanapi-map.p.rapidapi.com/mapimage\"\nquerystring = {\"lonlat\": lonlat, \"scale\": scale, \"size\": size}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapfanapi-map.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "mapimage",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns raw binary data that constitutes a static map image in PNG format. This image provides a visual representation of a specific geographic area, determined by the input latitude, longitude, size, and scale parameters. The primary use of this output is for direct display or saving as an image file for location visualization.",
      "output_format": "The output is raw binary data for a PNG image, not a structured text format like JSON. It is a single, complete data stream representing the image file. There is no concept of nesting, pagination, or null fields within the binary image data itself."
    },
    "connected tools": [
      {
        "tool name": "MapFanAPI - Map: map",
        "connect params": [
          {
            "name": "format",
            "description": "The output format of the map image can be set to match the PNG format of the source tool's output"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "format",
            "description": "The format parameter can be set to 'png' to match the source tool's PNG output format"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Routing Enhancement",
        "connect params": [
          {
            "name": "kml",
            "description": "The map image could be used as a background or reference for the routing visualization"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Route Enhancement",
        "connect params": [
          {
            "name": "kml",
            "description": "The map image could be used as a background or reference for the enhanced route visualization"
          }
        ]
      }
    ]
  }
]