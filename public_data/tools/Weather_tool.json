[
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [
      {
        "name": "date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The UTC day of the data in the past in `YYYY-MM-DD` format.",
        "default": "2021-08-24"
      }
    ],
    "optional_parameters": [
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
        "default": "auto"
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/time_machine\"\nquerystring = {\"lat\": lat, \"units\": units, \"lon\": lon, \"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: historical_weather",
    "tool description": "Retrieves historical weather data for a specific day within the past 8 years, using GPS coordinates or a place_id from Location endpoints. This is part of a comprehensive weather service powered by advanced machine learning models, offering hyper-local forecasts and historical data, with all weather information updated in real-time to enable detailed analysis of past conditions for planning, research, or decision-making.",
    "API name": "historical_weather",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a detailed historical weather report for a specific location on a given day. It includes top-level metadata about the location (coordinates, timezone, units) and a primary data array. This array contains an hourly breakdown of weather conditions for the entire day, with each entry detailing temperature, wind, cloud cover, pressure, precipitation, and humidity.",
      "output_format": "The tool returns a single JSON object. The key 'data' contains a JSON array of hourly weather records. Each record within the array is a JSON object that includes nested objects for 'wind' and 'precipitation' details. The examples suggest the API returns all 24 hourly records for a day in a single response, with no pagination."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "units",
            "description": "Can reuse the same units from historical_weather for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from historical_weather's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from historical_weather's location data"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from historical_weather's metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
        "default": "auto"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/weather_statistics\"\nquerystring = {\"units\": units, \"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: weather_statistics",
    "tool description": "Retrieves long-term average weather data for a location over the next 30 days, using GPS coordinates or a place_id from the Location endpoints. This endpoint leverages the parent tool's hyper-local weather forecasting capabilities, powered by machine learning models that analyze historical weather data and real-time updates to deliver accurate, localized climate statistics. It provides actionable insights into expected weather patterns, integrating seamlessly with the broader suite of services that offer current conditions, hour-by-hour forecasts, and weather statistics.",
    "API name": "weather_statistics",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides long-term, daily weather statistics for a given location over the next 30 days. For each day, it returns detailed historical averages and records for temperature (average, min, max, record min/max), wind (speed, direction, gust), and precipitation (average amount, probability). The output also echoes the location coordinates and the unit system used for the measurements (metric or US).",
      "output_format": "The output is a JSON object. A successful response contains a top-level `statistics` key, which holds a `data` array. This array contains objects, each representing a single day's weather statistics. An unsuccessful request returns a JSON object with a `detail` key describing the error. The statistical data is nested within `temperature`, `wind`, and `precipitation` objects for each day."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          },
          {
            "name": "units",
            "description": "Can use the unit system from weather_statistics output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          },
          {
            "name": "units",
            "description": "Can use the unit system from weather_statistics output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          },
          {
            "name": "units",
            "description": "Can use the unit system from weather_statistics output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          },
          {
            "name": "units",
            "description": "Can use the unit system from weather_statistics output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from weather_statistics output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from weather_statistics output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      },
      {
        "name": "language",
        "type": "STRING",
        "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
        "default": "en"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
        "default": "auto"
      },
      {
        "name": "timezone",
        "type": "STRING",
        "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
        "default": "auto"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/hourly\"\nquerystring = {\"lon\": lon, \"lat\": lat, \"language\": language, \"units\": units, \"timezone\": timezone}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: hourly",
    "tool description": "Generates an hourly weather forecast for the next 5 days based on a defined location using GPS coordinates or `place_id` from Location endpoints. This uses AI technology powered by cutting-edge machine learning models to deliver accurate hyper-local weather data, including real-time updates, historical trends, and detailed statistics, ensuring reliable insights for specific geographic areas.",
    "API name": "hourly",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is an hourly weather forecast for a specified location covering the next five days. It provides detailed meteorological data for each hour, including temperature, wind conditions, precipitation details (amount, type, probability), cloud cover, humidity, and UV index. The response also includes metadata about the queried location, such as its coordinates, elevation, and timezone.",
      "output_format": "The successful output is a single JSON object. The core forecast information is contained within a nested array of objects at `hourly.data`, where each object represents one hour's forecast. In case of invalid input parameters, the tool returns a simple JSON object with a single `detail` key containing an error message string. The provided examples are truncated and do not show the full 120-hour forecast."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "place_id",
            "description": "Can use place_id if present in source tool's location metadata"
          },
          {
            "name": "units",
            "description": "Can maintain consistency with units used in source tool"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "place_id",
            "description": "Can use place_id if present in source tool's location metadata"
          },
          {
            "name": "units",
            "description": "Can maintain consistency with units used in source tool"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "place_id",
            "description": "Can use place_id if present in source tool's location metadata"
          },
          {
            "name": "units",
            "description": "Can maintain consistency with units used in source tool"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "place_id",
            "description": "Can use place_id if present in source tool's location metadata"
          },
          {
            "name": "units",
            "description": "Can maintain consistency with units used in source tool"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "place_id",
            "description": "Can use place_id if present in source tool's location metadata"
          },
          {
            "name": "units",
            "description": "Can maintain consistency with units used in source tool"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "place_id",
            "description": "Can use place_id if present in source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "place_id",
            "description": "Can use place_id if present in source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
        "default": "en"
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.",
        "default": "auto"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      },
      {
        "name": "timezone",
        "type": "STRING",
        "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
        "default": "auto"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/current\"\nquerystring = {\"language\": language, \"units\": units, \"lon\": lon, \"timezone\": timezone, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: current",
    "tool description": "Retrieves current weather conditions using GPS coordinates or a place_id from location endpoints, updated every 10 minutes. This leverages the parent tool's real-time weather data powered by machine learning models, drawing from a global network of weather stations to deliver accurate, hyper-local current conditions as part of a comprehensive weather data suite that includes historical records, statistics, and hour-by-hour forecasts.",
    "API name": "current",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool output provides the current weather conditions for a given location (specified by coordinates or place_id). A successful response includes location metadata (latitude, longitude, timezone) and a detailed 'current' object containing meteorological data like temperature, wind speed, precipitation, cloud cover, and UV index. The tool can also return an error object if the provided location is invalid or missing.",
      "output_format": "The output is a single JSON object. The structure depends on whether the call is successful or not. A successful response features a nested structure, where the main weather data is contained within a 'current' object, which in turn contains nested 'wind' and 'precipitation' objects. An error response is a simple, flat JSON object with a single 'detail' key explaining the error."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          },
          {
            "name": "timezone",
            "source_field": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          },
          {
            "name": "timezone",
            "source_field": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          },
          {
            "name": "timezone",
            "source_field": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          },
          {
            "name": "timezone",
            "source_field": "timezone"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "source_field": "latitude"
          },
          {
            "name": "longitude",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "source_field": "latitude"
          },
          {
            "name": "longitude",
            "source_field": "longitude"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "source_field": "latitude"
          },
          {
            "name": "lon",
            "source_field": "longitude"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
        "default": "en"
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
        "default": "auto"
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/daily\"\nquerystring = {\"language\": language, \"units\": units, \"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: daily",
    "tool description": "Generates a 21-day weather forecast for a specified location using GPS coordinates or a `place_id` from Location endpoints. This endpoint leverages AI technology powered by advanced machine learning models to deliver hyper-local weather predictions, integrating global data and real-time updates. It provides accurate historical weather insights, current conditions, and detailed statistics, all tailored to specific geographic points for personalized planning.",
    "API name": "daily",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a daily weather forecast for up to 21 days for a specific location. For each day, the output includes a detailed breakdown of weather conditions, including a text summary, temperature (actual, min/max, feels like), wind details, precipitation type and probability, cloud cover, humidity, and atmospheric pressure. The output also contains metadata about the location (coordinates, elevation) and the measurement units used. An error message is returned if the required location parameters are not provided.",
      "output_format": "The tool returns a single JSON object. The core forecast data is a JSON array located at the path `daily.data`. Each object within this array represents a single day's forecast and contains numerous key-value pairs and nested objects for `wind`, `precipitation`, and `probability`. Error responses are also JSON objects but follow a different structure, containing a `detail` key with an error message string."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          },
          {
            "name": "units",
            "description": "Can use the same units from source tool for consistency"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          },
          {
            "name": "units",
            "description": "Can use the same units from source tool for consistency"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          },
          {
            "name": "units",
            "description": "Can use the same units from source tool for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use timezone information from source tool"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          },
          {
            "name": "units",
            "description": "Can use the same units from source tool for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use timezone information from source tool"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          },
          {
            "name": "units",
            "description": "Can use the same units from source tool for consistency"
          },
          {
            "name": "timezone",
            "description": "Can use timezone information from source tool"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          },
          {
            "name": "timezone",
            "description": "Can use timezone information from source tool"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          },
          {
            "name": "timezone",
            "description": "Can use timezone information from source tool"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "timezone",
        "type": "STRING",
        "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
        "default": "auto"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      },
      {
        "name": "language",
        "type": "STRING",
        "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
        "default": "en"
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n",
        "default": "auto"
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/minutely\"\nquerystring = {\"timezone\": timezone, \"lat\": lat, \"language\": language, \"units\": units, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: minutely",
    "tool description": "Provides a minute-by-minute precipitation forecast for the next 60 minutes using AI-powered nowcasting models, requiring location input via GPS coordinates or place_id from Location endpoints. This endpoint leverages the parent tool's hyper-local weather forecasting capabilities, which combine real-time data updates with advanced machine learning models to deliver precise precipitation insights, enhancing situational awareness for time-sensitive activities.",
    "API name": "minutely",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a detailed, minute-by-minute precipitation forecast for the next 60 minutes for a specified location. The output includes a high-level text summary of the forecast and a data array, where each entry represents the predicted precipitation amount for a specific minute. This hyper-local data is intended for planning time-sensitive activities where avoiding rain is critical.",
      "output_format": "The primary successful output is a JSON object. It contains location metadata and a nested 'minutely' object, which in turn holds a 'summary' string and a 'data' array. The 'data' array consists of objects, each with a 'date' string and a 'precipitation' number. A possible error response is a simple JSON object with a 'detail' key containing an error message string."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "45.74846"
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "4.84671"
      },
      {
        "name": "language",
        "type": "STRING",
        "description": "The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
        "default": "en"
      },
      {
        "name": "timezone",
        "type": "STRING",
        "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
        "default": "auto"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/alerts\"\nquerystring = {\"lat\": lat, \"lon\": lon, \"language\": language, \"timezone\": timezone}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: alerts",
    "tool description": "Generates severe weather alerts for the USA, Europe, and Canada based on user-defined locations using GPS coordinates or `place_id` from Location endpoints. This leverages the parent tool's hyper-local weather forecasting capabilities, powered by cutting-edge machine learning models and real-time weather data, to deliver precise, actionable alerts tailored to specific geographic areas and conditions.",
    "API name": "alerts",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a list of severe weather alerts for a given location. Each alert includes the event type, its effective and expiration times, the issuing authority, its severity and certainty, a headline, and a detailed description of the hazard and recommended precautions. The response also echoes the location information (latitude, longitude, elevation, timezone) for which the alerts were generated.",
      "output_format": "The output is a JSON object. A successful response contains top-level location keys and a nested 'alerts' object. This object contains a 'data' key, which holds an array of individual alert objects. An error response is a JSON object with a 'detail' key explaining the error."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from alerts response location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from alerts response location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from alerts response location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from alerts response location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from alerts response location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from alerts response location data"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts?{parameters}",
        "connect params": [
          {
            "name": "point",
            "description": "Can use latitude,longitude from alerts response location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [
      {
        "name": "text",
        "type": "STRING",
        "description": "Place name to search for",
        "default": "fishermans wharf"
      }
    ],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n",
        "default": "en"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/find_places\"\nquerystring = {\"language\": language, \"text\": text}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: find_places",
    "tool description": "Searches locations by name to retrieve a place_id and detailed geographical data (country, region, elevation, timezone, etc.) for use with Weather Forecast Endpoints. This endpoint requires complete words for queries like cities, mountains, or countries, returning multiple results sorted by relevance to help identify the correct location. Powered by real-time weather data and machine learning models, it enables precise hyper-local forecasts by leveraging accurate geographical context, ensuring tailored weather insights for specific regions and coordinates.",
    "API name": "find_places",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographical locations that match a text query. Each location in the list is an object containing details such as its name, a unique `place_id`, administrative areas (e.g., state, province), country, latitude, longitude, timezone, and type (e.g., 'settlement'). The primary purpose of this tool is to find the correct `place_id` for a location, which can then be used as input for other weather forecasting tools.",
      "output_format": "The output is a JSON array of objects, where each object represents a location. The list is sorted by relevance to the query. The `adm_area2` field is nullable and will be `None` if a secondary administrative area is not applicable. If no locations are found for a query, the tool returns an empty array `[]`."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from find_places output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from find_places output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from find_places output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from find_places output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from find_places output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from find_places output"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from find_places output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from find_places output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from find_places output"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from find_places output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from find_places output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from find_places output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from find_places output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from find_places output"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from find_places output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from find_places output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from find_places output"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from find_places output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places output"
          },
          {
            "name": "lat",
            "description": "Can use the latitude from find_places output"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from find_places output"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from find_places output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [
      {
        "name": "text",
        "type": "STRING",
        "description": "Place name prefix to search for",
        "default": "fishermans wh"
      }
    ],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n\n",
        "default": "en"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/find_places_prefix\"\nquerystring = {\"text\": text, \"language\": language}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: find_places_prefix",
    "tool description": "Searches for places by name prefix to retrieve a place_id and detailed geographical data (country, region, elevation, timezone, etc.) for use with Weather Forecast Endpoints. This endpoint enables precise location identification by accepting partial names and returning multiple results sorted by relevance, allowing selection via coordinates, country, region, or type. It leverages the parent tool's hyper-local weather forecasting capabilities, which combine real-time data and machine learning models to deliver historical weather, current conditions, and hour-by-hour forecasts, enhancing itinerary planning with accurate location-specific insights.",
    "API name": "find_places_prefix",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographical locations matching a search prefix. Each location in the list provides detailed data including its name, a unique `place_id`, administrative areas (state/province and county/municipality), country, and specific latitude/longitude coordinates. The output also includes the IANA timezone for the location, which is crucial for accurate weather forecasting. This information allows a user to identify and select the correct location from a list of possibilities for use in subsequent weather API calls.",
      "output_format": "The output is a JSON array of objects, with each object representing a distinct geographical location. Fields like `adm_area2` can be null if a secondary administrative area is not applicable. Latitude and longitude are provided as strings with cardinal direction suffixes (e.g., 'N', 'S', 'E', 'W'). The list appears to be sorted by relevance to the search query, but no explicit pagination or cursoring mechanism is visible in the examples."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use the place_id from find_places_prefix output to specify location"
          },
          {
            "name": "timezone",
            "description": "Can use the IANA timezone from find_places_prefix output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4",
        "default": "-122.42282"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4",
        "default": "37.81021"
      }
    ],
    "optional_parameters": [
      {
        "name": "language",
        "type": "STRING",
        "description": "The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n\n",
        "default": "en"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/nearest_place\"\nquerystring = {\"language\": language, \"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: nearest_place",
    "tool description": "Searches for the nearest named place (village/town/city) from GPS coordinates, returning a place_id for Weather Forecast Endpoints and detailed geographical information. This uses the parent tool's machine learning models and real-time weather data to accurately identify locations, even in remote areas, enabling hyper-local weather forecasts by linking geographic context to precise weather insights. The service leverages a comprehensive database of locations to ensure reliability, though it may return distant nearest points for coordinates in secluded areas like the middle of the ocean.",
    "API name": "nearest_place",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a set of geographical details for the nearest named location to a given set of coordinates. It provides the location's name, administrative areas, country, and precise coordinates. Crucially, it returns a `place_id` which is intended to be used as an input for other weather forecasting tools in the same suite.",
      "output_format": "The output is a single, flat JSON object. The `adm_area2` field is nullable and will be `null` when not applicable. The latitude and longitude values are represented as strings that include a cardinal direction suffix (e.g., 'N', 'W')."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "place_id",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "place_id",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "place_id",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "place_id",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "place_id",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "place_id",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "place_id",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "place_id",
            "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "AI Weather by Meteosource",
    "parent tool description": "Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "-122.42282"
      },
      {
        "name": "place_id",
        "type": "STRING",
        "description": "Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**",
        "default": ""
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.**",
        "default": "37.81021"
      },
      {
        "name": "timezone",
        "type": "STRING",
        "description": "Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n",
        "default": "auto"
      }
    ],
    "code": "import requests\n\nurl = \"https://ai-weather-by-meteosource.p.rapidapi.com/astro\"\nquerystring = {\"lon\": lon, \"lat\": lat, \"timezone\": timezone}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ai-weather-by-meteosource.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "AI Weather by Meteosource: astro",
    "tool description": "Retrieves global sun and moon data (sunrise/sunset, moonrise/moonset, moon phase) for the next 30 days based on GPS coordinates or place_id from location endpoints. This leverages the parent tool's hyper-local weather forecasting capabilities, powered by machine learning models and real-time data updates, to deliver accurate astronomical insights tailored to specific locations.",
    "API name": "astro",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides astronomical data for a given location, specified by latitude and longitude. The output includes daily information for the next 30 days, covering sunrise/sunset times, moonrise/moonset times, and the moon phase for each day. This information is intended to be used for planning or analysis that depends on daylight hours or lunar cycles.",
      "output_format": "The primary output is a JSON object. A successful response contains location metadata (`lat`, `lon`, `timezone`, etc.) and a nested `astro` object. The `astro.data` key holds a JSON array where each element is an object representing a single day's astronomical data. Timestamps for rise and set events are provided in ISO 8601 format. An unsuccessful request, such as one with missing parameters, returns a simple JSON object with a `detail` key containing an error message string."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          },
          {
            "name": "timezone",
            "description": "Can use timezone from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location metadata"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's location metadata"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's location metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Air Quality",
    "parent tool description": "Retrieve current, forecasted, and historical air quality for any point in the world.",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Latitude",
        "default": "35.779"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Longitude",
        "default": "-78.638"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://air-quality.p.rapidapi.com/history/airquality\"\nquerystring = {\"lat\": lat, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"air-quality.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Air Quality: Air Quality History",
    "tool description": "Retrieves the past 24 hours of air quality observations for a specific location using latitude and longitude. This endpoint is part of a service that provides current, forecasted, and historical air quality data worldwide, enabling users to access detailed environmental information for any point on Earth.",
    "API name": "Air Quality History",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a JSON object containing historical air quality data for a specific location. The output includes the city name and country code, along with a primary 'data' field which is a list of hourly observations from the past 24 hours. Each hourly record provides a detailed breakdown of pollutant concentrations (CO, NO2, O3, PM10, PM2.5, SO2), the overall Air Quality Index (AQI), and timestamps in local, UTC, and Unix formats.",
      "output_format": "The top-level structure is a single JSON object. It contains a key named 'data' which holds a JSON array of objects. Each object in this array represents one hour of air quality data. The examples provided are truncated and do not show the full 24-hour list."
    },
    "connected tools": [
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Air Quality",
    "parent tool description": "Retrieve current, forecasted, and historical air quality for any point in the world.",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Latitude",
        "default": "35.779"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Longitude",
        "default": "-78.638"
      }
    ],
    "optional_parameters": [
      {
        "name": "hours",
        "type": "NUMBER",
        "description": "Limits response forecast hours (default 72). ",
        "default": "72"
      }
    ],
    "code": "import requests\n\nurl = \"https://air-quality.p.rapidapi.com/forecast/airquality\"\nquerystring = {\"lat\": lat, \"lon\": lon, \"hours\": hours}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"air-quality.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Air Quality: Air Quality Forecast",
    "tool description": "Generates a 3-day air quality forecast for any global location based on latitude and longitude. This leverages the parent tool's comprehensive capabilities, which provide current, forecasted, and historical air quality data worldwide, utilizing real-time environmental sensors and predictive analytics to ensure accurate and actionable insights for users.",
    "API name": "Air Quality Forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed 3-day hourly air quality forecast for a specific location. The output identifies the location by city and country, and includes a time-series list of data points. Each point contains the Air Quality Index (AQI), levels of various pollutants (CO, NO2, O3, PM10, PM2.5, SO2), and multiple timestamp formats (local, UTC, and Unix).",
      "output_format": "The output is a single JSON object containing location identifiers and a `data` key. The `data` key holds a JSON array of objects, where each object represents a single hourly forecast entry for the next 3 days. The provided examples are truncated strings, but they consistently show this nested object-array structure."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality forecast location"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality forecast location"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cloud Cast",
    "parent tool description": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "New York"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cloud-cast.p.rapidapi.com/hourly/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cloud-cast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Cloud Cast: Get hourly forecast",
    "tool description": "Gets the hourly forecast for a specified city. This is part of Cloudcast, a simple and efficient API built with Node.js and Express that provides real-time weather information, including temperature, humidity, wind speed, and other vital meteorological data, ensuring accurate and timely forecasts.",
    "API name": "Get hourly forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of future weather forecasts for a specified city, presented in 3-hour intervals. Each forecast in the list provides detailed meteorological data including temperature (in Kelvin), humidity, wind speed, cloud cover, visibility, and probability of precipitation. In the event of an API failure or an invalid request, the tool may return an HTML error page instead of weather data.",
      "output_format": "A successful response is a JSON array of objects, where each object represents a forecast for a specific 3-hour time block. These objects have a nested structure; for instance, the 'main' key contains temperature and pressure data, and the 'weather' key contains an array with weather descriptions. Some keys, such as 'rain', are conditional and may not be present in all forecast objects. A failed response can be an HTML string."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude extracted from source tool's forecast location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude extracted from source tool's forecast location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude extracted from source tool's forecast location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude extracted from source tool's forecast location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "name": "city",
            "description": "Can use the city name from the source tool's forecast"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cloud Cast",
    "parent tool description": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "New York"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cloud-cast.p.rapidapi.com/wind/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cloud-cast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Cloud Cast: Get wind speed",
    "tool description": "Retrieves the current wind speed for a specified city. This is part of Cloudcast, a real-time weather API built with Node.js and Express that provides comprehensive meteorological data, including temperature, humidity, and wind speed, enabling users to access accurate and up-to-date weather information efficiently.",
    "API name": "Get wind speed",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides the current wind speed and direction for a given location. A successful response contains a numerical value for the speed and the direction in degrees. In case of a service-level error, such as the application not being available, the tool returns an HTML error page instead of structured data.",
      "output_format": "The successful output is a flat JSON object containing two keys: 'speed' (float) and 'deg' (integer). In case of a service failure, the output is an HTML document. The provided examples of successful outputs are strings that resemble Python dictionaries (using single quotes) but are intended to be interpreted as JSON objects. The output is not paginated or nested."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "While not directly using wind speed, this tool provides comprehensive weather data that could be complemented by the wind speed information from the source tool"
          },
          {
            "name": "lon",
            "description": "While not directly using wind speed, this tool provides comprehensive weather data that could be complemented by the wind speed information from the source tool"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "This tool provides weather updates that could be enhanced with the specific wind speed data from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cloud Cast",
    "parent tool description": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "New York"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cloud-cast.p.rapidapi.com/humidity/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cloud-cast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Cloud Cast: Get humidty",
    "tool description": "Retrieves the current humidity level for a specified city. This endpoint is part of Cloudcast, a Node.js and Express-powered API that provides real-time weather data globally, including temperature, wind speed, and humidity. It leverages a network of meteorological data sources to deliver precise humidity readings, enabling applications to offer localized weather insights efficiently.",
    "API name": "Get humidty",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a single numerical value representing the current humidity level for a specified city. This value is expressed as a percentage (e.g., an output of '63' means 63% humidity). The information is used to provide real-time, localized weather insights for applications.",
      "output_format": "The output is a single, non-nested string containing a number (e.g., '63'). It is not a JSON object or array."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "place_id",
            "description": "The humidity value could be used to supplement or compare with weather data for a specific location"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The humidity value could be used to supplement or compare with current weather conditions"
          },
          {
            "name": "longitude",
            "description": "The humidity value could be used to supplement or compare with current weather conditions"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Current",
        "connect params": [
          {
            "name": "location",
            "description": "The humidity value could be used to supplement or compare with current weather data"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "The humidity value could be used to supplement or compare with weather data for a specific city"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Easy Weather",
    "parent tool description": "Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.",
    "required_parameters": [
      {
        "name": "longitude",
        "type": "STRING",
        "description": "",
        "default": "103.86"
      },
      {
        "name": "latitude",
        "type": "STRING",
        "description": "",
        "default": "1.28"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://easy-weather1.p.rapidapi.com/daily/5\"\nquerystring = {\"longitude\": longitude, \"latitude\": latitude}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"easy-weather1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Easy Weather: Daily forecast (5 days)",
    "tool description": "Generates a 5-day daily weather forecast based on the provided latitude and longitude. This endpoint is part of a comprehensive weather service that delivers detailed current conditions, hourly forecasts, daily forecasts, and alerts in JSON format, leveraging real-time meteorological data to enable precise, location-specific planning and decision-making.",
    "API name": "Daily forecast (5 days)",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a 5-day weather forecast for a given geographical coordinate. The output is a JSON object containing metadata and a `forecastDaily` object, which holds an array of daily forecast data. Each daily forecast includes a summary with min/max temperatures, UV index, and precipitation details. It is further broken down into more granular `daytimeForecast` and `overnightForecast` objects, which provide specifics like cloud cover, humidity, and wind conditions.",
      "output_format": "The output is a single, non-paginated JSON object. The core forecast data is located in the `forecastDaily.days` key, which is an array of objects, one for each of the 5 forecast days. Each daily forecast object contains two further nested objects, `daytimeForecast` and `overnightForecast`, detailing conditions for those periods. All timestamps are in ISO 8601 format."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Easy Weather",
    "parent tool description": "Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.",
    "required_parameters": [
      {
        "name": "latitude",
        "type": "STRING",
        "description": "",
        "default": "-22.95"
      },
      {
        "name": "longitude",
        "type": "STRING",
        "description": "",
        "default": "-43.21"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://easy-weather1.p.rapidapi.com/hourly/48\"\nquerystring = {\"latitude\": latitude, \"longitude\": longitude}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"easy-weather1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Easy Weather: Hourly forecast (48 hours)",
    "tool description": "Gets a 48-hour weather forecast for a given latitude and longitude. This is part of a service that provides detailed current conditions, hourly and daily forecasts, and weather alerts in JSON format, leveraging real-time data and historical patterns to offer comprehensive weather insights for planning purposes.",
    "API name": "Hourly forecast (48 hours)",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a detailed 48-hour weather forecast for a specified latitude and longitude. The output contains an array of hourly data points, with each point including metrics like temperature, apparent temperature, precipitation chance and type, wind speed and direction, humidity, pressure, and cloud cover. This granular information is intended for detailed short-term planning and also includes metadata on when the forecast was generated.",
      "output_format": "The output is a single JSON object. The primary weather data is located within a nested structure at `forecastHourly.hours`, which is an array of JSON objects, one for each hour of the forecast. Each hourly object contains a comprehensive set of weather metrics. There is no evidence of pagination or cursoring in the examples."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Easy Weather",
    "parent tool description": "Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.",
    "required_parameters": [
      {
        "name": "longitude",
        "type": "STRING",
        "description": "",
        "default": "-80.13"
      },
      {
        "name": "latitude",
        "type": "STRING",
        "description": "",
        "default": "25.77"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://easy-weather1.p.rapidapi.com/current/basic\"\nquerystring = {\"longitude\": longitude, \"latitude\": latitude}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"easy-weather1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Easy Weather: Current conditions (basic)",
    "tool description": "Retrieves basic current weather conditions for a given latitude and longitude. This is part of a comprehensive service offering detailed current conditions, hourly and daily forecasts, and weather alerts in JSON format, providing users with thorough weather insights based on geographic coordinates.",
    "API name": "Current conditions (basic)",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides basic, current weather conditions for a specific geographic coordinate pair (latitude and longitude). It includes key metrics like temperature, atmospheric pressure, humidity, cloud cover percentage, and a simple text description of the conditions (e.g., 'Clear'). The response also contains metadata, such as the time the data was reported and whether it is currently daylight at the location.",
      "output_format": "The output is a single, non-paginated JSON object. Key information is nested within the `currentWeather` object. The response also echoes the input `parameters` used for the query. Based on the examples, all fields seem to be non-nullable."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Foreca Weather",
    "parent tool description": "Everything you need to build a weather app",
    "required_parameters": [
      {
        "name": "location",
        "type": "string",
        "description": "",
        "default": "102643743"
      }
    ],
    "optional_parameters": [
      {
        "name": "dataset",
        "type": "STRING",
        "description": "Variable set",
        "default": "full"
      },
      {
        "name": "windunit",
        "type": "STRING",
        "description": "Wind speed unit in response.",
        "default": "MS"
      },
      {
        "name": "tz",
        "type": "STRING",
        "description": "Time zone in response (IANA time zone database names)",
        "default": "Europe/London"
      },
      {
        "name": "tempunit",
        "type": "STRING",
        "description": "Temperature unit in response",
        "default": "C"
      },
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "Altitude (meters)",
        "default": "0"
      },
      {
        "name": "periods",
        "type": "NUMBER",
        "description": "Number of time steps (default 8, maximum 12)",
        "default": "8"
      }
    ],
    "code": "import requests\n\nurl = \"https://foreca-weather.p.rapidapi.com/forecast/15minutely/{location}\"\nquerystring = {\"dataset\": dataset, \"windunit\": windunit, \"tz\": tz, \"tempunit\": tempunit, \"alt\": alt, \"periods\": periods}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"foreca-weather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Foreca Weather: Nowcast",
    "tool description": "Provides a 3-hour weather forecast in 15-minute intervals. This endpoint is part of a comprehensive weather app development service, utilizing real-time meteorological data and AI-driven models to deliver precise, time-specific forecasts. It enables developers to integrate detailed weather insights into applications, leveraging a vast network of weather stations and satellite feeds to support accurate planning and user engagement.",
    "API name": "Nowcast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a hyper-local, 3-hour weather forecast delivered in 15-minute intervals. The output is a list of these intervals, with each one containing detailed meteorological data such as temperature, feels-like temperature, humidity, wind speed and direction, and precipitation probability. This granular data is intended for developers to integrate real-time, short-term weather insights into applications.",
      "output_format": "The successful output is a JSON object containing a single key, \"forecast\", which holds a JSON array. Each element of the array is an object representing a single 15-minute forecast. In the case of an error, such as an invalid ID, the tool may return a simple, non-JSON string message."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "The Nowcast output contains location data that can be used for current weather lookup"
          },
          {
            "name": "lon",
            "description": "The Nowcast output contains location data that can be used for current weather lookup"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "The Nowcast output contains location data that can be used for hourly forecast"
          },
          {
            "name": "lon",
            "description": "The Nowcast output contains location data that can be used for hourly forecast"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "The Nowcast output contains location data that can be used for minute-by-minute forecasts"
          },
          {
            "name": "lon",
            "description": "The Nowcast output contains location data that can be used for minute-by-minute forecasts"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The Nowcast output contains location data that can be used for current conditions"
          },
          {
            "name": "longitude",
            "description": "The Nowcast output contains location data that can be used for current conditions"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The Nowcast output contains location data that can be used for hourly forecasts"
          },
          {
            "name": "longitude",
            "description": "The Nowcast output contains location data that can be used for hourly forecasts"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "The Nowcast output contains location data that can be used for weather lookup"
          },
          {
            "name": "lon",
            "description": "The Nowcast output contains location data that can be used for weather lookup"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Foreca Weather",
    "parent tool description": "Everything you need to build a weather app",
    "required_parameters": [
      {
        "name": "location",
        "type": "string",
        "description": "",
        "default": "102643743"
      }
    ],
    "optional_parameters": [
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "Altitude (meters)",
        "default": "0"
      },
      {
        "name": "dataset",
        "type": "STRING",
        "description": "Variable set",
        "default": "full"
      },
      {
        "name": "tempunit",
        "type": "STRING",
        "description": "Temperature unit in response",
        "default": "C"
      },
      {
        "name": "windunit",
        "type": "STRING",
        "description": "Wind speed unit in response.",
        "default": "MS"
      },
      {
        "name": "periods",
        "type": "NUMBER",
        "description": "Number of time steps (default 8, maximum 12)",
        "default": "8"
      }
    ],
    "code": "import requests\n\nurl = \"https://foreca-weather.p.rapidapi.com/forecast/daily/{location}\"\nquerystring = {\"alt\": alt, \"dataset\": dataset, \"tempunit\": tempunit, \"windunit\": windunit, \"periods\": periods}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"foreca-weather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Foreca Weather: Daily",
    "tool description": "Provides a detailed weather forecast for a specific location and date. This is part of the 'Everything you need to build a weather app' suite, leveraging AI-driven meteorological models and real-time data from global weather stations to deliver accurate, location-specific predictions that help users plan activities effectively.",
    "API name": "Daily",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed daily weather forecast for a specific location. The output is a list of forecasts, with each entry containing comprehensive meteorological data for a single day, including temperature, precipitation, wind, humidity, and astronomical information like sunrise and sunset times. This information is intended to help users plan activities by providing precise, location-specific weather predictions. In case of an error, such as an invalid location, the tool returns a simple error string.",
      "output_format": "A successful response is a JSON object containing a single key, 'forecast', which holds a JSON array of daily forecast objects. Each object within the array represents one day and contains numerous key-value pairs for different weather metrics. An unsuccessful call, such as one with an invalid ID, returns a simple, unformatted string detailing the error."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          },
          {
            "name": "date",
            "description": "Can use date from the source tool's forecast data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Foreca Weather",
    "parent tool description": "Everything you need to build a weather app",
    "required_parameters": [
      {
        "name": "location",
        "type": "string",
        "description": "",
        "default": "102643743"
      }
    ],
    "optional_parameters": [
      {
        "name": "lang",
        "type": "STRING",
        "description": "",
        "default": "en"
      }
    ],
    "code": "import requests\n\nurl = \"https://foreca-weather.p.rapidapi.com/observation/latest/{location}\"\nquerystring = {\"lang\": lang}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"foreca-weather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Foreca Weather: Latest observations",
    "tool description": "Retrieves real-time weather observations from nearby representative stations, aggregating data from a network of sensors to provide localized forecasts. This endpoint is part of a comprehensive toolset designed to build weather apps, using real-time data aggregation to deliver precise, location-specific weather insights that enhance user experience and app functionality.",
    "API name": "Latest observations",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns real-time weather observations from multiple nearby weather stations. A successful response contains a list of these observations, with each one detailing temperature, wind conditions, humidity, pressure, and visibility for a specific station. In case of an error, such as an invalid location ID, the tool returns a simple error message as a string.",
      "output_format": "The successful output is a JSON object serialized as a string. This object has a single key, \"observations\", which contains an array of observation objects. Each object in the array represents the data from one station. Error responses are unstructured, plain text strings."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "lon",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "lon",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "lon",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "longitude",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "lon",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "lon",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "lon",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "lon",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Could use latitude from observation station location"
          },
          {
            "name": "longitude",
            "description": "Could use longitude from observation station location"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Could use city name from observation station location"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Could use city name from observation station location"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Forecast",
    "parent tool description": "Get 16 days weather forecast data - worldwide - geographical coordinates...",
    "required_parameters": [
      {
        "name": "longitude",
        "type": "NUMBER",
        "description": "Longitude",
        "default": 10.87152
      },
      {
        "name": "latitude",
        "type": "NUMBER",
        "description": "Latitude",
        "default": 46.95828
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://forecast9.p.rapidapi.com/rapidapi/forecast/{latitude}/{longitude}/summary/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"forecast9.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Forecast: RapidApiGetForecastSummaryByCoordinates",
    "tool description": "Generates a summary of the 16-day weather forecast for a specific location. This uses global weather data from a database of geographical coordinates to provide a concise overview, enabling users to plan effectively.",
    "API name": "RapidApiGetForecastSummaryByCoordinates",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed multi-day weather forecast for a specific location defined by coordinates. Each day's forecast includes comprehensive information such as minimum and maximum temperatures, precipitation probability and amount, wind speed and direction, humidity, pressure, and astronomical data like sunrise, sunset, and moon phases. This allows users to get a thorough understanding of weather conditions for planning purposes.",
      "output_format": "The output is a JSON object with a single key, \"items\", which holds an array of daily forecast objects. Each object in this array is deeply nested, containing sub-objects for temperature, wind, precipitation, astronomy, etc. Many fields within these objects can be null (represented as `None` in the examples), particularly for metrics that are not applicable or available, like `snowHeight` or average values."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Koppen Climate Classification",
    "parent tool description": "Get the K\u00f6ppen climate classificatin for any location in the world using latitude and longitude.  Results in JSON format.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "STRING",
        "description": "",
        "default": "-60.069"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "",
        "default": "-3.198"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://koppen-climate-classification.p.rapidapi.com/classification\"\nquerystring = {\"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"koppen-climate-classification.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Koppen Climate Classification: Classification",
    "tool description": "Gets the K\u00f6ppen classification code for a given latitude and longitude. This is part of a global tool that provides climate classifications for any location using geographic coordinates, returning results in JSON format to quickly determine climate zones based on specified locations.",
    "API name": "Classification",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides the K\u00f6ppen climate classification code for a specific geographic location. The response includes the classification code (e.g., 'Cfa', 'Cfb'), the resource identifier ('koppen'), and echoes back the input latitude and longitude. This information is used to programmatically identify the climate zone for a given set of coordinates.",
      "output_format": "The output is a single JSON object. It contains a nested object named 'location' which holds the 'latitude' and 'longitude' values as strings. Based on the examples, all keys appear to be consistently present and non-nullable."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "meteostat: Nearby Stations",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from Koppen output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from Koppen output"
          }
        ]
      },
      {
        "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from Koppen output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "required_parameters": [
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "The point's longitude.",
        "default": "13.4105"
      },
      {
        "name": "end",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The end date of the period (YYYY-MM-DD).",
        "default": "2020-12-31"
      },
      {
        "name": "start",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The start date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "The point's latitude.",
        "default": "52.5244"
      }
    ],
    "optional_parameters": [
      {
        "name": "freq",
        "type": "STRING",
        "description": "The time frequency of the records. Can be used for custom aggregation. Default is *null*.",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      },
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "The point's elevation.",
        "default": "43"
      },
      {
        "name": "model",
        "type": "BOOLEAN",
        "description": "A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default is *true*.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/point/monthly\"\nquerystring = {\"lon\": lon, \"end\": end, \"start\": start, \"lat\": lat, \"alt\": alt}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "meteostat: Monthly Point Data",
    "tool description": "Retrieves historical monthly statistics for a geographic location, aggregating data from multiple governmental interfaces. This endpoint is part of the Historical Weather & Climate Data API, which leverages authoritative sources to provide detailed climate insights, enabling users to analyze long-term trends and make data-driven decisions.",
    "API name": "Monthly Point Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides historical monthly weather statistics for a given geographic location. The output is a collection of monthly data points, each including average, minimum, and maximum temperatures, total precipitation, and average air pressure. The data is aggregated from multiple weather stations, which are listed in the response metadata.",
      "output_format": "The output is a JSON object with two top-level keys: 'meta' and 'data'. 'meta' is an object containing metadata like the data generation timestamp and source station IDs. 'data' is an array of objects, where each object represents a single month's weather statistics. Some fields within the data objects, such as 'wspd' (wind speed) and 'tsun' (sunshine duration), can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's data points"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's data points"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "required_parameters": [
      {
        "name": "station",
        "type": "STRING",
        "description": "The Meteostat weather station identifier.",
        "default": "10637"
      },
      {
        "name": "end",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The end date of the period (YYYY-MM-DD).",
        "default": "2020-12-31"
      },
      {
        "name": "start",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The start date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      },
      {
        "name": "model",
        "type": "BOOLEAN",
        "description": "A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default is *true*.",
        "default": ""
      },
      {
        "name": "freq",
        "type": "STRING",
        "description": "The time frequency of the records. Can be used for custom aggregation. Default is *null*.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/stations/monthly\"\nquerystring = {\"station\": station, \"end\": end, \"start\": start}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "meteostat: Monthly Station Data",
    "tool description": "Retrieves historical monthly weather statistics for a specific station by aggregating data from multiple governmental interfaces. This is part of the Historical Weather & Climate Data API, which provides comprehensive historical weather and climate data to support analysis and decision-making, leveraging authoritative sources for accuracy and reliability.",
    "API name": "Monthly Station Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns historical monthly weather statistics for a specified station. The output includes data points such as average, minimum, and maximum air temperature, total precipitation, average sea-level air pressure, and total sunshine duration. This information is primarily used for historical weather analysis and climate trend studies.",
      "output_format": "The output is a JSON object with two main keys: `meta` and `data`. The `data` key contains a JSON array of objects, where each object represents the weather statistics for a single month. Some data fields like `wspd` (wind speed) and `tsun` (sunshine duration) can be null, indicating data unavailability for that period."
    },
    "connected tools": [
      {
        "tool name": "meteostat: Station Climate Data",
        "connect params": [
          {
            "name": "station",
            "description": "The station ID from the monthly station data output can be used to retrieve climate data for the same station"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "The station ID from the monthly station data output can be used to retrieve daily data for the same station"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "The station ID from the monthly station data output can be used to retrieve hourly data for the same station"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Meta Data",
        "connect params": [
          {
            "name": "id",
            "description": "The station ID from the monthly station data output can be used to retrieve metadata about the same station"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude from the station metadata in the output can be used for point-based climate data"
          },
          {
            "name": "lon",
            "description": "The longitude from the station metadata in the output can be used for point-based climate data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "wmo",
        "type": "STRING",
        "description": "The WMO identifier of a weather station.",
        "default": ""
      },
      {
        "name": "icao",
        "type": "STRING",
        "description": "The ICAO identifier of a weather station.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/stations/meta\"\nquerystring = {\"id\": id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "meteostat: Station Meta Data",
    "tool description": "Retrieves metadata for a specific weather station, including details like location, equipment, and data availability. This is part of the Historical Weather & Climate Data API, which provides access to extensive historical weather data. The metadata helps users validate data sources and ensure accuracy by leveraging a comprehensive database of weather stations, enhancing the reliability of climate analyses and weather studies.",
    "API name": "Station Meta Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The output provides detailed metadata for a single weather station. This includes the station's name, various identifiers (like WMO and ICAO), precise geographic location (latitude, longitude, elevation), and timezone. A key part of the output is the data inventory, which specifies the date ranges for which different types of historical data (e.g., hourly, daily, monthly) are available, helping users verify data sources.",
      "output_format": "The output is a JSON object serialized as a string. The top-level object has two keys: 'meta' (for response metadata) and 'data' (for the station's information). The 'data' field contains a single, nested JSON object, not an array, as it describes one station. Some fields within the nested structure can be null. An empty string may be returned if no data is found."
    },
    "connected tools": [
      {
        "tool name": "meteostat: Hourly Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the station identifier from the source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the station identifier from the source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the station identifier from the source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Climate Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the station identifier from the source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the station metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the station metadata"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from the station metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the station metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the station metadata"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from the station metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the station metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the station metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the station metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the station metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the station metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the station metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the station metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the station metadata"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from the station metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the station metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the station metadata"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from the station metadata"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the latitude from the station metadata"
          },
          {
            "name": "lon",
            "description": "Can use the longitude from the station metadata"
          },
          {
            "name": "timezone",
            "description": "Can use the timezone from the station metadata"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "required_parameters": [
      {
        "name": "station",
        "type": "STRING",
        "description": "The Meteostat weather station identifier.",
        "default": "10637"
      }
    ],
    "optional_parameters": [
      {
        "name": "end",
        "type": "NUMBER",
        "description": "The end year of the reference period.",
        "default": "1990"
      },
      {
        "name": "start",
        "type": "NUMBER",
        "description": "The start year of the reference period.",
        "default": "1961"
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/stations/normals\"\nquerystring = {\"end\": end, \"start\": start, \"station\": station}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "meteostat: Station Climate Data",
    "tool description": "This endpoint provides climate normals for a specific weather station, leveraging the Historical Weather & Climate Data API's extensive database of historical weather records to deliver averaged climate data. It uses long-term observational data to generate typical weather patterns, enabling users to analyze seasonal trends and inform planning for agriculture, construction, or travel.",
    "API name": "Station Climate Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides long-term, monthly climate averages (climate normals) for a specified weather station. The output includes key meteorological variables such as average, minimum, and maximum temperature, precipitation, wind speed, atmospheric pressure, and total sunshine duration for each month of the year. This information is intended to help users understand typical seasonal weather patterns for long-range planning in sectors like agriculture or travel.",
      "output_format": "The output is a single JSON object containing a 'meta' object and a 'data' key. The 'data' key holds a JSON array of exactly 12 objects, one for each month. Each object contains the climate data for that month. Some fields, specifically 'wspd' (wind speed) and 'tsun' (sunshine duration), can be null, indicating that the data is not available for that station."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "units",
            "description": "The source tool provides climate data in specific units that could be matched with this parameter"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "units",
            "description": "The climate normal data could inform unit selection for consistency"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "units",
            "description": "The climate normal data could inform unit selection for consistency"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Daily",
        "connect params": [
          {
            "name": "tempunit",
            "description": "Can use temperature unit information from climate data"
          },
          {
            "name": "windunit",
            "description": "Can use wind speed unit information from climate data"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Hourly",
        "connect params": [
          {
            "name": "tempunit",
            "description": "Can use temperature unit information from climate data"
          },
          {
            "name": "windunit",
            "description": "Can use wind speed unit information from climate data"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "units",
            "description": "Can maintain consistent units with the source climate data"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "units",
            "description": "Can maintain consistent units with the source climate data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "The point's latitude.",
        "default": "59.9127"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "The point's longitude.",
        "default": "10.7461"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      },
      {
        "name": "end",
        "type": "NUMBER",
        "description": "The end year of the reference period.",
        "default": "1990"
      },
      {
        "name": "start",
        "type": "NUMBER",
        "description": "The start year of the reference period.",
        "default": "1961"
      },
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "The point's elevation.",
        "default": "26"
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/point/normals\"\nquerystring = {\"lat\": lat, \"lon\": lon, \"end\": end, \"start\": start, \"alt\": alt}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "meteostat: Point Climate Data",
    "tool description": "This endpoint generates climate normals for any geographic location by analyzing historical weather data. Part of the Historical Weather & Climate Data API, it leverages a comprehensive dataset of global meteorological records to provide accurate, long-term climate averages, enabling users to understand typical weather patterns for planning, research, or analysis.",
    "API name": "Point Climate Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns long-term, monthly climate normals for a specified geographic location, derived from historical weather records. The output is a comprehensive yearly profile containing monthly averages for temperature (average, min, max), precipitation, wind speed, air pressure, and sunshine duration. This data is intended to help users understand typical weather patterns for planning, research, or analysis.",
      "output_format": "The output is a single JSON object containing 'meta' and 'data' keys. The 'data' key holds a JSON array of exactly 12 objects, one for each month of the year. Some fields within these monthly objects, like wind speed ('wspd') and sunshine duration ('tsun'), can be null if data is unavailable. The tool returns a complete yearly profile in one response, so there is no pagination."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "param_name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
        "connect params": [
          {
            "param_name": "location",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Time Zone API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Search API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "param_name": "q",
            "description": "Can use latitude,longitude from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limit the Results",
        "default": ""
      },
      {
        "name": "states",
        "type": "STRING",
        "description": "Filter by States (by abbreviation)",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/stations\"\nquerystring = {\"limit\": \"\", \"states\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "National Weather Service: /stations",
    "tool description": "Retrieves a list of active weather stations and their metadata, filterable by parameters like state and limit. This endpoint is part of the National Weather Service API (api.weather.gov), which provides national weather data and historical records from NOAA. It leverages the NWS's standardized dataset to deliver accessible, real-time station information without field office configuration, enabling users to efficiently query specific geographic regions or data subsets.",
    "API name": "/stations",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a list of active weather stations, returning the data in a GeoJSON format. For each station, the output includes its unique identifier, name, geographic coordinates (latitude and longitude), elevation, and time zone. This information is primarily used to identify specific stations for further weather data queries. In case of an invalid request, the tool returns a structured JSON error object detailing the problem.",
      "output_format": "The successful response is a JSON object conforming to the GeoJSON 'FeatureCollection' standard. The main data is contained within a top-level 'features' key, which is an array of 'Feature' objects. Each 'Feature' object is nested and contains metadata and coordinates. Error responses are also JSON objects but follow a different, flatter structure with keys like 'title', 'status', and 'detail'."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "timezone",
            "connection_type": "station time zone"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "param_name": "lat",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "lon",
            "connection_type": "station coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "param_name": "latitude",
            "connection_type": "station coordinates"
          },
          {
            "param_name": "longitude",
            "connection_type": "station coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "start",
        "type": "STRING",
        "description": "start, Start time (ISO8601DateTime)",
        "default": ""
      },
      {
        "name": "end",
        "type": "STRING",
        "description": "end, End time (ISO8601DateTime)",
        "default": ""
      },
      {
        "name": "status",
        "type": "STRING",
        "description": "status, Event status (alert, update, cancel)",
        "default": ""
      },
      {
        "name": "zone_type",
        "type": "STRING",
        "description": "zone_type, Zone type (land or marine)",
        "default": ""
      },
      {
        "name": "active",
        "type": "STRING",
        "description": "active, Active alerts (1 or 0)",
        "default": ""
      },
      {
        "name": "type",
        "type": "STRING",
        "description": "type, Event type (list forthcoming)",
        "default": ""
      },
      {
        "name": "point",
        "type": "STRING",
        "description": "point, Point (latitude,longitude)",
        "default": ""
      },
      {
        "name": "state",
        "type": "STRING",
        "description": "State/marine code (list forthcoming)",
        "default": ""
      },
      {
        "name": "zone",
        "type": "STRING",
        "description": "zone, Zone Id (forecast or county, list forthcoming)",
        "default": ""
      },
      {
        "name": "urgency",
        "type": "STRING",
        "description": "urgency, Urgency (expected, immediate)",
        "default": ""
      },
      {
        "name": "region",
        "type": "STRING",
        "description": "region, Region code (list forthcoming)",
        "default": ""
      },
      {
        "name": "certainty",
        "type": "STRING",
        "description": "certainty, Certainty (likely, observed)",
        "default": ""
      },
      {
        "name": "severity",
        "type": "STRING",
        "description": "severity, Severity (minor, moderate, severe)",
        "default": ""
      },
      {
        "name": "limit",
        "type": "STRING",
        "description": " limit, Limit (an integer)",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts\"\nquerystring = {\"start\": \"\", \"end\": \"\", \"status\": \"\", \"zone_type\": \"\", \"active\": \"\", \"type\": \"\", \"point\": \"\", \"state\": \"\", \"zone\": \"\", \"urgency\": \"\", \"region\": \"\", \"certainty\": \"\", \"severity\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "National Weather Service: /alerts?{parameters}",
    "tool description": "Retrieves weather alerts filtered by parameters, returning all alerts if none are specified, with data formatted in CAP-ATOM via ATOM. This endpoint is part of the National Weather Service API (api.weather.gov) operated by NOAA, which provides national weather data and historical records, leveraging real-time meteorological sources to deliver actionable alert information.",
    "API name": "/alerts?{parameters}",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides weather alert information. For a successful request, it returns a GeoJSON FeatureCollection object where the 'features' array contains current weather alerts (watches, warnings, advisories) for the specified location. If no alerts are active, this array will be empty. For invalid requests, it returns a structured JSON error object detailing the problem, including the specific parameters that were incorrect.",
      "output_format": "The output is a JSON object. The structure varies based on success or failure. A successful response is a GeoJSON FeatureCollection object with a 'features' array. An error response is a JSON object with keys like 'status', 'title', and 'parameterErrors'. The 'features' array in a successful response can be null or empty if there are no alerts."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude can be extracted from the geographic coordinates in the weather alerts"
          },
          {
            "name": "lon",
            "description": "The longitude can be extracted from the geographic coordinates in the weather alerts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Plant Hardiness Zone",
    "parent tool description": "Retrieve the USDA Plant Hardiness Zone for a ZIP code",
    "required_parameters": [
      {
        "name": "zipcode",
        "type": "string",
        "description": "",
        "default": "90210"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://plant-hardiness-zone.p.rapidapi.com/zipcodes/{zipcode}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"plant-hardiness-zone.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Plant Hardiness Zone: Retrieve the Hardiness Zone",
    "tool description": "Retrieves the USDA Plant Hardiness Zone for a given ZIP code by accepting the ZIP in the endpoint path and returning an object containing the ZIP code and its corresponding hardiness zone. This endpoint leverages a specialized agricultural database mapping ZIP codes to USDA zones, enabling users to quickly determine climate suitability for plants in their specific region, which is critical for gardening and landscaping planning.",
    "API name": "Retrieve the Hardiness Zone",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is an object that provides the specific USDA Plant Hardiness Zone for a given US ZIP code. This output also includes the original ZIP code for confirmation. This information is primarily used by gardeners, landscapers, and agricultural professionals to determine which plants are most likely to thrive in a specific geographic location based on its climate.",
      "output_format": "The output is a single, flat JSON object containing two string key-value pairs: 'hardiness_zone' and 'zipcode'. There is no nesting, and since the tool maps a single ZIP code to a single zone, the output is not an array and does not involve pagination."
    },
    "connected tools": [
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for weather forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for wind speed data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for humidity data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for weather forecast"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for current weather"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "The zipcode from the hardiness zone tool can be used to identify a city for weather updates"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "name": "ZIPCODE",
            "description": "The zipcode from the hardiness zone tool can be used directly to search for location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "The zipcode from the hardiness zone tool can be used directly to get weather data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "The zipcode from the hardiness zone tool can be used directly to get forecast data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "City name, state code and country code divided by comma, use ISO 3166 country codes.\nYou can specify the parameter not only in English. In this case, the API response should be returned in the same language as the language of requested location name if the location is in our predefined list of more than 200,000 locations.",
        "default": "London,UK"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.",
        "default": ""
      },
      {
        "name": "cnt",
        "type": "STRING",
        "description": "A number of timestamps, which will be returned in the API response.",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "You can use the **lang **parameter to get the output in your language",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/forecast\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By city name",
    "tool description": "Searches a 5-day weather forecast with 3-hour intervals by city name. This uses a proprietary convolutional neural network trained on global and local weather models, satellite imagery, radar systems, and a network of weather stations to deliver accurate, location-specific forecasts. The endpoint leverages RapidWeather's comprehensive data aggregation and light-speed APIs to provide historical, current, and predictive weather insights tailored to any geographic location.",
    "API name": "Call 5 day / 3 hour forecast data - By city name",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a detailed 5-day weather forecast, with data points provided in 3-hour intervals for a specific city. For each interval, the output includes temperature (actual and 'feels like'), pressure, humidity, a textual weather description, cloud cover, and wind conditions. This detailed breakdown is suitable for applications requiring granular weather data over a multi-day period.",
      "output_format": "The output is a single JSON object. The main payload is within the 'list' key, which contains an array of 40 JSON objects, each representing one 3-hour forecast period. Key data points like temperature and wind are nested in their own sub-objects ('main', 'wind'). Temperature values appear to be in Kelvin."
    },
    "connected tools": [
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "param_name": "city",
            "description": "The city name from the source tool can be used to get hourly forecast for the same location"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "param_name": "city",
            "description": "The city name from the source tool can be used to get wind speed for the same location"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "param_name": "city",
            "description": "The city name from the source tool can be used to get humidity for the same location"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "param_name": "city",
            "description": "The city name from the source tool can be used to get forecast for the same location"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "param_name": "city",
            "description": "The city name from the source tool can be used to get current weather for the same location"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "param_name": "city",
            "description": "The city name from the source tool can be used to get weather updates for the same location"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "param_name": "city",
            "description": "The city name from the source tool can be used to search for the same location"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Coordinates by location name",
        "connect params": [
          {
            "param_name": "q",
            "description": "The city name from the source tool can be used to get coordinates for the same location"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "param_name": "q",
            "description": "The city name from the source tool can be used to get real-time weather for the same location"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "param_name": "q",
            "description": "The city name from the source tool can be used to get sports events for the same location"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "param_name": "q",
            "description": "The city name from the source tool can be used to get astronomy data for the same location"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "50"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "50"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/air_pollution\"\nquerystring = {\"lat\": lat, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Current air pollution data",
    "tool description": "Retrieves current air pollution data, including pollutants like CO, NO, NO2, O3, SO2, NH3, PM2.5, and PM10, along with 5-day hourly forecasts and historical data from 27th November 2020. This endpoint leverages a proprietary convolutional neural network that integrates global and local weather models, satellite data, radar systems, and a network of weather stations to deliver accurate, location-specific environmental insights, enabling informed decision-making for health and safety planning.",
    "API name": "Current air pollution data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool output provides detailed, location-specific air pollution data. It includes the precise latitude and longitude, a main Air Quality Index (AQI), and a timestamped breakdown of key pollutant concentrations (CO, NO, NO2, O3, SO2, PM2.5, PM10, NH3). This information is intended to help users assess current environmental conditions for health and safety.",
      "output_format": "The output is a single JSON object. It contains a 'coord' object for location and a 'list' key holding an array of data points. In the provided examples, this array contains a single object, representing the current measurement. This object is further nested, with 'main' containing the AQI and 'components' containing the specific pollutant values as numbers."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's coord object"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's coord object"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "",
        "default": "50"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "",
        "default": "50"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/air_pollution/forecast\"\nquerystring = {\"lat\": lat, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Forecast air pollution data",
    "tool description": "Generates 5-day air pollution forecasts with hourly data on pollutants like Carbon monoxide (CO), Nitrogen dioxide (NO2), PM2.5, and Ozone (O3), leveraging historical data from 27th November 2020. This uses a proprietary convolutional neural network that integrates global and local weather models, satellite imagery, radar systems, and a network of weather stations to process diverse data sources, ensuring accurate localized predictions by accounting for regional climate nuances.",
    "API name": "Forecast air pollution data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a 5-day air pollution forecast for a given latitude and longitude. The output contains a list of hourly data points, where each point includes the Air Quality Index (AQI) and the concentration of various pollutants like Carbon monoxide (CO), Nitrogen dioxide (NO2), PM2.5, and Ozone (O3). This information is intended for detailed, localized air quality monitoring and analysis.",
      "output_format": "The output is a single JSON object. The core data is within a top-level key named 'list', which contains a JSON array of objects, each representing an hourly forecast. Each object in the array contains a Unix timestamp ('dt'), the AQI (nested under 'main'), and a 'components' object with detailed pollutant concentrations. There is no pagination; the full forecast appears to be returned in one response."
    },
    "connected tools": [
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's input"
          },
          {
            "name": "lon",
            "description": "Can use the same longitude from the source tool's input"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "start",
        "type": "NUMBER",
        "description": "Start date (unix time, UTC time zone), e.g. start=1606488670",
        "default": "1606223802"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "50"
      },
      {
        "name": "end",
        "type": "NUMBER",
        "description": "End date (unix time, UTC time zone), e.g. end=1606747870",
        "default": "1606482999"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "50"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/air_pollution/history\"\nquerystring = {\"start\": start, \"lat\": lat, \"end\": end, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Historical air pollution data",
    "tool description": "Retrieves historical air pollution data for a specific location and timeframe. This uses a proprietary convolutional neural network to process diverse data sources, including global and local weather models, satellites, radars, and a vast network of weather stations, ensuring accurate and contextually relevant pollution insights. The endpoint leverages RapidWeather's comprehensive weather data infrastructure to deliver detailed historical pollution metrics, enabling users to analyze environmental trends with high spatial and temporal precision.",
    "API name": "Historical air pollution data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a time-series of historical air pollution data for a specific geographical location, identified by latitude and longitude. For each timestamped entry, it returns a qualitative Air Quality Index (AQI) and quantitative measurements for various pollutant components like CO, NO, NO2, O3, SO2, PM2.5, PM10, and NH3. This allows users to analyze historical pollution levels and trends over a specified period.",
      "output_format": "The output is a single JSON object with two main keys: 'coord' and 'list'. The 'coord' key contains an object with the location's longitude and latitude. The 'list' key contains an array of JSON objects, where each object represents a single data point in time. Each data point object includes the 'aqi' (Air Quality Index), a nested 'components' object detailing the concentration of each pollutant, and a 'dt' field representing the Unix timestamp for the measurement."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "coord.lat"
          },
          {
            "name": "longitude",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "coord.lat"
          },
          {
            "name": "longitude",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "source_path": "coord.lat"
          },
          {
            "name": "lon",
            "source_path": "coord.lon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "City name, state code (only for the US) and country code divided by comma. Please use ISO 3166 country codes.",
        "default": "London"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Number of the locations in the API response (up to 5 results can be returned in the API response)",
        "default": "5"
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/geo/1.0/direct\"\nquerystring = {\"q\": q, \"limit\": limit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Coordinates by location name",
    "tool description": "Retrieves geographic coordinates for a given location name. This utilizes a proprietary convolutional neural network to process diverse data sources\u2014including global and local weather models, satellites, radars, and a vast network of weather stations\u2014to accurately determine geographic coordinates. By leveraging this comprehensive dataset, the tool ensures precise location mapping, enabling rapid access to historical, current, and forecasted weather information for any global point via high-speed APIs.",
    "API name": "Coordinates by location name",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of potential geographic locations that match a given location name query. For each potential match, it provides the common name, latitude, longitude, and the two-letter country code. The output also includes a detailed nested object containing the location's name in various languages, which can be used for disambiguation and internationalization.",
      "output_format": "The top-level output is a JSON array, where each element is a JSON object representing a single location. Within each location object, the `local_names` key contains a nested JSON object mapping two-letter language codes to the location's name in that language. The API may return multiple objects in the array if the input query is ambiguous."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Nearby Stations",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude or city name from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Search API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's output"
          }
        ]
      },
      {
        "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "51.5098"
      },
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "-0.1180"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Number of the location names in the API response (several results can be returned in the API response)",
        "default": "5"
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/geo/1.0/reverse\"\nquerystring = {\"lat\": lat, \"lon\": lon, \"limit\": limit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Reverse geocoding",
    "tool description": "Reverse geocoding to retrieve location names (city or area) using geographical coordinates (lat, lon), with a limit parameter to control the number of results. This uses a proprietary convolutional neural network that processes a wide range of data sources, including global and local weather models, satellites, radars, and a vast network of weather stations, to ensure accurate location identification and account for local climate nuances, enhancing the precision of location-based weather services.",
    "API name": "Reverse geocoding",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a list of location objects that match a given set of geographical coordinates. Each object contains the location's primary name (typically in English), a nested object of localized names in various languages, the precise latitude and longitude, a two-letter country code, and an optional state/region. This information is primarily used to identify a human-readable place name from a lat/lon pair.",
      "output_format": "The output is a JSON string that deserializes into an array of objects, where each object represents a single location. The `state` key within a location object appears to be optional, as it is not present in all examples. The `local_names` key contains a nested JSON object mapping language codes to translated location names."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use location ID from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use location ID from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use location ID from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use location ID from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use location ID from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use location ID from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use location ID from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "place_id",
            "description": "Can use location ID from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from reverse geocoding output"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from reverse geocoding output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "zip",
        "type": "STRING",
        "description": "Zip/post code and country code divided by comma. Please use ISO 3166 country codes",
        "default": "E14,GB"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/geo/1.0/zip\"\nquerystring = {\"zip\": zip}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Coordinates by zip/post code",
    "tool description": "Retrieves geographic coordinates using a zip/postal code. This leverages a proprietary convolutional neural network that processes diverse data sources\u2014including global and local weather models, satellites, radars, and a network of weather stations\u2014to accurately determine location coordinates. By integrating these inputs, it provides precise geographic data to support weather-related analyses, ensuring reliability even in complex or remote regions. The service is optimized for speed, delivering results via light-speed APIs to enable real-time applications.",
    "API name": "Coordinates by zip/post code",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides the geographical details for a specific zip or postal code. This includes the city or area name, the precise latitude and longitude coordinates, and a two-letter country code. The information is primarily used to convert a postal code into geographic coordinates for use in downstream tasks, such as weather forecasting or mapping applications.",
      "output_format": "The output is a single, flat JSON object. The examples are provided as strings but represent a standard key-value object structure. No pagination or cursoring is indicated. It is unknown if fields can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Forecast: RapidApiGetForecastSummaryByCoordinates",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Forecast: RapidApiGetForecastHourlyByCoordinates",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "meteostat: Nearby Stations",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Plant Hardiness Zone: Retrieve the Hardiness Zone",
        "connect params": [
          {
            "name": "zipcode",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By ZIP code",
        "connect params": [
          {
            "name": "zip",
            "description": "Can use zip/postal code from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "139"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "35"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "You can use the **lang **parameter to get the output in your language.",
        "default": ""
      },
      {
        "name": "cnt",
        "type": "NUMBER",
        "description": "A number of timestamps, which will be returned in the API response.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/forecast\"\nquerystring = {\"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
    "tool description": "Generates a 5-day weather forecast with 3-hour intervals based on geographic coordinates. This uses a proprietary convolutional neural network that integrates global and local weather models, satellite data, radar systems, and a network of weather stations to analyze climate nuances, delivering accurate historical, current, and forecasted weather data through high-speed APIs for precise meteorological insights.",
    "API name": "Call 5 day / 3 hour forecast data - By geographic coordinates",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed 5-day weather forecast with data points for every 3-hour interval. Each interval includes comprehensive meteorological information such as temperature (in Kelvin), wind speed and direction, pressure, humidity, cloud cover, visibility, and a textual description of the weather conditions. This structured data is intended for applications requiring precise, time-series weather predictions.",
      "output_format": "The output is a single JSON object. The key 'list' contains an array of 40 forecast objects, one for each 3-hour interval over 5 days. Each object in the array has nested objects for 'main' (temperature, pressure, etc.), 'weather' (an array with condition descriptions), 'clouds', and 'wind'. Temperatures are in Kelvin, and wind speed is in meters/second."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "37.5"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "55.5"
      }
    ],
    "optional_parameters": [
      {
        "name": "cnt",
        "type": "NUMBER",
        "description": "Number of cities around the point that should be returned. The default number of cities is 5, the maximum is 50.",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "You can use the **lang **parameter to get the output in your language",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/find\"\nquerystring = {\"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: Cities in circle",
    "tool description": "Returns weather data for cities within a specified circular area based on a center point. This uses the proprietary convolutional neural network to process global and local weather models, satellites, radars, and a vast network of weather stations, providing historical, current, and forecasted weather data with consideration of local climate nuances for any location.",
    "API name": "Cities in circle",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns detailed weather information for a list of cities within a specified circular geographic area. The output includes a count of the cities found and a list where each city has data on temperature, pressure, humidity, wind, and cloud cover. It also provides geographic coordinates, a general weather description (e.g., 'scattered clouds'), and country information for each location.",
      "output_format": "The output is a single JSON object. The primary data is a JSON array of objects located under the top-level 'list' key. Each object in this array represents a city. Some fields, such as 'rain' and 'snow', can be null if not applicable. The 'weather' field within each city object is a nested array."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "lon",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from cities in the circle"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from cities in the circle"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from cities in the circle"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name from cities in the circle"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from cities in the circle"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "City name, state code and country code divided by comma, Please, refer to [ISO 3166](https://www.iso.org/obp/ui/#search) for the state codes or country codes.\nYou can specify the parameter not only in English. In this case, the API response should be returned in the same language as the language of requested location name if the location is in our predefined list of more than 200,000 locations.",
        "default": "London,UK"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "You can use the **lang **parameter to get the output in your language",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/weather\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "RapidWeather: By city name",
    "tool description": "Retrieves weather data for a specific location using a city name, or city, state, and country code (with state support limited to USA locations). This endpoint leverages a proprietary convolutional neural network that integrates global and local weather models, satellite data, radar systems, and a network of weather stations to deliver historical, current, and forecasted weather information. By analyzing local climate nuances and processing data from diverse sources, it provides accurate and context-aware weather insights tailored to any geographic location worldwide.",
    "API name": "By city name",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool output provides a comprehensive snapshot of the current weather conditions for a specified city. It returns a single object containing geographical coordinates, a description of the weather (e.g., 'Clouds', 'Fog'), and detailed meteorological data including temperature (in Kelvin), pressure, humidity, visibility, wind speed, and cloud cover. It also includes supplementary information like sunrise/sunset times and the country code.",
      "output_format": "The tool returns a single, non-paginated JSON object. The data is organized into several nested objects, such as `coord`, `main`, `wind`, and `sys`. The `weather` key contains an array of objects, which consistently holds a single element in the provided examples. Null values are not present in the examples, but some fields may be nullable if data is unavailable."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "source_field": "coord.lat"
          },
          {
            "name": "longitude",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "source_field": "coord.lat"
          },
          {
            "name": "longitude",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "source_field": "coord.lat"
          },
          {
            "name": "longitude",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "source_field": "coord.lat"
          },
          {
            "name": "lon",
            "source_field": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "source_field": "coord.lat"
          },
          {
            "name": "longitude",
            "source_field": "coord.lon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Ski Resort Forecast",
    "parent tool description": "Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.",
    "required_parameters": [
      {
        "name": "resort",
        "type": "string",
        "description": "",
        "default": "Jackson Hole"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
        "default": "i"
      },
      {
        "name": "el",
        "type": "STRING",
        "description": "Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time.",
        "default": "top"
      }
    ],
    "code": "import requests\n\nurl = \"https://ski-resort-forecast.p.rapidapi.com/{resort}/forecast\"\nquerystring = {\"units\": units, \"el\": el}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Ski Resort Forecast: 5 Day Forecast",
    "tool description": "Returns a 5-day snow forecast for a specified resort, utilizing a service that provides forecast and current snow conditions for nearly every ski resort. The tool is designed to handle approximate resort names, ensuring accurate data even with minor spelling variations.",
    "API name": "5 Day Forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed 5-day weather forecast for a specific ski resort. The forecast is broken down by day, with each day further segmented into three periods: AM, PM, and Night. For each period, the output includes a weather summary, wind speed and direction, expected snow and rain accumulation, temperatures, wind chill, humidity, and freeze level. If an invalid resort name is provided, the tool returns a simple error string.",
      "output_format": "The successful output is a JSON object containing a single key, `forecast5Day`. The value is an array of 5 objects, each representing a day's forecast. Each daily object contains nested objects for 'am', 'pm', and 'night', which hold the specific weather metrics. In the case of an error (e.g., an invalid resort name), the output is a plain string message."
    },
    "connected tools": [
      {
        "tool name": "Ski Resort Forecast: Hourly Forecast",
        "connect params": [
          {
            "name": "resort",
            "description": "The resort name can be extracted from the 5-day forecast output"
          }
        ]
      },
      {
        "tool name": "Ski Resort Forecast: Current Snow Conditions",
        "connect params": [
          {
            "name": "resort",
            "description": "The resort name can be extracted from the 5-day forecast output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "The coordinates of the ski resort can be extracted from the 5-day forecast data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude can be extracted from the ski resort location data"
          },
          {
            "name": "lon",
            "description": "Longitude can be extracted from the ski resort location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Latitude can be extracted from the ski resort location data"
          },
          {
            "name": "lon",
            "description": "Longitude can be extracted from the ski resort location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Ski Resort Forecast",
    "parent tool description": "Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.",
    "required_parameters": [
      {
        "name": "resort",
        "type": "string",
        "description": "",
        "default": "Jackson Hole"
      }
    ],
    "optional_parameters": [
      {
        "name": "el",
        "type": "STRING",
        "description": "Specify a part of the mountain. Accepted values are 'top', 'mid', and 'bot'. Using this parameter improves response time.",
        "default": "top"
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
        "default": "i"
      },
      {
        "name": "c",
        "type": "BOOLEAN",
        "description": "Limit result to current day only",
        "default": "false"
      }
    ],
    "code": "import requests\n\nurl = \"https://ski-resort-forecast.p.rapidapi.com/{resort}/hourly\"\nquerystring = {\"el\": el, \"units\": units, \"c\": c}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Ski Resort Forecast: Hourly Forecast",
    "tool description": "Returns the hourly forecast for a given resort name, leveraging a comprehensive database of ski resorts to provide accurate snow condition updates. This is part of a service offering forecasts and current snow conditions for nearly every ski resort, with flexibility in resort name spelling to ensure accessibility and reliability.",
    "API name": "Hourly Forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a detailed hourly weather forecast for a specific ski resort. This forecast includes data points such as temperature, wind speed and direction, precipitation (snow and rain), humidity, wind chill, and the freeze level. The output may also contain basic information about the resort itself, including its name, region, and various lift elevations.",
      "output_format": "The output is a JSON object. It contains a primary key, \"forecast\", which holds an array of objects, with each object detailing the weather for a specific hour. All data values, including numerical ones like temperature and wind speed, are formatted as strings. The `minTemp` field was observed to be null in the examples, indicating it may be nullable. A second top-level key, \"basicInfo\", may also be present, containing metadata about the ski resort."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "The ski resort's latitude from basicInfo can be used for location-specific weather data"
          },
          {
            "name": "lon",
            "description": "The ski resort's longitude from basicInfo can be used for location-specific weather data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "The ski resort's latitude from basicInfo can be used for current weather conditions"
          },
          {
            "name": "lon",
            "description": "The ski resort's longitude from basicInfo can be used for current weather conditions"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "The ski resort's latitude from basicInfo can be used for daily forecasts"
          },
          {
            "name": "lon",
            "description": "The ski resort's longitude from basicInfo can be used for daily forecasts"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The ski resort's latitude from basicInfo can be used for hourly forecasts"
          },
          {
            "name": "longitude",
            "description": "The ski resort's longitude from basicInfo can be used for hourly forecasts"
          }
        ]
      },
      {
        "tool name": "Ski Resort Forecast: 5 Day Forecast",
        "connect params": [
          {
            "name": "resort",
            "description": "The resort name from basicInfo can be used to get a longer-term forecast"
          }
        ]
      },
      {
        "tool name": "Ski Resort Forecast: Current Snow Conditions",
        "connect params": [
          {
            "name": "resort",
            "description": "The resort name from basicInfo can be used to get current snow conditions"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Ski Resort Forecast",
    "parent tool description": "Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.",
    "required_parameters": [
      {
        "name": "resort",
        "type": "string",
        "description": "",
        "default": "Jackson Hole"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
        "default": "i"
      }
    ],
    "code": "import requests\n\nurl = \"https://ski-resort-forecast.p.rapidapi.com/{resort}/snowConditions\"\nquerystring = {\"units\": units}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Ski Resort Forecast: Current Snow Conditions",
    "tool description": "Returns the current snow conditions for a given resort name, utilizing a comprehensive database of nearly every ski resort and tolerating typos in the input. This endpoint is part of a service that provides both forecast and current snow conditions, ensuring reliable information even when resort names are misspelled, making it ideal for users seeking up-to-date, accurate data without requiring precise spelling.",
    "API name": "Current Snow Conditions",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides detailed current snow conditions for a specific ski resort. This includes snow depth at the top and bottom of the mountain, the amount of fresh snowfall, and the date of the last snowfall. It also returns basic resort information, such as its official name, region, elevation details, and geographic coordinates, allowing users to quickly assess skiing and snowboarding conditions.",
      "output_format": "The output is a single JSON object. It contains a nested object named `basicInfo` which holds general resort details. Several top-level fields, such as `topSnowDepth`, `botSnowDepth`, and `freshSnowfall`, can be null if the information is not available. There is no pagination, as the tool returns a single, complete record for one resort."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the resort's latitude coordinates from the source tool's basicInfo"
          },
          {
            "name": "lon",
            "description": "Can use the resort's longitude coordinates from the source tool's basicInfo"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the resort's latitude coordinates from the source tool's basicInfo"
          },
          {
            "name": "lon",
            "description": "Can use the resort's longitude coordinates from the source tool's basicInfo"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the resort's latitude coordinates from the source tool's basicInfo"
          },
          {
            "name": "lon",
            "description": "Can use the resort's longitude coordinates from the source tool's basicInfo"
          }
        ]
      },
      {
        "tool name": "Ski Resort Forecast: 5 Day Forecast",
        "connect params": [
          {
            "name": "resort",
            "description": "Can use the resort's official name from the source tool's basicInfo"
          }
        ]
      },
      {
        "tool name": "Ski Resort Forecast: Hourly Forecast",
        "connect params": [
          {
            "name": "resort",
            "description": "Can use the resort's official name from the source tool's basicInfo"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the resort's latitude coordinates from the source tool's basicInfo"
          },
          {
            "name": "longitude",
            "description": "Can use the resort's longitude coordinates from the source tool's basicInfo"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the resort's latitude coordinates from the source tool's basicInfo"
          },
          {
            "name": "longitude",
            "description": "Can use the resort's longitude coordinates from the source tool's basicInfo"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Sun Seeker API",
    "parent tool description": "Get live solar position (azimuth and elevation) with a simple API request for given Latitude and Longitude\n",
    "required_parameters": [
      {
        "name": "lat",
        "type": "STRING",
        "description": "",
        "default": "37.788022"
      },
      {
        "name": "lon",
        "type": "STRING",
        "description": "",
        "default": "-122.399797"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://sun-seeker-api.p.rapidapi.com/sunposition\"\nquerystring = {\"lat\": lat, \"lon\": lon}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sun-seeker-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Sun Seeker API: sunposition",
    "tool description": "Retrieves the live solar position (azimuth and elevation) for a given latitude and longitude. This endpoint utilizes solar positioning algorithms to calculate real-time azimuth and elevation angles, providing precise data for applications such as solar energy planning, astronomical tracking, and geospatial analysis, with inputs validated to ensure accuracy within global coordinates.",
    "API name": "sunposition",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides the live solar position relative to a specific geographic coordinate. It returns two key metrics: the azimuth, which represents the sun's compass direction, and the elevation, its angle above the horizon. This data is useful for applications like positioning solar panels, architectural design, or astronomical tracking.",
      "output_format": "The output is a single, non-nested JSON object containing two key-value pairs. The keys, 'azimuth' and 'elevation', correspond to floating-point number values. The output is not an array and does not involve pagination or cursoring."
    },
    "connected tools": [
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "param_name": "q",
            "connection_type": "indirect",
            "description": "This tool provides complementary astronomical data (sunrise, sunset, moonrise, etc.) that could be used alongside sun position data"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "param_name": "q",
            "connection_type": "indirect",
            "description": "This tool provides complementary astronomical data that could be used alongside sun position data"
          },
          {
            "param_name": "date",
            "connection_type": "indirect",
            "description": "This tool provides complementary astronomical data that could be used alongside sun position data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Sunrise Sunset Times",
    "parent tool description": "Get sunrise and sunset times using date, latitude, and longitude.",
    "required_parameters": [
      {
        "name": "latitude",
        "type": "NUMBER",
        "description": "",
        "default": "51.5072"
      },
      {
        "name": "date",
        "type": "STRING",
        "description": "",
        "default": "2021-10-31"
      },
      {
        "name": "longitude",
        "type": "NUMBER",
        "description": "",
        "default": "-0.1276"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://sunrise-sunset-times.p.rapidapi.com/getSunriseAndSunset\"\nquerystring = {\"latitude\": latitude, \"timeZoneId\": timezoneid, \"date\": date, \"longitude\": longitude}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"sunrise-sunset-times.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
    "tool description": "Gets sunrise and sunset times by date, latitude, and longitude. This endpoint is part of a service that provides astronomical data, utilizing precise calculations to deliver accurate times based on geographical coordinates and dates, enabling travelers and enthusiasts to plan activities around daylight conditions.",
    "API name": "Get Sunrise and Sunset Times",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides the precise sunrise and sunset times for a given date and location. The response contains two timestamps, one for sunrise and one for sunset. These timestamps are highly specific, including the date, time, UTC offset, and a full timezone identifier, which is useful for planning activities based on daylight.",
      "output_format": "The output is a single JSON object with two fixed keys: \"sunrise\" and \"sunset\". The value for each key is a string representing a timestamp in an extended ISO 8601 format (YYYY-MM-DDTHH:MMZ[Timezone/Region]). The output is not paginated and does not contain nested structures."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "date",
            "description": "The UTC day of the data in the past in `YYYY-MM-DD` format."
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "start",
            "description": "The start date of the period (YYYY-MM-DD) can be extracted from sunrise/sunset timestamp"
          },
          {
            "name": "end",
            "description": "The end date of the period (YYYY-MM-DD) can be extracted from sunrise/sunset timestamp"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "start",
            "description": "The start date of the period (YYYY-MM-DD) can be extracted from sunrise/sunset timestamp"
          },
          {
            "name": "end",
            "description": "The end date of the period (YYYY-MM-DD) can be extracted from sunrise/sunset timestamp"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "dt",
            "description": "Date can be extracted from the sunrise/sunset timestamp"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "date",
            "description": "Date can be extracted from the sunrise/sunset timestamp"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Weather API - By Any City",
    "parent tool description": "The API provides current weather information for a specific city worldwide. It allows users to retrieve up-to-date information on weather conditions, such as temperature, humidity, wind speed, and precipitation, for a specified location. ",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weather-api-by-any-city.p.rapidapi.com/weather/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weather-api-by-any-city.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "Weather API - By Any City: Get Weather Updates",
    "tool description": "Retrieves current weather data for a specific city, including temperature, humidity, wind speed, and precipitation. This API leverages real-time data sources and a global network of weather stations to provide accurate, location-specific forecasts, enabling users to stay informed about local conditions for travel, events, and daily planning.",
    "API name": "Get Weather Updates",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a comprehensive, real-time weather report for a specified city. It includes detailed location information (name, region, country, coordinates, local time) and a full suite of current weather metrics. These metrics cover temperature, wind, pressure, precipitation, humidity, visibility, and atmospheric conditions, making it useful for immediate and short-term planning.",
      "output_format": "The output is a single JSON object, not an array. It contains two primary nested objects: 'location' and 'current'. The 'current' object itself contains a nested 'condition' object. The data structure appears to be fixed and consistently populated across different locations, with no indication of pagination or cursoring."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's location data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "weather forecast 14 days",
    "parent tool description": "weather forecast world wide  14 days 6hourly",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weather-forecast-14-days.p.rapidapi.com/api/countrycitylist\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weather-forecast-14-days.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "weather forecast 14 days: List of all Countries",
    "tool description": "Provides a list of all countries, serving as a foundational data source for the broader weather forecasting service. This endpoint retrieves country information to support location-based weather data, enabling accurate 14-day forecasts with 6-hourly updates worldwide. The parent tool leverages a global weather database to deliver real-time climate insights, and this endpoint ensures comprehensive geographical coverage by maintaining an up-to-date registry of all nations.",
    "API name": "List of all Countries",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a list of geographical locations, including sovereign countries as well as major administrative regions like US states and Canadian provinces. Each location is represented by its full name and a corresponding two-letter code. This output is intended to be a foundational reference, enabling users or systems to identify the correct code for a location when querying for weather data.",
      "output_format": "The output is a single JSON object. The core information is located under the 'Countries' key, which contains a JSON array of location objects. Each object in this array has two string properties: 'COUNTRY' (the two-letter code) and 'name' (the full name). The list is not paginated."
    },
    "connected tools": [
      {
        "tool name": "weather forecast 14 days: List of cities in one Country",
        "connect params": [
          {
            "name": "COUNTRY",
            "description": "Country",
            "connection_type": "The source tool provides country codes that can be used to specify which country's cities to retrieve"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Coordinates by zip/post code",
        "connect params": [
          {
            "name": "zip",
            "description": "Zip/post code and country code divided by comma. Please use ISO 3166 country codes",
            "connection_type": "The source tool provides country codes that can be used as part of the zip parameter"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By city name",
        "connect params": [
          {
            "name": "q",
            "description": "City name, state code and country code divided by comma, Please, refer to [ISO 3166](https://www.iso.org/obp/ui/#search) for the state codes or country codes.",
            "connection_type": "The source tool provides country codes that can be used as part of the query parameter"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By city name",
        "connect params": [
          {
            "name": "q",
            "description": "City name, state code and country code divided by comma, use ISO 3166 country codes.",
            "connection_type": "The source tool provides country codes that can be used as part of the query parameter"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Location search",
        "connect params": [
          {
            "name": "country",
            "description": "",
            "connection_type": "The source tool provides country codes that can be used to filter location search results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "weather forecast 14 days",
    "parent tool description": "weather forecast world wide  14 days 6hourly",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weather-forecast-14-days.p.rapidapi.com/api/countrycitylist\"\nquerystring = {\"LANG\": lang, \"COUNTRY\": country}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weather-forecast-14-days.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "weather forecast 14 days: List of cities in one Country",
    "tool description": "Retrieves a list of cities within UK. This is part of a global weather forecasting service that provides 14-day forecasts with 6-hourly intervals, utilizing a comprehensive database of cities to support location-based weather data retrieval and enhance user customization of weather insights.",
    "API name": "List of cities in one Country",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a detailed list of cities for a single, specified country. The output includes metadata about the data source, terms of use, and last modification time. The main content is an array of city objects, where each object provides the city's name, WMO code, latitude, longitude, and country code, which can be used to identify locations for subsequent weather forecast queries.",
      "output_format": "The output is a single JSON object. It contains a top-level key, 'Cities', which holds a JSON array of city objects. A notable characteristic is that numerical data, such as latitude, longitude, and the total city count ('NumberOfCity'), are represented as strings. The structure is nested, with country-specific information contained within a 'location' object."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from city objects in source output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from city objects in source output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from city objects in source output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from city objects in source output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from city objects in source output"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from city objects in source output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from city objects in source output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude,longitude from city objects in source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "weather forecast 14 days",
    "parent tool description": "weather forecast world wide  14 days 6hourly",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "city",
        "type": "STRING",
        "description": "name of a city",
        "default": "New York"
      }
    ],
    "code": "import requests\n\nurl = \"https://weather-forecast-14-days.p.rapidapi.com/api/getlocation\"\nquerystring = {\"LANG\": lang, \"city\": city}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weather-forecast-14-days.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "weather forecast 14 days: Search location by Name or zip code",
    "tool description": "Searches a location by name or zip code to retrieve the key for weather forecasting. This endpoint leverages the parent tool's worldwide weather forecast capabilities, utilizing real-time meteorological data to provide precise 14-day forecasts with 6-hourly intervals, enabling users to retrieve detailed weather information for any location globally.",
    "API name": "Search location by Name or zip code",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a search result for a specified location. It returns a list of matching locations, likely containing details such as a location name and a unique key. This key is intended to be used in a subsequent step to retrieve the detailed 14-day weather forecast. If no locations are found or an error occurs, the output may be an object with an empty list or an empty string.",
      "output_format": "The output is a string-serialized JSON object. This object contains metadata fields and a 'location' key which holds an array of location results. This 'location' array can be empty if no matching locations are found. In some cases, the tool may return an empty string, possibly indicating an error or no results."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "place_id",
            "description": "The source tool returns location keys that can be used as place_id for retrieving current weather data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "place_id",
            "description": "The source tool returns location keys that can be used as place_id for retrieving daily weather forecasts"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "place_id",
            "description": "The source tool returns location keys that can be used as place_id for retrieving hourly weather forecasts"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "place_id",
            "description": "The source tool returns location keys that can be used as place_id for retrieving minute-by-minute precipitation forecasts"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "place_id",
            "description": "The source tool returns location keys that can be used as place_id for retrieving severe weather alerts"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "place_id",
            "description": "The source tool returns location keys that can be used as place_id for retrieving astronomical data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "place_id",
            "description": "The source tool returns location keys that can be used as place_id for retrieving historical weather data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "place_id",
            "description": "The source tool returns location keys that can be used as place_id for retrieving weather statistics"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "WeatherAPI.com",
    "parent tool description": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar:<metar code> e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
        "default": "53.1,-0.13"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/current.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "WeatherAPI.com: Realtime Weather API",
    "tool description": "Retrieves current weather data in JSON/XML formats as a Current Object. This is part of WeatherAPI.com, a comprehensive weather and geolocation API provider offering forecasts, historical data, alerts, and more, utilizing its extensive weather data sources to deliver accurate and up-to-date current weather information.",
    "API name": "Realtime Weather API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "This tool provides a detailed snapshot of the current weather conditions for a specified location. The output includes comprehensive meteorological data like temperature, wind speed and direction, pressure, precipitation, humidity, and UV index, often in both metric and imperial units. It also returns precise geolocation information for the queried location, including coordinates, region, country, and the local time.",
      "output_format": "The output is a single, non-paginated JSON object. This object contains two primary nested objects: 'location' and 'current'. The 'current' object further contains a nested 'condition' object, which provides a text description and icon for the weather. The structure is consistent across different locations."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's location data"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "WeatherAPI.com",
    "parent tool description": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/sports.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "WeatherAPI.com: Sports API",
    "tool description": "Retrieves a listing of upcoming sports events for football, cricket, and golf in JSON format. This endpoint is part of WeatherAPI.com's extensive APIs, which provide weather, geolocation, and sports data, leveraging its comprehensive infrastructure to deliver structured event listings for sports enthusiasts.",
    "API name": "Sports API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns lists of upcoming sporting events categorized by sport (football, cricket, and golf). For each event, it provides detailed information including the teams or players involved, the tournament name, the stadium and country of the event, and the scheduled start date and time. This data is intended to be used by applications that display sports schedules and event listings.",
      "output_format": "The output is a single JSON object. The top-level keys are the names of the sports ('football', 'cricket', 'golf'). The value for each key is a JSON array of event objects. This array can be empty if there are no upcoming events for that sport. Each event object contains string fields: 'stadium', 'country', 'region', 'tournament', 'start', and 'match'. The 'region' field was observed to be an empty string in the provided examples."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: find_places",
        "connect params": [
          {
            "name": "text",
            "description": "Place name to search for",
            "value_from_source": "stadium or country"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: find_places_prefix",
        "connect params": [
          {
            "name": "text",
            "description": "Place name prefix to search for",
            "value_from_source": "stadium or country"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "",
            "value_from_source": "stadium"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "",
            "value_from_source": "stadium"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "",
            "value_from_source": "stadium"
          }
        ]
      },
      {
        "tool name": "weather forecast 14 days: Search location by Name or zip code",
        "connect params": [
          {
            "name": "city",
            "description": "name of a city",
            "value_from_source": "stadium"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "WeatherAPI.com",
    "parent tool description": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
        "default": "London"
      }
    ],
    "optional_parameters": [
      {
        "name": "dt",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Date",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/astronomy.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "WeatherAPI.com: Astronomy API",
    "tool description": "Retrieves up-to-date astronomy data including sunrise, sunset, moonrise, moonset, moon phase, and illumination in JSON format. This endpoint is part of WeatherAPI.com, a comprehensive API provider offering weather forecasts, historical data, geolocation, and astronomy services, delivering accurate real-time astronomical information through its extensive infrastructure.",
    "API name": "Astronomy API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "This tool provides astronomical data for a specified location. The output includes the times for sunrise, sunset, moonrise, and moonset, along with the current moon phase and its illumination percentage. It also echoes back the queried location's details and provides integer flags indicating if the sun and moon are currently above the horizon.",
      "output_format": "The output is a single JSON object. Key astronomical data is nested under the path `astronomy.astro`. The `location.region` field can be an empty string. Boolean states, such as `is_moon_up` and `is_sun_up`, are represented as integers (0 for false, 1 for true) rather than native boolean types."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "param_name": "lat",
            "connection": "The source tool provides location data that can be used for astronomical calculations"
          },
          {
            "param_name": "lon",
            "connection": "The source tool provides location data that can be used for astronomical calculations"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "param_name": "lat",
            "connection": "The source tool provides location data and sun information that can be used for solar position calculations"
          },
          {
            "param_name": "lon",
            "connection": "The source tool provides location data and sun information that can be used for solar position calculations"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "param_name": "latitude",
            "connection": "The source tool provides location data and sunrise/sunset information that can be used by this tool"
          },
          {
            "param_name": "longitude",
            "connection": "The source tool provides location data and sunrise/sunset information that can be used by this tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "40.73,-73"
      }
    ],
    "optional_parameters": [
      {
        "name": "tp",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "aqi",
        "type": "STRING",
        "description": "",
        "default": "yes"
      },
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "",
        "default": "en"
      },
      {
        "name": "alerts",
        "type": "STRING",
        "description": "",
        "default": "no"
      },
      {
        "name": "num_of_days",
        "type": "NUMBER",
        "description": "",
        "default": "3"
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/weather.ashx\"\nquerystring = {\"aqi\": aqi, \"lang\": lang, \"alerts\": alerts, \"num_of_days\": num_of_days, \"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "World Weather Online API: Local Weather API",
    "tool description": "Retrieves current weather conditions, 14-day forecasts, air quality data, weather alerts, and monthly climate averages for over 4 million cities and towns worldwide. This is part of the Free Weather API and Geo API, which provides hourly, 14-day, historical weather data, and specialized marine and ski weather information in XML and JSON formats, enabling developers and businesses to access comprehensive weather insights for global locations.",
    "API name": "Local Weather API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns detailed weather data for a specified location, identified by city, zipcode, or latitude/longitude. The output includes a snapshot of the current conditions (temperature, wind, visibility, air quality) and a daily forecast. The forecast section contains a daily summary (max/min temperatures, sun hours) and astronomical information (sunrise, sunset, moon phase).",
      "output_format": "The output is in XML format, with a root element named `<data>`. The data is nested, containing main elements like `<current_condition>` and `<weather>`. The `<weather>` element, representing a daily forecast, contains further nested elements like `<astronomy>`, `<air_quality>`, and `<hourly>`. The provided examples are truncated, suggesting the full response may contain more data or a sequence of `<weather>` or `<hourly>` elements for multi-day/24-hour forecasts."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "45.45,6.7"
      }
    ],
    "optional_parameters": [
      {
        "name": "tp",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "",
        "default": "en"
      },
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "num_of_days",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/ski.ashx\"\nquerystring = {\"q\": q, \"lang\": lang, \"num_of_days\": num_of_days}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "World Weather Online API: Ski Weather API",
    "tool description": "Generates a 7-day ski and mountain weather forecast for a specified location. This is part of the Free Weather API and Geo API, which offers comprehensive weather data including hourly, 14-day, historical weather, and marine/ski forecasts in XML and JSON formats, providing developers and businesses with reliable weather insights for global locations.",
    "API name": "Ski Weather API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed 7-day ski and mountain weather forecast for a specified location. The output includes daily summary data such as chance of snow, total snowfall, and astronomical information (sunrise/sunset). It also provides more granular weather details for the top, middle, and bottom sections of the mountain, including max/min temperatures and hourly breakdowns of temperature, wind, and weather conditions.",
      "output_format": "The output is an XML string with a root `<data>` element. Inside, a `<weather>` element contains the forecast for a single day. A complete 7-day forecast would likely contain a sequence of these `<weather>` elements. Each day's forecast contains nested `<hourly>` elements, which represent a time-series of weather data for that day, although the examples are truncated to show only the first hour."
    },
    "connected tools": [
      {
        "tool name": "Ski Resort Forecast: 5 Day Forecast",
        "connect params": [
          {
            "name": "resort",
            "description": "The ski resort location from the source tool's output can be used to query this tool"
          }
        ]
      },
      {
        "tool name": "Ski Resort Forecast: Hourly Forecast",
        "connect params": [
          {
            "name": "resort",
            "description": "The ski resort location from the source tool's output can be used to query this tool"
          }
        ]
      },
      {
        "tool name": "Ski Resort Forecast: Current Snow Conditions",
        "connect params": [
          {
            "name": "resort",
            "description": "The ski resort location from the source tool's output can be used to query this tool"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "The location coordinates from the ski weather data can be used to query general weather"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "The location coordinates from the ski weather data can be used to query astronomy data"
          },
          {
            "name": "date",
            "description": "The forecast dates from the ski weather data can be used to query astronomy data for those dates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "49.597, -8.19"
      }
    ],
    "optional_parameters": [
      {
        "name": "tp",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "",
        "default": "en"
      },
      {
        "name": "tide",
        "type": "STRING",
        "description": "",
        "default": "no"
      },
      {
        "name": "num_of_days",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/marine.ashx\"\nquerystring = {\"q\": q, \"lang\": lang, \"tide\": tide, \"num_of_days\": num_of_days}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "World Weather Online API: Marine Weather API",
    "tool description": "Generates a 7-day marine weather forecast and tide data for worldwide locations. This is part of the Free Weather API, which provides comprehensive weather and geo data including hourly, 14-day, historical weather, and specialized Marine and Ski weather APIs, designed for developers and businesses via XML and JSON formats.",
    "API name": "Marine Weather API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a 7-day marine weather forecast for a specified location. The output, formatted in XML, includes a daily summary with max/min temperatures and astronomical data (sunrise, sunset, moon phase), as well as a detailed hourly breakdown. The hourly data contains standard weather metrics like temperature and wind speed, alongside marine-specific information such as wave height, swell direction, swell period, and water temperature. The API also returns a structured error message if the requested location cannot be found.",
      "output_format": "The output is an XML document. A successful response has a root `<data>` element containing one or more `<weather>` elements, each representing a single day. Each `<weather>` element contains daily data and a nested list of `<hourly>` elements for that day's forecast. An error response also has a root `<data>` element, but it contains an `<error>` element with an error `<msg>` inside."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "The marine weather API provides location data that can be used to query current weather conditions at the same location"
          },
          {
            "name": "lon",
            "description": "The marine weather API provides location data that can be used to query current weather conditions at the same location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "The marine weather API provides location data that can be used to query daily weather forecasts at the same location"
          },
          {
            "name": "lon",
            "description": "The marine weather API provides location data that can be used to query daily weather forecasts at the same location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "The marine weather API provides location data that can be used to query hourly weather forecasts at the same location"
          },
          {
            "name": "lon",
            "description": "The marine weather API provides location data that can be used to query hourly weather forecasts at the same location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "The marine weather API provides location data that can be used to query astronomical data at the same location"
          },
          {
            "name": "lon",
            "description": "The marine weather API provides location data that can be used to query astronomical data at the same location"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "The marine weather API provides location coordinates that can be used to query astronomical data at the same location"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "The marine weather API provides location coordinates that can be used to query local weather at the same location"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "The marine weather API provides location coordinates that can be used to query astronomical data at the same location"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Air Quality",
    "parent tool description": "Retrieve current, forecasted, and historical air quality for any point in the world.",
    "tool name": "Air Quality: Current Air Quality",
    "tool description": "Retrieves current air quality conditions for any location in the world when provided with latitude and longitude coordinates. This endpoint taps into a comprehensive global air quality monitoring system that offers not just current conditions, but also forecasted and historical air quality data for any point worldwide, allowing users to access detailed pollution information for specific locations.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "STRING",
        "description": "Longitude",
        "default": "-73.00597"
      },
      {
        "name": "lat",
        "type": "STRING",
        "description": "Latitude",
        "default": "40.71427"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://air-quality.p.rapidapi.com/current/airquality\"\nquerystring = {\"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"air-quality.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Current Air Quality",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a detailed summary of current air quality conditions for a specific location identified by latitude and longitude. It includes the overall Air Quality Index (AQI), concentrations of various pollutants (like CO, NO2, O3, SO2, PM10, PM25), and allergen information such as mold and pollen levels. The response also echoes back location details like the city, country, state, and timezone for confirmation.",
      "output_format": "The output is a single JSON object. The core air quality readings are nested within a 'data' key, which is a JSON array. In the provided examples, this array consistently contains only one JSON object representing the current conditions. Some numeric values are integers (e.g., 'aqi'), while others can be floats (e.g., 'no2', 'o3')."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the air quality data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the air quality data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cloud Cast",
    "parent tool description": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.",
    "tool name": "Cloud Cast: Get the forecast",
    "tool description": "Gets the weather forecast for the current city, providing real-time meteorological data. This service leverages Cloudcast's efficient API built with Node.js and Express to deliver up-to-date weather conditions including temperature, humidity, wind speed, and other vital meteorological information from locations worldwide. The simple interface allows quick access to comprehensive weather data for the user's present location.",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "New York"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cloud-cast.p.rapidapi.com/forecast/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cloud-cast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get the forecast",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides weather forecast data for a specific location. The output consists of a list of forecast predictions at 3-hour intervals over several days. Each prediction includes detailed meteorological information such as temperature, humidity, pressure, wind speed, cloud cover, and a textual description of the weather conditions.",
      "output_format": "The successful output is a single JSON object containing a top-level key named 'list'. This key holds an array of JSON objects, where each object represents a single forecast for a specific timestamp and contains nested data structures. In the event of an application error, the tool may return an HTML error page as a string instead of the expected JSON object."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "The source tool provides weather data for a specific city that can be extracted"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "The source tool provides weather data for a specific city that can be extracted"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "The source tool provides weather data for a specific city that can be extracted"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "longitude",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool provides location data that can be extracted to use as latitude input"
          },
          {
            "name": "longitude",
            "description": "The source tool provides location data that can be extracted to use as longitude input"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "The source tool provides weather data for a specific city that can be extracted"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cloud Cast",
    "parent tool description": "Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.",
    "tool name": "Cloud Cast: Get current weather",
    "tool description": "Gets the current weather for a specified city name, providing real-time meteorological data. This endpoint leverages Cloudcast's simple and efficient API built with Node.js and Express to deliver comprehensive weather information including temperature, humidity, wind speed, and other vital conditions from anywhere in the world.",
    "required_parameters": [
      {
        "name": "city",
        "type": "string",
        "description": "",
        "default": "New York"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cloud-cast.p.rapidapi.com/weather/{city}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cloud-cast.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get current weather",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a detailed, real-time weather report for a specified city. The output contains comprehensive meteorological data, including temperature, humidity, pressure, wind speed, and visibility. It also provides geographical coordinates, sunrise/sunset times, and a short description of the current weather conditions (e.g., 'light rain', 'broken clouds').",
      "output_format": "The output is a single, non-paginated JSON object. It contains several nested objects for different data categories (e.g., 'main' for temperature data, 'wind' for wind data) and a nested array for 'weather' conditions. Some fields, such as 'rain', may be omitted if not applicable to the current weather."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's geographical coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's geographical coordinates"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use city name from the source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude/longitude from the source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name or latitude/longitude from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Foreca Weather",
    "parent tool description": "Everything you need to build a weather app",
    "tool name": "Foreca Weather: Current",
    "tool description": "Provides current weather estimates for a specified location, delivering up-to-date meteorological data such as temperature, conditions, and forecasts. This endpoint is part of a comprehensive weather service that offers all the essential components needed to build a complete weather application, including real-time data, forecasts, and meteorological information that can be integrated into various platforms and services.",
    "required_parameters": [
      {
        "name": "location",
        "type": "string",
        "description": "",
        "default": "102643743"
      }
    ],
    "optional_parameters": [
      {
        "name": "windunit",
        "type": "STRING",
        "description": "Wind speed unit in response.",
        "default": "MS"
      },
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "Altitude (meters)",
        "default": "0"
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "Language (ISO 639-1 codes). Options: de, en, es, fr, it, pl, ru, fi, sv, nl, ko, pt, th, tr, zh, zh_TW (Chinese in Taiwan), zh_CN (Chinese in China). (default en)",
        "default": "en"
      },
      {
        "name": "tz",
        "type": "STRING",
        "description": "Time zone in response (IANA time zone database names)",
        "default": "Europe/London"
      },
      {
        "name": "tempunit",
        "type": "STRING",
        "description": "Temperature unit in response",
        "default": "C"
      }
    ],
    "code": "import requests\n\nurl = \"https://foreca-weather.p.rapidapi.com/current/{location}\"\nquerystring = {\"windunit\": windunit, \"alt\": alt, \"lang\": lang, \"tz\": tz, \"tempunit\": tempunit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"foreca-weather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Current",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides current weather conditions for a specific location. A successful output is a structured object containing detailed meteorological data points like temperature, humidity, wind speed, precipitation probability, and UV index. In case of an error, such as providing an invalid location ID, the tool returns a simple string message indicating the issue.",
      "output_format": "A successful response is a JSON object with a top-level key named \"current\". This key holds another nested object containing all the weather-related data. Error responses are not JSON but are plain strings. The output does not contain any arrays, so pagination is not applicable."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for historical weather lookup"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for historical weather lookup"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for weather statistics"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for weather statistics"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for hourly forecasts"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for hourly forecasts"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for current weather"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for current weather"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for daily forecasts"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for daily forecasts"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for minute-by-minute forecasts"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for minute-by-minute forecasts"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for weather alerts"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for weather alerts"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used to find nearest places"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used to find nearest places"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for astronomical data"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for astronomical data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for air quality history"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for air quality history"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for air quality forecasts"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for air quality forecasts"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool provides location data that can be used for 5-day forecasts"
          },
          {
            "name": "longitude",
            "description": "The source tool provides location data that can be used for 5-day forecasts"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool provides location data that can be used for 48-hour forecasts"
          },
          {
            "name": "longitude",
            "description": "The source tool provides location data that can be used for 48-hour forecasts"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool provides location data that can be used for current conditions"
          },
          {
            "name": "longitude",
            "description": "The source tool provides location data that can be used for current conditions"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for climate classification"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for climate classification"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool provides location data that can be used for sun position"
          },
          {
            "name": "lon",
            "description": "The source tool provides location data that can be used for sun position"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool provides location data that can be used for sunrise/sunset times"
          },
          {
            "name": "longitude",
            "description": "The source tool provides location data that can be used for sunrise/sunset times"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Foreca Weather",
    "parent tool description": "Everything you need to build a weather app",
    "tool name": "Foreca Weather: Location search",
    "tool description": "Searches for locations by name, allowing you to find specific places for weather information. This endpoint is part of a comprehensive weather service that provides all the essential data and functionality needed to build a complete weather application, including location search capabilities that serve as the foundation for retrieving accurate, location-specific weather forecasts.",
    "required_parameters": [
      {
        "name": "query",
        "type": "string",
        "description": "",
        "default": "mumbai"
      }
    ],
    "optional_parameters": [
      {
        "name": "lang",
        "type": "STRING",
        "description": "",
        "default": "en"
      },
      {
        "name": "country",
        "type": "STRING",
        "description": "",
        "default": "in"
      }
    ],
    "code": "import requests\n\nurl = \"https://foreca-weather.p.rapidapi.com/location/search/{query}\"\nquerystring = {\"lang\": lang, \"country\": country}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"foreca-weather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Location search",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a list of locations that match a given search query. These examples specifically show the result of an unsuccessful search, where no matching locations were found, indicated by an empty 'locations' array. A successful search would presumably populate this array with location objects, which could then be used to retrieve weather forecasts for a specific place.",
      "output_format": "The output is a JSON object with a single key, \"locations\". The value of this key is a JSON array. In the provided examples, this array is empty, which likely signifies that no results were found for the search query."
    },
    "connected tools": [
      {
        "tool name": "Foreca Weather: Nowcast",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Daily",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Latest observations",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Current",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Hourly",
        "connect params": [
          {
            "name": "location",
            "description": "Uses location ID from search results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Foreca Weather",
    "parent tool description": "Everything you need to build a weather app",
    "tool name": "Foreca Weather: Hourly",
    "tool description": "Provides hourly weather forecasts with detailed atmospheric conditions broken down by the hour. This uses comprehensive meteorological data from a weather service that offers everything needed to build a complete weather application, including temperature trends, precipitation probabilities, wind conditions, and other atmospheric metrics throughout the day. The forecast information is presented in an organized timeline format, enabling users to plan activities with precision based on expected weather changes.",
    "required_parameters": [
      {
        "name": "location",
        "type": "string",
        "description": "",
        "default": "102643743"
      }
    ],
    "optional_parameters": [
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "Altitude (meters)",
        "default": "0"
      },
      {
        "name": "history",
        "type": "BOOLEAN",
        "description": "Whether to include 24 hours of past data.",
        "default": "0"
      },
      {
        "name": "dataset",
        "type": "STRING",
        "description": "Variable set",
        "default": "full"
      },
      {
        "name": "tz",
        "type": "STRING",
        "description": "Time zone in response (IANA time zone database names)",
        "default": "Europe/London"
      },
      {
        "name": "periods",
        "type": "NUMBER",
        "description": "Number of time steps (default 8, maximum 12)",
        "default": "8"
      },
      {
        "name": "windunit",
        "type": "STRING",
        "description": "Wind speed unit in response.",
        "default": "MS"
      },
      {
        "name": "tempunit",
        "type": "STRING",
        "description": "Temperature unit in response",
        "default": "C"
      }
    ],
    "code": "import requests\n\nurl = \"https://foreca-weather.p.rapidapi.com/forecast/hourly/{location}\"\nquerystring = {\"alt\": alt, \"history\": history, \"dataset\": dataset, \"tz\": tz, \"periods\": periods, \"windunit\": windunit, \"tempunit\": tempunit}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"foreca-weather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Hourly",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides a detailed hourly weather forecast for a given location. A successful response contains a chronological list of weather conditions for each upcoming hour, including temperature, precipitation probability, wind conditions, and other atmospheric metrics. In case of an error, such as providing an invalid location ID, the tool returns a simple string error message.",
      "output_format": "A successful output is a JSON object with a single top-level key, 'forecast', which contains a JSON array of objects. Each object in the array represents the forecast for a specific hour. Error outputs are plain strings, not structured JSON. The provided successful example is a stringified representation of the JSON object."
    },
    "connected tools": [
      {
        "tool name": "Cloud Cast: Get the forecast",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get current weather",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "The city name can be extracted from the source tool's location information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Forecast",
    "parent tool description": "Get 16 days weather forecast data - worldwide - geographical coordinates...",
    "tool name": "Forecast: RapidApiGetForecastHourlyByCoordinates",
    "tool description": "Retrieves detailed hourly weather forecast information for a specified location. This endpoint is part of a comprehensive weather forecasting service that provides worldwide meteorological data for up to 16 days, using geographical coordinates to deliver precise location-based predictions. The service enables users to access granular hour-by-hour weather conditions, allowing for detailed planning and decision-making based on anticipated weather patterns at specific times throughout the day.",
    "required_parameters": [
      {
        "name": "latitude",
        "type": "NUMBER",
        "description": "Latitude",
        "default": 46.95828
      },
      {
        "name": "longitude",
        "type": "NUMBER",
        "description": "Longitude",
        "default": 10.87152
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://forecast9.p.rapidapi.com/rapidapi/forecast/{latitude}/{longitude}/hourly/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"forecast9.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "RapidApiGetForecastHourlyByCoordinates",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides a detailed hourly weather forecast for a specified geographical location. The output is a list of hourly data points, each containing comprehensive meteorological information such as temperature, pressure, humidity, cloud cover, wind speed and direction, and precipitation probability. This allows for precise, short-term activity planning based on anticipated weather conditions.",
      "output_format": "The tool returns a JSON object with a single key, \"items\", which holds an array of hourly forecast objects. Each object in the array represents a consecutive hour and contains nested objects for detailed metrics like 'weather', 'prec' (precipitation), 'temperature', 'clouds', and 'wind'. Many fields within these objects, such as 'sunHours', 'rainHours', or min/max values, can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "tool name": "meteostat: Daily Point Data",
    "tool description": "Retrieves historical daily weather statistics for a specific geographic location, drawing from aggregated data across multiple governmental interfaces. This Historical Weather & Climate Data API provides access to comprehensive meteorological records, allowing users to analyze past weather patterns, climate trends, and environmental data points from official governmental sources for research, planning, or analytical purposes.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "The point's longitude.",
        "default": "-79.4"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "The point's latitude.",
        "default": "43.6667"
      },
      {
        "name": "start",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The start date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      },
      {
        "name": "end",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The end date of the period (YYYY-MM-DD).",
        "default": "2020-01-31"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      },
      {
        "name": "freq",
        "type": "STRING",
        "description": "The time frequency of the records. Can be used for custom aggregation. Default is *null*.",
        "default": ""
      },
      {
        "name": "model",
        "type": "BOOLEAN",
        "description": "A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default is *true*.",
        "default": ""
      },
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "The point's elevation.",
        "default": "184"
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/point/daily\"\nquerystring = {\"lon\": lon, \"lat\": lat, \"start\": start, \"end\": end, \"alt\": alt}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Daily Point Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns historical daily weather data for a specific geographic location. The output is a JSON object containing metadata, such as the source station IDs, and a list of daily weather records. Each record includes metrics like average, minimum, and maximum temperature, precipitation, snow, wind speed, and atmospheric pressure for a given date.",
      "output_format": "The top-level response is a JSON object containing two keys: 'meta' (an object) and 'data' (an array). The 'data' key contains an array of JSON objects, where each object represents a single day's weather statistics. Several fields within the daily data objects, such as 'wdir', 'wpgt', 'pres', 'snow', and 'tsun', can be null if the information is unavailable."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "param_name": "date",
            "description": "Can use dates from the source tool's daily weather records"
          },
          {
            "param_name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          },
          {
            "param_name": "start",
            "description": "Can use dates from the source tool's daily weather records"
          },
          {
            "param_name": "end",
            "description": "Can use dates from the source tool's daily weather records"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use the latitude from the source tool's location data"
          },
          {
            "param_name": "lon",
            "description": "Can use the longitude from the source tool's location data"
          },
          {
            "param_name": "start",
            "description": "Can use dates from the source tool's daily weather records"
          },
          {
            "param_name": "end",
            "description": "Can use dates from the source tool's daily weather records"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "tool name": "meteostat: Hourly Point Data",
    "tool description": "Retrieves historical hourly weather observations for a specified geographic location, aggregated from multiple governmental interfaces. This endpoint is part of the Historical Weather & Climate Data API, which provides access to comprehensive archives of meteorological measurements and climate records, allowing users to analyze past weather patterns and trends with precision.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "The point's longitude.",
        "default": "-79.4"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "The point's latitude.",
        "default": "43.6667"
      },
      {
        "name": "end",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The end date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      },
      {
        "name": "start",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The start date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      }
    ],
    "optional_parameters": [
      {
        "name": "tz",
        "type": "STRING",
        "description": "The time zone according to the tz database. Default is UTC.",
        "default": "America/Toronto"
      },
      {
        "name": "alt",
        "type": "NUMBER",
        "description": "The point's elevation.",
        "default": "113"
      },
      {
        "name": "freq",
        "type": "STRING",
        "description": "The time frequency of the records. Can be used for custom aggregation. Default is *null*.",
        "default": ""
      },
      {
        "name": "model",
        "type": "BOOLEAN",
        "description": "A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default is *true*.",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/point/hourly\"\nquerystring = {\"lon\": lon, \"lat\": lat, \"end\": end, \"start\": start, \"tz\": tz, \"alt\": alt}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Hourly Point Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides historical hourly weather observations for a given location. The response contains a list of hourly data points, including temperature, precipitation, humidity, wind speed and direction, and atmospheric pressure. This information is designed for analyzing past weather patterns, trends, and specific meteorological events.",
      "output_format": "The output is a single JSON object containing two keys: `meta` and `data`. `meta` is an object with metadata about the request, such as the data generation time and the weather stations used. `data` is a JSON array of objects, where each object represents a single hour's weather observation. Some fields within the data objects, such as `snow`, `wpgt`, and `tsun`, can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude and longitude from the source tool's location data in format 'lat,lon'"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude and longitude from the source tool's location data in format 'lat,lon'"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude and longitude from the source tool's location data in format 'lat,-lon'"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude and longitude from the source tool's location data in format 'lat, lon'"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from the source tool's location data"
          },
          {
            "name": "lon",
            "description": "Can use longitude from the source tool's location data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "tool name": "meteostat: Nearby Stations",
    "tool description": "Provides a list of nearby weather stations for a given geographical location. This endpoint leverages the Historical Weather & Climate Data API to help users identify weather monitoring stations in proximity to their specified coordinates, enabling access to localized historical weather data and climate records from the appropriate measurement sources.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "The location's longitude.",
        "default": "-0.1257"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "The location's latitude.",
        "default": "51.5085"
      }
    ],
    "optional_parameters": [
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "The maximum number of weather stations. Default is 10.",
        "default": ""
      },
      {
        "name": "radius",
        "type": "NUMBER",
        "description": "The meter radius to search in. Default is 100000.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/stations/nearby\"\nquerystring = {\"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Nearby Stations",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of weather stations near a specified geographical location. The output is a JSON object containing a 'data' array, where each element represents a single station. For each station, the tool provides a unique identifier (ID), its name in English, and its distance from the input coordinates. The list is sorted by proximity, allowing users to identify the closest measurement sources for historical weather data.",
      "output_format": "The output is a single JSON object with two top-level keys: 'meta' and 'data'. The 'data' key contains an array of JSON objects, each representing a weather station. Each station object has a nested 'name' object which contains the station's name in English under the 'en' key. The list of stations is sorted by the 'distance' field in ascending order."
    },
    "connected tools": [
      {
        "tool name": "meteostat: Monthly Station Data",
        "connect params": [
          {
            "param_name": "station",
            "description": "The Meteostat weather station identifier can be obtained from the source tool's station ID"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Meta Data",
        "connect params": [
          {
            "param_name": "id",
            "description": "The Meteostat identifier of a weather station can be obtained from the source tool's station ID"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Climate Data",
        "connect params": [
          {
            "param_name": "station",
            "description": "The Meteostat weather station identifier can be obtained from the source tool's station ID"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Station Data",
        "connect params": [
          {
            "param_name": "station",
            "description": "The Meteostat weather station identifier can be obtained from the source tool's station ID"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Station Data",
        "connect params": [
          {
            "param_name": "station",
            "description": "The Meteostat weather station identifier can be obtained from the source tool's station ID"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "tool name": "meteostat: Hourly Station Data",
    "tool description": "Retrieves historical hourly weather observations for a specific weather station, providing detailed time-based meteorological data. This endpoint is part of the Historical Weather & Climate Data API, which aggregates information from multiple governmental interfaces to deliver comprehensive historical weather records and climate data, allowing users to access precise atmospheric conditions from the past for research, analysis, or planning purposes.",
    "required_parameters": [
      {
        "name": "start",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The start date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      },
      {
        "name": "station",
        "type": "STRING",
        "description": "The Meteostat weather station identifier.",
        "default": "10637"
      },
      {
        "name": "end",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The end date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      }
    ],
    "optional_parameters": [
      {
        "name": "model",
        "type": "BOOLEAN",
        "description": "A boolean parameter which specifies whether missing observations should be substituted with statistically optimized model data. Default is *true*.",
        "default": ""
      },
      {
        "name": "tz",
        "type": "STRING",
        "description": "The time zone according to the tz database. Default is UTC.",
        "default": "Europe/Berlin"
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      },
      {
        "name": "freq",
        "type": "STRING",
        "description": "The time frequency of the records. Can be used for custom aggregation. Default is *null*.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/stations/hourly\"\nquerystring = {\"start\": start, \"station\": station, \"tz\": tz, \"end\": end}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Hourly Station Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool provides historical hourly weather data for a specified weather station. The output is a time-series list of observations, where each entry includes detailed meteorological data for a specific hour, such as temperature, dew point, humidity, precipitation, wind conditions, and atmospheric pressure. This information is intended for historical analysis, research, and planning purposes.",
      "output_format": "The tool returns a single JSON object with a `data` key. The value of `data` is a JSON array where each element is an object representing one hour of weather data. Several fields within these hourly records, including `prcp`, `snow`, `wpgt`, and `tsun`, can be null, indicating that the data was not available for that measurement period."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "param_name": "date",
            "description": "Can use dates from the hourly station data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "param_name": "start",
            "description": "Can use timestamps from the hourly station data"
          },
          {
            "param_name": "end",
            "description": "Can use timestamps from the hourly station data"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Station Data",
        "connect params": [
          {
            "param_name": "station",
            "description": "Can use the same station ID from the source data"
          },
          {
            "param_name": "start",
            "description": "Can use dates from the hourly station data"
          },
          {
            "param_name": "end",
            "description": "Can use dates from the hourly station data"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Station Data",
        "connect params": [
          {
            "param_name": "station",
            "description": "Can use the same station ID from the source data"
          },
          {
            "param_name": "start",
            "description": "Can use dates from the hourly station data"
          },
          {
            "param_name": "end",
            "description": "Can use dates from the hourly station data"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Meta Data",
        "connect params": [
          {
            "param_name": "id",
            "description": "Can use the station ID from the source data"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Climate Data",
        "connect params": [
          {
            "param_name": "station",
            "description": "Can use the same station ID from the source data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "meteostat",
    "parent tool description": "Historical Weather & Climate Data API",
    "tool name": "meteostat: Daily Station Data",
    "tool description": "Retrieves historical daily weather statistics for a specific weather station, delivering aggregated meteorological data from multiple governmental interfaces. This endpoint is part of the Historical Weather & Climate Data API, which provides comprehensive access to past weather conditions and climate records, enabling analysis of weather patterns and trends over time.",
    "required_parameters": [
      {
        "name": "start",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The start date of the period (YYYY-MM-DD).",
        "default": "2020-01-01"
      },
      {
        "name": "station",
        "type": "STRING",
        "description": "The Meteostat weather station identifier.",
        "default": "10637"
      },
      {
        "name": "end",
        "type": "DATE (YYYY-MM-DD)",
        "description": "The end date of the period (YYYY-MM-DD).",
        "default": "2020-01-31"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "The unit system of the meteorological parameters. Default is metric.",
        "default": ""
      },
      {
        "name": "model",
        "type": "BOOLEAN",
        "description": "A boolean parameter which specifies whether missing data should be substituted with statistically optimized model data. Default is *true*.",
        "default": ""
      },
      {
        "name": "freq",
        "type": "STRING",
        "description": "The time frequency of the records. Can be used for custom aggregation. Default is *null*.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://meteostat.p.rapidapi.com/stations/daily\"\nquerystring = {\"start\": start, \"station\": station, \"end\": end}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"meteostat.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Daily Station Data",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides historical daily weather statistics for a specified weather station. It returns a time-series of data where each entry represents a single day and includes metrics like average, minimum, and maximum temperature, precipitation, snow depth, wind speed, atmospheric pressure, and total sun duration. This information is intended for analyzing past weather patterns and climate trends.",
      "output_format": "The output is a JSON object containing a `meta` object with generation details and a `data` key. The `data` key holds a JSON array of objects, where each object corresponds to a day's weather record. Fields such as `snow`, `wdir` (wind direction), `wpgt` (wind peak gust), and `tsun` (sun duration) can be null, indicating that the data is not available for that day."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "date",
            "description": "Can use dates from the source tool's time series data"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the same station ID from the source tool"
          },
          {
            "name": "start",
            "description": "Can use dates from the source tool's time series data"
          },
          {
            "name": "end",
            "description": "Can use dates from the source tool's time series data"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Meta Data",
        "connect params": [
          {
            "name": "id",
            "description": "Can use the same station ID from the source tool"
          }
        ]
      },
      {
        "tool name": "meteostat: Station Climate Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the same station ID from the source tool"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Station Data",
        "connect params": [
          {
            "name": "station",
            "description": "Can use the same station ID from the source tool"
          },
          {
            "name": "start",
            "description": "Can use dates from the source tool's time series data"
          },
          {
            "name": "end",
            "description": "Can use dates from the source tool's time series data"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "dt",
            "description": "Can use dates from the source tool's time series data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /products/types",
    "tool description": "Retrieves a list of product types that have active products available. This endpoint leverages the National Weather Service API (api.weather.gov) provided by NOAA (National Oceanic and Atmospheric Administration), which delivers comprehensive national weather data including current conditions and historical records. The returned product types represent categories of weather information that currently have active data available for access and analysis.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/products/types\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/products/types",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of weather product types that currently have active products available from the National Weather Service. Each product type is identified by a unique product code (e.g., 'AFD') and a corresponding descriptive name (e.g., 'Area Forecast Discussion'). This allows users to see the full range of available data categories, from forecasts and alerts to observations and advisories.",
      "output_format": "The output is a single JSON object containing a top-level key, '@graph', which holds a JSON array of product type objects. Each object in this array consistently has two string fields: 'productCode' and 'productName'. There is no indication of pagination."
    },
    "connected tools": []
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active/count",
    "tool description": "Retrieves a list of active counts for regions, areas, and zones from the National Weather Service API. This endpoint provides access to NOAA's comprehensive weather monitoring infrastructure, delivering current count data organized by geographical divisions. The National Weather Service API (api.weather.gov) offers authoritative weather information collected and maintained by the National Oceanic and Atmospheric Administration, allowing users to access both real-time weather conditions and historical meteorological data across the United States.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active/count\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/alerts/active/count",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "This tool provides a numerical summary of active weather alerts from the National Weather Service. The output contains the total count of alerts, subdivided into land and marine alerts. It also provides detailed counts broken down by various geographical divisions, including regions, areas (states/territories), and specific forecast zones.",
      "output_format": "The tool returns a single, non-paginated JSON object. This object contains top-level integer counts ('total', 'land', 'marine') and three nested JSON objects: 'regions', 'areas', and 'zones'. Within these nested objects, the keys are geographical identifier codes and the values are the integer counts of active alerts for that location."
    },
    "connected tools": [
      {
        "tool name": "National Weather Service: /alerts/active/area/{area}",
        "connect params": [
          {
            "name": "area",
            "description": "Can use area codes from the source tool's output 'areas' object keys"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts/active/region/{region}",
        "connect params": [
          {
            "name": "region",
            "description": "Can use region codes from the source tool's output 'regions' object keys"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts/active",
        "connect params": [
          {
            "description": "Can use the source tool's output to determine if there are active alerts before querying details"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts?{parameters}",
        "connect params": [
          {
            "name": "zone",
            "description": "Can use zone codes from the source tool's output 'zones' object keys"
          },
          {
            "name": "region",
            "description": "Can use region codes from the source tool's output 'regions' object keys"
          },
          {
            "name": "state",
            "description": "Can use state codes from the source tool's output 'areas' object keys"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /products/locations",
    "tool description": "Retrieves a list of locations with active weather products. This endpoint uses the National Weather Service API (api.weather.gov) to access NOAA's comprehensive database of weather monitoring stations and observation points across the United States. The National Oceanic and Atmospheric Administration's service provides current national weather data as well as historical records, allowing users to identify areas where active weather alerts, forecasts, or other meteorological products are currently being issued.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/products/locations\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/products/locations",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a comprehensive dictionary of all locations within the National Weather Service system that currently have active weather products. Each entry in the dictionary consists of a location identifier code as the key and its corresponding human-readable name (e.g., City, ST) as the value. This allows users to find the correct location code needed for other weather-related queries.",
      "output_format": "The response is a JSON object with a primary key 'locations'. The value of 'locations' is another JSON object that acts as a map, where keys are string location codes and values are either a string representing the location's name or null if a name is not available. The output appears to be a single, complete list with no pagination."
    },
    "connected tools": [
      {
        "tool name": "National Weather Service: /alerts/active/area/{area}",
        "connect params": [
          {
            "name": "area",
            "description": "The location identifier code from the source tool can be used as the area parameter"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts/active/region/{region}",
        "connect params": [
          {
            "name": "region",
            "description": "The location identifier code from the source tool can be used as the region parameter"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active",
    "tool description": "Retrieves a list of currently active weather alerts that can be filtered using various parameters, automatically setting the 'active' parameter to 1 and ignoring 'start' and 'end' parameters. When using ATOM format, results are returned in CAP-ATOM standard. This endpoint leverages the National Weather Service API (api.weather.gov) provided by NOAA (National Oceanic and Atmospheric Administration), which delivers comprehensive national weather data including current conditions and historical records to help users stay informed about immediate weather threats and hazards.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "/alerts/active",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a GeoJSON FeatureCollection object containing a list of currently active weather alerts from the National Weather Service. Each feature in the collection represents a single alert, providing detailed information such as the event type (e.g., Special Weather Statement), severity, certainty, affected geographic area (as both a text description and a coordinate polygon), and the full descriptive text of the alert. This information is intended to inform users about immediate and ongoing weather hazards.",
      "output_format": "The output is a single JSON object that follows the GeoJSON 'FeatureCollection' standard. The core data is a list of alert objects located in the 'features' array. Each alert object contains a 'properties' object which holds the detailed information about the specific weather event. Fields within the 'properties' object, such as 'ends', can be null."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check alerts for the same location"
          },
          {
            "name": "long",
            "description": "Can use coordinates from alert polygons to check alerts for the same location"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check current weather in affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check current weather in affected areas"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check hourly forecasts for affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check hourly forecasts for affected areas"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use coordinates from alert polygons to check daily forecasts for affected areas"
          },
          {
            "name": "lon",
            "description": "Can use coordinates from alert polygons to check daily forecasts for affected areas"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active/area/{area}",
    "tool description": "Retrieves a list of active weather alerts by geographical area in ATOM format, which returns items in CAP-ATOM standard. This endpoint leverages the National Weather Service API (api.weather.gov) maintained by NOAA (National Oceanic and Atmospheric Administration), providing access to critical real-time weather warnings and alerts as part of their comprehensive national weather data service. The API delivers authoritative government-issued weather alerts to help users stay informed about potentially dangerous weather conditions in specified areas.",
    "required_parameters": [
      {
        "name": "area",
        "type": "STRING",
        "description": "area: a valid area, see list in counts endpoint",
        "default": "TX"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active/area/{area}\"\nquerystring = {\"area\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/alerts/active/area/{area}",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of active weather alerts for a specified U.S. geographical area. The output, structured as a GeoJSON FeatureCollection, contains one or more alerts, each detailing the event type (e.g., Winter Storm Warning, Dense Fog), severity, affected locations, and timing (onset, expiration). This real-time information from the National Weather Service is intended to inform users about potentially hazardous weather conditions.",
      "output_format": "The output is a single JSON object following the GeoJSON FeatureCollection structure. The core data is a list of alert \"features\" under the `features` key. Each feature's `properties` object contains detailed information about a specific alert. Some fields within an alert, such as `geometry` or the `ends` timestamp, can be null. If there are no active alerts, the `features` list will likely be empty."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "long",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can extract latitude from alert geometry or affected area"
          },
          {
            "name": "lon",
            "description": "Can extract longitude from alert geometry or affected area"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "National Weather Service",
    "parent tool description": "National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.",
    "tool name": "National Weather Service: /alerts/active/region/{region}",
    "tool description": "Retrieves a list of active weather alerts for a specified region in CAP-ATOM format (e.g., '/alerts/active/region/GL'). This endpoint is part of the National Weather Service API (api.weather.gov) provided by NOAA (National Oceanic and Atmospheric Administration), which delivers comprehensive national weather data including current conditions and historical records. The alerts system helps users access critical weather warnings and advisories organized by geographical regions, leveraging NOAA's authoritative meteorological monitoring network.",
    "required_parameters": [
      {
        "name": "region",
        "type": "STRING",
        "description": "area: a valid region, see list in counts endpoint",
        "default": "AL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://national-weather-service.p.rapidapi.com/alerts/active/region/{region}\"\nquerystring = {\"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-weather-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "/alerts/active/region/{region}",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of active weather alerts for a specified geographical region. Each alert, provided in a GeoJSON format, includes details such as the event type (e.g., Gale Warning), severity, affected zones, effective times, and a descriptive headline. The output also contains a detailed description of the weather event, its potential impacts, and recommended safety instructions. If an invalid region is provided, a structured error message is returned instead.",
      "output_format": "The successful response is a JSON object structured as a GeoJSON FeatureCollection, where the `features` key contains an array of alert objects. Each alert's details are nested within a `properties` object. The `geometry` field can be null. An unsuccessful call due to an invalid region code returns a separate, flat JSON object detailing the error, including the HTTP status and a list of valid region codes."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "The weather alerts from the source tool contain geographic information about affected areas that could be used to determine latitude"
          },
          {
            "name": "long",
            "description": "The weather alerts from the source tool contain geographic information about affected areas that could be used to determine longitude"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts/active/area/{area}",
        "connect params": [
          {
            "name": "area",
            "description": "The region code from the source tool's output can be used to identify specific areas for more detailed alerts"
          }
        ]
      },
      {
        "tool name": "National Weather Service: /alerts?{parameters}",
        "connect params": [
          {
            "name": "region",
            "description": "The region code from the source tool can be directly used as a parameter for filtering alerts"
          },
          {
            "name": "zone",
            "description": "The affected zones in the alerts can be used to filter for specific zone alerts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "NOAA Tides",
    "parent tool description": "United States NOAA tide height and time predictions in JSON format.",
    "tool name": "NOAA Tides: Get stations",
    "tool description": "Retrieves a comprehensive list of all NOAA stations that provide tide predictions, which can be referenced in subsequent endpoint calls. This endpoint taps into the United States National Oceanic and Atmospheric Administration (NOAA) database to deliver tide height and time prediction data in JSON format, allowing users to identify available monitoring stations before requesting specific tide information.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://noaa-tides.p.rapidapi.com/stations\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"noaa-tides.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get stations",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output is a list of all available NOAA tide monitoring stations. Each station in the list is represented as an object containing a unique station ID, a name, the state or territory of location, and a descriptive long name. This information is intended to be used to identify the correct station ID for subsequent API calls to retrieve specific tide data.",
      "output_format": "The output is a JSON object with a single key, \"stations\", which holds a JSON array of station objects. Each object in the array contains string values for 'id', 'name', 'state', and 'long_name'. The 'state' field may occasionally be an empty string."
    },
    "connected tools": [
      {
        "tool name": "NOAA Tides: Get stations",
        "connect params": []
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By ZIP code",
    "tool description": "Retrieves weather data with USA as the default country if not specified. This service leverages a proprietary convolutional neural network that processes information from multiple sources including global and local weather models, satellites, radars, and a vast network of weather stations. The system provides historical, current, and forecasted weather data for any location on the globe via high-speed APIs, accounting for local climate nuances and delivering comprehensive meteorological information through RapidWeather's infrastructure.",
    "required_parameters": [
      {
        "name": "zip",
        "type": "NUMBER",
        "description": "Zip code",
        "default": "94040"
      }
    ],
    "optional_parameters": [
      {
        "name": "cnt",
        "type": "STRING",
        "description": "A number of timestamps, which will be returned in the API response.",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "You can use the **lang **parameter to get the output in your language.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/forecast\"\nquerystring = {\"zip\": zip}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Call 5 day / 3 hour forecast data - By ZIP code",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a detailed 5-day weather forecast for a specified ZIP code, with data points for every 3-hour interval. Each interval includes temperature (in Kelvin), atmospheric pressure, humidity, wind speed, cloudiness, and a textual weather description. The response contains a list of 40 forecast entries, providing a granular, time-series view of meteorological conditions.",
      "output_format": "The output is a single JSON object. The main forecast data is under the 'list' key, which is an array of objects, each representing a 3-hour forecast. The 'cnt' key at the top level indicates the number of forecast entries in the list, which appears to be consistently 40 for a full 5-day forecast. Key meteorological data points like temperature, wind, and weather conditions are nested within their own sub-objects ('main', 'wind', 'weather')."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          },
          {
            "name": "lon",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          },
          {
            "name": "lon",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          },
          {
            "name": "lon",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          },
          {
            "name": "lon",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          },
          {
            "name": "lon",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          },
          {
            "name": "longitude",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          },
          {
            "name": "lon",
            "description": "The source tool's output contains location coordinates that can be extracted and used here"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "tool name": "RapidWeather: By ZIP code",
    "tool description": "Searches for weather data with USA as the default country if no country is specified. This uses a proprietary convolutional neural network that collects and processes data from multiple sources including global and local weather models, satellites, radars, and a vast network of weather stations. The system provides historical, current, and forecasted weather information for any location on the globe via high-speed APIs, taking into account local climate nuances for comprehensive weather intelligence.",
    "required_parameters": [
      {
        "name": "zip",
        "type": "STRING",
        "description": "Zip code",
        "default": "94040"
      }
    ],
    "optional_parameters": [
      {
        "name": "lang",
        "type": "STRING",
        "description": "You can use the **lang **parameter to get the output in your language",
        "default": ""
      },
      {
        "name": "units",
        "type": "STRING",
        "description": "Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/weather\"\nquerystring = {\"zip\": zip}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "By ZIP code",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a detailed, real-time weather report for a specific location. The output includes geographical coordinates, current weather conditions (e.g., temperature, pressure, humidity, wind speed), visibility, and cloud coverage. It also provides supplementary data like sunrise/sunset times, timezone, and the city name associated with the queried location.",
      "output_format": "The output is a single JSON object. It contains several nested objects for organizing data, such as `coord`, `main`, and `wind`. The `weather` key holds an array of objects, although all examples show only a single element. Some fields within the nested objects, such as `gust` in the `wind` object, appear to be optional and may be omitted if not applicable."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          },
          {
            "name": "timezone",
            "source": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          },
          {
            "name": "timezone",
            "source": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          },
          {
            "name": "timezone",
            "source": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          },
          {
            "name": "timezone",
            "source": "timezone"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          },
          {
            "name": "timezone",
            "source": "timezone"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "source": "name"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "source": "name"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "source": "name"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "source": "coord.lat"
          },
          {
            "name": "longitude",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "source": "coord.lat"
          },
          {
            "name": "longitude",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "source": "coord.lat"
          },
          {
            "name": "longitude",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "RapidWeather: By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "source": "coord.lat"
          },
          {
            "name": "lon",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "source": "coord.lat"
          },
          {
            "name": "longitude",
            "source": "coord.lon"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "source": "name"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "source": "coord.lat,coord.lon"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "source": "name"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "source": "coord.lat,coord.lon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "RapidWeather",
    "parent tool description": "The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.",
    "tool name": "RapidWeather: By geographic coordinates",
    "tool description": "Retrieves weather data for a specific location using geographic coordinates (latitude and longitude). This proprietary convolutional neural network processes information from multiple sources including global and local weather models, satellites, radars, and a vast network of weather stations to deliver accurate weather data that accounts for local climate nuances. The system provides historical, current, and forecasted weather information for any point on the globe through high-speed APIs, ensuring comprehensive meteorological coverage regardless of location.",
    "required_parameters": [
      {
        "name": "lon",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "139"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "Geographical coordinates (latitude, longitude)",
        "default": "35"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.",
        "default": ""
      },
      {
        "name": "lang",
        "type": "STRING",
        "description": "You can use the **lang **parameter to get the output in your language",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://rapidweather.p.rapidapi.com/data/2.5/weather\"\nquerystring = {\"lon\": lon, \"lat\": lat}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"rapidweather.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "By geographic coordinates",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a detailed, current weather report for a specific location identified by latitude and longitude. The output includes key meteorological data such as temperature, pressure, humidity, wind speed, and cloud cover. It also provides supplementary information like sunrise/sunset times, visibility, location details (name, country), and a human-readable description of the weather conditions (e.g., 'clear sky').",
      "output_format": "The output is a single, non-paginated JSON object. It features a highly nested structure, with data organized into logical sub-objects like 'coord', 'main', 'wind', and 'sys'. The 'weather' key contains an array of objects, which in the examples holds a single element describing the primary weather condition. There are no explicit null values in the examples, but fields may be nullable in practice."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "meteostat: Point Climate Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Current air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Forecast air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Reverse geocoding",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Call 5 day / 3 hour forecast data - By geographic coordinates",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Cities in circle",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "meteostat: Nearby Stations",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's coordinates"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
        "connect params": [
          {
            "name": "location",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's coordinates"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Tomorrow.io",
    "parent tool description": "The Tomorrow.io Weather API delivers fast, reliable, and hyper-accurate weather data with the flexibility to integrate with any application, system, or program.\nSee why 40k developers currently use Tomorrow.io Weather API. Try it for free today here.\n\n\n",
    "tool name": "Tomorrow.io: retrieveWeatherRecentHisotry",
    "tool description": "Retrieves recent historical weather data for a specified location, providing access to past weather conditions and patterns. This endpoint leverages Tomorrow.io's Weather API, which delivers fast, reliable, and hyper-accurate weather data trusted by over 40,000 developers. The service offers the flexibility to integrate this historical weather information with any application, system, or program, allowing developers to incorporate past weather insights into their solutions.",
    "required_parameters": [
      {
        "name": "timesteps",
        "type": "STRING",
        "description": "",
        "default": "1d"
      },
      {
        "name": "location",
        "type": "STRING",
        "description": "",
        "default": "42.1, 82.51"
      }
    ],
    "optional_parameters": [
      {
        "name": "units",
        "type": "STRING",
        "description": "",
        "default": "metric"
      }
    ],
    "code": "import requests\n\nurl = \"https://tomorrow-io1.p.rapidapi.com/v4/weather/history/recent\"\nquerystring = {\"timesteps\": timesteps, \"units\": units, \"location\": location}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"tomorrow-io1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "retrieveWeatherRecentHisotry",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns historical weather data for a specified location. The data is organized into timelines, which can be aggregated on a daily or hourly basis. Each entry in the timeline includes a specific timestamp and a corresponding set of weather metrics, such as temperature, precipitation, cloud cover, humidity, and wind speed.",
      "output_format": "The output is a JSON object with a single root key, 'timelines'. The value of 'timelines' is another object whose key indicates the time interval (e.g., 'daily' or 'hourly'). This key contains an array of data points. Each data point in the array is an object with a 'time' (an ISO 8601 timestamp string) and a 'values' object, which holds the key-value pairs for numerous weather metrics."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "date",
            "description": "The source tool provides timestamps that can be extracted and formatted as YYYY-MM-DD for historical weather comparison"
          }
        ]
      },
      {
        "tool name": "meteostat: Daily Point Data",
        "connect params": [
          {
            "name": "start",
            "description": "Can use the earliest timestamp from the source tool's data"
          },
          {
            "name": "end",
            "description": "Can use the latest timestamp from the source tool's data"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "name": "start",
            "description": "Can use the earliest timestamp from the source tool's data"
          },
          {
            "name": "end",
            "description": "Can use the latest timestamp from the source tool's data"
          }
        ]
      },
      {
        "tool name": "RapidWeather: Historical air pollution data",
        "connect params": [
          {
            "name": "start",
            "description": "Can convert the earliest timestamp from the source tool to unix time"
          },
          {
            "name": "end",
            "description": "Can convert the latest timestamp from the source tool to unix time"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "date",
            "description": "Can extract date from the source tool's timestamps"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "dt",
            "description": "Can extract date from the source tool's timestamps for astronomical data comparison"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "date",
            "description": "Can extract date from the source tool's timestamps for astronomical data comparison"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "WeatherAPI.com",
    "parent tool description": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "tool name": "WeatherAPI.com: Time Zone API",
    "tool description": "Retrieves up-to-date time zone and local time information in JSON format. This endpoint is part of WeatherAPI.com, a comprehensive weather and geolocation service that provides extensive data including weather forecasts, historical weather, air quality, astronomy, and geolocation information. The Time Zone API specifically delivers accurate time data that complements the platform's broader suite of environmental and location-based services.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/timezone.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Time Zone API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The output is a JSON object containing detailed geolocation and time information for a specific location. It provides the location's name, region, country, and precise geographic coordinates (latitude and longitude). The primary data includes the IANA time zone identifier (e.g., 'America/New_York'), the current local time as a human-readable string, and the corresponding Unix epoch timestamp.",
      "output_format": "The tool returns a single JSON object. This object has one top-level key, \"location\", which contains a nested object with all the data fields. The provided examples do not show any evidence of pagination, cursoring, or nullable fields."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timezone",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Air Quality: Current Air Quality",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "lon",
            "description": "Can use longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from source tool's output"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from source tool's output"
          },
          {
            "name": "timeZoneId",
            "description": "Can use IANA time zone identifier from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "WeatherAPI.com",
    "parent tool description": "WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.",
    "tool name": "WeatherAPI.com: Astronomy API",
    "tool description": "Retrieves up-to-date astronomy information including sunrise, sunset, moonrise, moonset, moon phase, and illumination in JSON format. This endpoint is part of WeatherAPI.com, a comprehensive weather and geolocation service that provides extensive data through its managed API platform. Beyond this astronomy data, the service offers weather forecasts, historical weather, future predictions, weather alerts, air quality information, IP lookup capabilities, sports data, and time zone information\u2014all accessible through their free API provider service.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1",
        "default": "London"
      }
    ],
    "optional_parameters": [
      {
        "name": "dt",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Date",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://weatherapi-com.p.rapidapi.com/astronomy.json\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Astronomy API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a JSON object containing astronomical data for a specific geographical location. The output includes location details such as name, region, country, and coordinates. The primary information is the astronomical data for the current day, which provides sunrise, sunset, moonrise, and moonset times, as well as the moon's phase and illumination percentage.",
      "output_format": "The output is a single, nested JSON object. It has two main keys: `location` and `astronomy`. The `astronomy` key contains a nested `astro` object which holds the specific data points. The `location.region` field can be an empty string. There is no pagination."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "location.lat"
          },
          {
            "name": "longitude",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "location.lat"
          },
          {
            "name": "longitude",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "location.lat"
          },
          {
            "name": "longitude",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "source_path": "location.lat"
          },
          {
            "name": "lon",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "source_path": "location.lat"
          },
          {
            "name": "longitude",
            "source_path": "location.lon"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,location.lon"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.name"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat, location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,-location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,-location.lon"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "source_path": "location.lat,-location.lon"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "tool name": "World Weather Online API: Search API",
    "tool description": "Searches for location information based on a query string, returning details such as area name, country, latitude/longitude coordinates, population data, and a URL for weather information. This endpoint is part of a comprehensive Weather and Geo API service that provides worldwide location data alongside various weather forecasts (hourly, 14-day, historical, Marine, and Ski) for developers and businesses, available in both XML and JSON formats.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "london"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/search.ashx\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Search API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool returns a list of geographic locations matching a search query. For each location, it provides the area name, country, region, latitude/longitude coordinates, and population count. It also includes a specific URL for each result to retrieve detailed weather information, indicating this API is a preliminary step for location disambiguation before fetching weather data.",
      "output_format": "The output is an XML string. The root element, `<search_api>`, contains a series of `<result>` elements, effectively forming a list of locations. Each `<result>` element is a flat structure containing specific details about a location. Textual data within tags like `<areaName>`, `<country>`, and `<region>` is enclosed in CDATA blocks."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: historical_weather",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: weather_statistics",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: daily",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: find_places",
        "connect params": [
          {
            "name": "text",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: nearest_place",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality History",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Air Quality: Air Quality Forecast",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get hourly forecast",
        "connect params": [
          {
            "name": "city",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get wind speed",
        "connect params": [
          {
            "name": "city",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "Cloud Cast: Get humidty",
        "connect params": [
          {
            "name": "city",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Daily forecast (5 days)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Hourly forecast (48 hours)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Easy Weather: Current conditions (basic)",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Koppen Climate Classification: Classification",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "meteostat: Monthly Point Data",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Sun Seeker API: sunposition",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use latitude from search results"
          },
          {
            "name": "lon",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use latitude from search results"
          },
          {
            "name": "longitude",
            "description": "Can use longitude from search results"
          }
        ]
      },
      {
        "tool name": "Weather API - By Any City: Get Weather Updates",
        "connect params": [
          {
            "name": "city",
            "description": "Can use area name from search results"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Realtime Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude or city name from search results"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Sports API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use city name from search results"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude or city name from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Marine Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Local Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude or city name from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Ski Weather API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Time Zone API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from search results"
          }
        ]
      },
      {
        "tool name": "World Weather Online API: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "Can use latitude,longitude from search results"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "tool name": "World Weather Online API: Time Zone API",
    "tool description": "Retrieves current local time and UTC offset hour and minute for a specified location. This endpoint is part of a comprehensive Weather and Geo API service that provides worldwide location data, including hourly and 14-day forecasts, historical weather information, and specialized Marine and Ski weather data. The service delivers accurate time zone information alongside its extensive weather data offerings, available to both developers and businesses in XML and JSON formats.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "53,-0.13"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/tz.ashx\"\nquerystring = {\"q\": q}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Time Zone API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides detailed time zone information for a specified geographical location. It returns the current local date and time, the UTC offset expressed as a decimal number of hours, and the IANA time zone name (e.g., \"America/New_York\"). The output also includes a copy of the original request, specifying the type and value of the query (e.g., City, Zipcode, LatLon).",
      "output_format": "The output is formatted as a single XML document. It has a root element named `<data>` which contains two child elements: `<request>` and `<time_zone>`. The `<time_zone>` element is a nested structure containing the primary information fields: `<localtime>`, `<utcOffset>`, and `<zone>`. There is no indication of pagination or cursoring, as each request appears to return a single, complete response."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "param_name": "timezone",
            "description": "The source tool provides IANA time zone names (e.g., 'America/New_York') which can be directly used for the timezone parameter that accepts IANA database format values"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "param_name": "timezone",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts IANA database format values"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "param_name": "timezone",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts IANA database format values"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "param_name": "timezone",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts IANA database format values"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "param_name": "timezone",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts IANA database format values"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Point Data",
        "connect params": [
          {
            "param_name": "tz",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts tz database values"
          }
        ]
      },
      {
        "tool name": "meteostat: Hourly Station Data",
        "connect params": [
          {
            "param_name": "tz",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts tz database values"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Current",
        "connect params": [
          {
            "param_name": "tz",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts IANA time zone database names"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Hourly",
        "connect params": [
          {
            "param_name": "tz",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts IANA time zone database names"
          }
        ]
      },
      {
        "tool name": "Foreca Weather: Nowcast",
        "connect params": [
          {
            "param_name": "tz",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts IANA time zone database names"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "param_name": "timeZoneId",
            "description": "The source tool provides IANA time zone names which can be used for this parameter that accepts time zone IDs"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "World Weather Online API",
    "parent tool description": "Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.",
    "tool name": "World Weather Online API: Astronomy API",
    "tool description": "Provides astronomy information for any given date, including lunar data and celestial events. This endpoint is part of a comprehensive weather and geographical data service that offers worldwide location information, hourly forecasts, 14-day predictions, historical weather data, and specialized Marine and Ski weather information. The API delivers this astronomical data alongside other weather metrics in developer-friendly XML and JSON formats, making it valuable for businesses and applications that need to incorporate celestial information alongside meteorological data.",
    "required_parameters": [
      {
        "name": "q",
        "type": "STRING",
        "description": "",
        "default": "53,-0.13"
      },
      {
        "name": "date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "",
        "default": "2023-05-20"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "ENUM",
        "description": "",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://world-weather-online-api1.p.rapidapi.com/astronomy.ashx\"\nquerystring = {\"q\": q, \"date\": date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"world-weather-online-api1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Astronomy API",
    "domain name": "Weather",
    "output_info": {
      "output_info_summary": "The tool's output provides astronomical data for a given location and date. The information includes sunrise, sunset, moonrise, and moonset times, as well as the current moon phase and illumination percentage. It also returns time zone information for the location, such as the local time, UTC offset, and IANA time zone name.",
      "output_format": "The output is a structured XML string with a root element named `<data>`. The primary astronomical information is nested within a single `<time_zone>` element. The output is a single, non-array object and does not appear to use pagination."
    },
    "connected tools": [
      {
        "tool name": "AI Weather by Meteosource: astro",
        "connect params": [
          {
            "name": "timezone",
            "description": "The source tool provides IANA time zone information that can be used here"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: current",
        "connect params": [
          {
            "name": "timezone",
            "description": "The source tool provides IANA time zone information that can be used here"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: hourly",
        "connect params": [
          {
            "name": "timezone",
            "description": "The source tool provides IANA time zone information that can be used here"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: minutely",
        "connect params": [
          {
            "name": "timezone",
            "description": "The source tool provides IANA time zone information that can be used here"
          }
        ]
      },
      {
        "tool name": "AI Weather by Meteosource: alerts",
        "connect params": [
          {
            "name": "timezone",
            "description": "The source tool provides IANA time zone information that can be used here"
          }
        ]
      },
      {
        "tool name": "Sunrise Sunset Times: Get Sunrise and Sunset Times",
        "connect params": [
          {
            "name": "timeZoneId",
            "description": "The source tool provides IANA time zone information that can be used here"
          }
        ]
      },
      {
        "tool name": "WeatherAPI.com: Astronomy API",
        "connect params": [
          {
            "name": "q",
            "description": "The source tool provides location information that can be used for this query parameter"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Cities Cost of Living",
    "parent tool description": "Get detailed information about the living expenses of 650+ cities around the world.",
    "tool name": "Cities Cost of Living: Get Currencies List",
    "tool description": "Retrieves a comprehensive list of all available currencies used in the database. This endpoint leverages a global cost-of-living database covering over 650 cities worldwide, allowing users to understand which currencies are tracked within the system. The currency information serves as a foundation for comparing and analyzing living expenses across different regions, helping travelers, expatriates, and researchers make informed financial decisions when evaluating or comparing costs between international locations.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://cities-cost-of-living1.p.rapidapi.com/get_currencies_list\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"cities-cost-of-living1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get Currencies List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a comprehensive list of all currency codes tracked within the cost-of-living database. This list consists of standard three-letter currency abbreviations (e.g., 'USD', 'EUR'). This information is intended to inform users about which currencies are supported and can be used for subsequent queries and comparisons.",
      "output_format": "The output is a JSON object containing a single key, \"currencies\". The value associated with this key is an array of strings, with each string representing a unique currency code. The list appears to be complete and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "currency",
            "description": "The source tool provides valid currency codes in ISO 4217 format that can be used to specify the currency for hotel pricing information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Lost Ark",
    "parent tool description": "An API to get information for the game Lost Ark",
    "tool name": "Lost Ark: get engravings",
    "tool description": "Retrieves a comprehensive list of all available engravings in Lost Ark, providing detailed information about these character enhancement systems. This endpoint is part of a specialized API that delivers extensive game data for Lost Ark, allowing developers and players to access crucial information about the game's mechanics, items, and systems without having to manually search through the game or external wikis.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://lost-ark1.p.rapidapi.com/api/engravings\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"lost-ark1.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "get engravings",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "This tool provides a comprehensive list of the names of all available engravings in the game Lost Ark. It serves as a reference for players and developers to see all the possible character enhancement engravings without needing to consult the game or external wikis.",
      "output_format": "The output is a JSON object containing a single key, \"engravings\". The value associated with this key is a JSON array of strings, where each string is the name of a specific engraving. The list appears to be complete and is not paginated."
    },
    "connected tools": [
      {
        "tool name": "Lost Ark: get a specific item",
        "connect params": [
          {
            "name": "name",
            "description": "The name of an item to retrieve details for, which could be an engraving item"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "City List",
    "parent tool description": "List of all countries and cities",
    "tool name": "City List: getCountryList",
    "tool description": "Returns a comprehensive list of all countries with their corresponding ISO codes, ISO3 codes, and phone codes. This endpoint provides access to a standardized global database of country information, allowing users to retrieve internationally recognized identification codes and telecommunication prefixes for every nation. Part of a broader geographical reference service that maintains detailed records of countries and cities worldwide for use in applications requiring location data, address validation, or international communications.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://city-list.p.rapidapi.com/api/getCountryList\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"city-list.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "getCountryList",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive list of all countries. For each country, it provides a unique numeric ID, the official name (cname), the 2-character ISO code, the 3-character ISO3 code, and the international phone code. This data is useful for populating user interface elements like dropdowns, validating location data, or standardizing country information within an application.",
      "output_format": "The tool returns a JSON object. This object contains a key named \"0\", which holds a JSON array of country objects. Each object in the array represents a single country and has a consistent structure. Some fields, such as 'iso3', can be empty strings for certain entries like Antarctica."
    },
    "connected tools": [
      {
        "tool name": "City List: getCity",
        "connect params": [
          {
            "name": "iso",
            "description": "The ISO code from the source tool's country list can be used to retrieve cities for a specific country"
          }
        ]
      },
      {
        "tool name": "TrueWay Geocoding: Geocode",
        "connect params": [
          {
            "name": "country",
            "description": "The ISO code from the source tool can be used to specify the country for geocoding"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Search",
        "connect params": [
          {
            "name": "countrycodes",
            "description": "The ISO code from the source tool can be used to limit search results to specific countries"
          }
        ]
      },
      {
        "tool name": "Geocoding by API-Ninjas: /v1/geocoding",
        "connect params": [
          {
            "name": "country",
            "description": "The ISO code or country name from the source tool can be used to specify the country for geocoding"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Numbers",
    "parent tool description": "An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"",
    "tool name": "Numbers: Get year fact",
    "tool description": "Retrieves an interesting historical or numerical fact about a specific year. This uses an API that specializes in number-related trivia, drawing from a collection of mathematical, historical, and cultural facts about numbers, including years, dates, and mathematical properties. For example, you might learn when significant historical events occurred in a particular year, or discover numerical curiosities like '1729 is the Hardy-Ramanujan number, the smallest number expressible as the sum of two cubes in two different ways.'",
    "required_parameters": [
      {
        "name": "year",
        "type": "STRING",
        "description": "The year of interest",
        "default": "1492"
      }
    ],
    "optional_parameters": [
      {
        "name": "fragment",
        "type": "STRING",
        "description": "Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d.",
        "default": true
      },
      {
        "name": "json",
        "type": "STRING",
        "description": "Specify \"true\" to return result as JSON instead of plaintext.",
        "default": true
      }
    ],
    "code": "import requests\n\nurl = \"https://numbersapi.p.rapidapi.com/1492/year\"\nquerystring = {\"fragment\": true, \"json\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numbersapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Get year fact",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a single fact about a given year. The output includes the text of a historical event, the specific month and day it occurred, the year queried, and a boolean flag indicating if a result was found. This tool is used for retrieving interesting historical trivia associated with a particular year.",
      "output_format": "The output is a single, non-nested JSON object. It does not appear to support pagination or return multiple results in an array. All fields ('date', 'text', 'number', 'found', 'type') are present in the successful examples, suggesting they are non-nullable when a fact is found."
    },
    "connected tools": [
      {
        "tool name": "TED Talks API: getTalks",
        "connect params": [
          {
            "param_name": "from_publish_date",
            "description": "The year from the fact could be used as a starting point for finding TED talks published after that historical event"
          },
          {
            "param_name": "from_record_date",
            "description": "The year from the fact could be used as a starting point for finding TED talks recorded after that historical event"
          }
        ]
      },
      {
        "tool name": "Urban Dictionary: Define a Word / Search",
        "connect params": [
          {
            "param_name": "term",
            "description": "Key terms from the historical fact could be searched in Urban Dictionary"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "start",
        "type": "NUMBER",
        "description": "Enter a start index",
        "default": "0"
      }
    ],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/co/collections/most_actives\"\nquerystring = {\"start\": start}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: market/most_actives",
    "tool description": "Returns stocks sorted by intraday trade volume in descending order. This is part of the Mboum Finance Official API, which provides financial data including stocks, options, ETFs, mutual funds, SEC filings, and news, leveraging real-time market data to help users identify actively traded securities and make informed investment decisions.",
    "API name": "market/most_actives",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a list of the most actively traded stocks, sorted in descending order by intraday volume. For each stock, it provides a comprehensive set of financial data, including real-time and historical price information (e.g., market change, 52-week range), volume metrics, valuation data (market cap, P/E ratio), and key company details. This allows users to identify high-volume securities and perform an initial financial assessment.",
      "output_format": "The output is a single JSON object which serves as a wrapper for the results. It includes metadata fields like 'start', 'count', and 'total', which indicate support for pagination. The primary data is located in the 'quotes' key, which contains an array of JSON objects, each representing a single stock with its detailed financial attributes."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/cashflow-statement/{stock}_",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/earnings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols from the most active stocks list"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flightera Flight Data",
    "parent tool description": "Flight status, on-time performance and statistics by Flightera",
    "required_parameters": [
      {
        "name": "ident",
        "type": "STRING",
        "description": "The ident of the airport (e.g. as returned by /airport/search)",
        "default": "KSFO"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/airport/metar\"\nquerystring = {\"ident\": ident}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Flightera Flight Data: airportMetar",
    "tool description": "Retrieves the latest METAR weather data for a specified airport using its identifier, including a parsed version of the report. This endpoint is part of Flightera's flight status and on-time performance services, providing critical aviation weather insights to support flight planning and decision-making. The METAR data is sourced from real-time aviation weather feeds, offering detailed conditions like visibility, wind, and precipitation to enhance operational accuracy and safety.",
    "API name": "airportMetar",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a detailed meteorological aerodrome report (METAR) for a specific airport. The output includes the raw METAR string as well as a parsed JSON object breaking down the weather conditions. This includes information on wind, visibility, temperature, dew point, cloud cover, and atmospheric pressure, which is critical for flight planning and operational safety.",
      "output_format": "The output is a single JSON object. It contains two nested arrays of objects: `weather_elements` and `clouds`. In the provided examples, the `weather_elements` array is empty, indicating it may be null or empty when no specific weather events are reported. The `clouds` array contains objects detailing cloud coverage and altitude."
    },
    "connected tools": [
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "name": "iata",
            "description": "The IATA code of the airport could be extracted from the METAR data source airport identifier"
          },
          {
            "name": "icao",
            "description": "The ICAO code of the airport could be extracted from the METAR data source airport identifier"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportFlights",
        "connect params": [
          {
            "name": "ident",
            "description": "Airport identifier from METAR data can be used to retrieve flights for this airport"
          }
        ]
      },
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "Airport location from METAR data can be used as a trip destination"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapToolkit",
    "parent tool description": "A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation",
    "tool name": "MapToolkit: Routing",
    "tool description": "Provides global routing capabilities for calculating optimal paths between locations. This is part of a comprehensive mapping toolkit that includes map tiles, address search (geocoding), static maps, and elevation data, enabling developers to build complete location-based applications with navigation functionality.",
    "required_parameters": [
      {
        "name": "points",
        "type": "STRING",
        "description": "Value: `{lat},{lng}[|{lat},{lng} ...]`\nDefine multiple routing waypoints, consisting of latitude and longitude. At least 2 points are needed.",
        "default": "48.202596,16.369801|48.208373,16.370401"
      }
    ],
    "optional_parameters": [
      {
        "name": "finish_instruction",
        "type": "STRING",
        "description": "Adds a finish instruction at the end of the route.",
        "default": ""
      },
      {
        "name": "language",
        "type": "STRING",
        "description": "Language for the given instructions. Must be a valid ISO 639-1 language code. Default value is `en`.",
        "default": ""
      },
      {
        "name": "voice_instructions",
        "type": "STRING",
        "description": "Enables voice instructions for text to speech engines.",
        "default": ""
      },
      {
        "name": "filename",
        "type": "STRING",
        "description": "Only available if the set `format` is `gpx` or `kml`. ",
        "default": ""
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Default format is `json`.",
        "default": ""
      },
      {
        "name": "weighting",
        "type": "STRING",
        "description": "Only available if the set `routeType` is `bike`. Default value is `networks`.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://maptoolkit.p.rapidapi.com/route\"\nquerystring = {\"points\": points, \"routeType\": routetype}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"maptoolkit.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Routing",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a JSON object containing detailed routing information for a calculated path. The response includes high-level summary data such as the total distance, travel time, and elevation changes. It also provides a granular, turn-by-turn list of instructions for navigation, and an encoded polyline string representing the path's geometry for rendering on a map.",
      "output_format": "The output is a single JSON object. The core information is within a top-level `paths` key, which is an array containing one or more route objects. Each route object has a complex, nested structure, including an `instructions` array that details each segment of the journey. Some data, like the path geometry in the `points` field, is provided as an encoded string. Fields can be empty, such as an empty string for a road name."
    },
    "connected tools": [
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "routeresultid",
            "description": "Can use the route result ID from the source tool to display the calculated route on a map"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "path",
            "description": "Can use the encoded polyline or coordinates from the route path to display the route on a static map"
          },
          {
            "name": "geojson",
            "description": "Can use the path geometry from the route to render it on a static map"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Route Enhancement",
        "connect params": [
          {
            "name": "geometry",
            "description": "Can use the path geometry from the route to enhance it with additional data like elevation and surface information"
          }
        ]
      },
      {
        "tool name": "TrueWay Directions: FindDrivingRoute",
        "connect params": [
          {
            "name": "stops",
            "description": "Can use the coordinates from the route's path points to create a new route with the same stops"
          }
        ]
      },
      {
        "tool name": "TrueWay Directions: FindDrivingPath",
        "connect params": [
          {
            "name": "origin",
            "description": "Can use the first coordinate from the route path as the starting point"
          },
          {
            "name": "destination",
            "description": "Can use the last coordinate from the route path as the destination point"
          },
          {
            "name": "waypoints",
            "description": "Can use intermediate coordinates from the route path as waypoints"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: altcalcroute",
        "connect params": [
          {
            "name": "start",
            "description": "Can use the first coordinate from the route path as the starting point"
          },
          {
            "name": "destination",
            "description": "Can use the last coordinate from the route path as the destination point"
          },
          {
            "name": "via",
            "description": "Can use intermediate coordinates from the route path as via points"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: calcroute",
        "connect params": [
          {
            "name": "start",
            "description": "Can use the first coordinate from the route path as the starting point"
          },
          {
            "name": "destination",
            "description": "Can use the last coordinate from the route path as the destination point"
          },
          {
            "name": "via",
            "description": "Can use intermediate coordinates from the route path as via points"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Route: multicalcroute",
        "connect params": [
          {
            "name": "start",
            "description": "Can use the first coordinate from the route path as the starting point"
          },
          {
            "name": "destination",
            "description": "Can use the last coordinate from the route path as the destination point"
          },
          {
            "name": "via",
            "description": "Can use intermediate coordinates from the route path as via points"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/index-trend\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/index-trend/{stock}",
    "tool description": "Retrieves index trend earnings history for a specific stock, including historical financial data and key metrics. This leverages Mboum Finance's comprehensive API, which provides access to stocks, options, ETFs, mutual funds, SEC filings, and news, enabling detailed financial analysis and informed decision-making.",
    "API name": "stock/index-trend/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool retrieves index trend and earnings history for a specific stock, benchmarked against a market index (likely the S&P 500, denoted as 'SP5'). The output provides key financial valuation metrics, specifically the Price-to-Earnings (P/E) and Price/Earnings to Growth (PEG) ratios. It also includes an array of forecasted and historical growth estimates across various time periods, such as the current quarter, next quarter, and several yearly outlooks.",
      "output_format": "The output is a single JSON object with two primary keys, `meta` for request metadata and `body` for the data payload. The `body` contains financial metrics, some of which are objects with both a `raw` numerical value and a `fmt` string representation. The `estimates` key holds an array of objects, each detailing growth for a specific period. The `growth` field within these objects can be an empty list (`[]`) when data is unavailable, indicating potential nullability or variable typing."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Search Endpoint",
        "connect params": [
          {
            "name": "keywords",
            "description": "The stock symbol from the source tool can be used as a search keyword"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool can be used to get current quotes"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool can be used to get historical data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool can be used to get related news"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the source tool can be used to analyze news sentiment"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool can be used to get detailed financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the source tool can be used to get related news"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hotels com Provider",
    "parent tool description": "Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "slug",
        "type": "STRING",
        "description": "Hotels Slug",
        "default": "ho219115"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://hotels-com-provider.p.rapidapi.com/v2/meta/convert/slug-id\"\nquerystring = {\"slug\": \"ho219115\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hotels-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Hotels com Provider: Hotel Slug convert",
    "tool description": "Retrieves a hotel's unique identifier from its site-specific slug, such as converting 'ho219115' to '1105156'. This function is part of the Hotels.com platform's broader capabilities to search and display hotel information, leveraging its database of properties to provide precise hotel IDs for integration with booking systems or detailed property lookups.",
    "API name": "Hotel Slug convert",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides either a unique hotel identifier or an error message. On a successful conversion, the output contains the hotel's ID as a string, which can be used for subsequent booking or information retrieval tasks. In case of an error, the output provides a descriptive string detailing the reason for failure, such as the hotel not being found or a general client error.",
      "output_format": "The output is a single, non-nested JSON object. A successful response contains a 'data' key with the string hotel ID as its value. An error response contains a 'detail' key with a string error message. No arrays, pagination, or complex nesting are indicated by the examples."
    },
    "connected tools": [
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property."
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel photos",
        "connect params": [
          {
            "name": "hotel_ids",
            "description": "Comma separated string of PPN hotel ids (Semi Opaque Only)"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Hotel reviews",
        "connect params": [
          {
            "name": "hotel_id",
            "description": "The PPN Hotel ID identifying the desired property."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Shazam",
    "parent tool description": "Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application such as shazam.com",
    "tool name": "Shazam: songs/get-details",
    "tool description": "Gets detailed information about a specific song, providing comprehensive data on the requested track. This endpoint leverages a vast music recognition database similar to Shazam.com, allowing you to access in-depth details about songs including artist information, lyrics, associated videos, and playlist appearances. The service is part of a robust music identification platform that enables song discovery and detailed music information retrieval for applications, websites, or personal use.",
    "required_parameters": [
      {
        "name": "key",
        "type": "STRING",
        "description": "The key field returned from .../songs/detect or .../search endpoint",
        "default": "40333609"
      }
    ],
    "optional_parameters": [
      {
        "name": "locale",
        "type": "STRING",
        "description": "The language code",
        "default": "en-US"
      }
    ],
    "code": "import requests\n\nurl = \"https://shazam.p.rapidapi.com/songs/get-details\"\nquerystring = {\"key\": key, \"locale\": locale}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"shazam.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "songs/get-details",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a detailed data object for a specific song or media campaign. For music tracks, the output includes the song title, artist, various image URLs (cover art, background), and a 'hub' object with deep links to streaming services like Apple Music. The tool may also return data for non-music entities like campaigns, which have a different structure containing metadata and webview links.",
      "output_format": "The output is a single JSON object, not an array. The structure of the object is conditional based on the 'type' field (e.g., 'MUSIC', 'CAMPAIGN'). The 'MUSIC' type contains several nested objects like 'images', 'share', and 'hub'. The 'CAMPAIGN' type has a different structure, including a 'sections' array. Fields specific to one type will likely be absent or null in others."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "param_name": "q",
            "description": "The song title and artist information from the source tool can be used as search query"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "param_name": "query",
            "description": "The song title and artist information from the source tool can be used to search for the song on YouTube Music"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "fast Email verifier",
    "parent tool description": "APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.",
    "tool name": "fast Email verifier: Role Account",
    "tool description": "Checks the rols account associated with your domain, allowing you to verify domain-specific email configurations. This endpoint leverages APISOLUTION's comprehensive email validation and verification API, designed for developers working on start-ups and staff projects who need fast, reliable email infrastructure assessment.",
    "required_parameters": [
      {
        "name": "domain",
        "type": "STRING",
        "description": "",
        "default": "domain.org"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://fast-email-verifier.p.rapidapi.com/IsRoleAccount\"\nquerystring = {\"domain\": domain}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"fast-email-verifier.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Role Account",
    "domain name": "Email",
    "output_info": {
      "output_info_summary": "This tool checks if a given email domain is classified as a \"RoleAccount domain\". Based on the examples, this appears to identify common free email providers (like gmail.com, yahoo.com) and distinguish them from what are presumably corporate or organizational domains. The output is a simple statement confirming the result of the check, or a \"Not Found\" message if the domain cannot be processed or is invalid.",
      "output_format": "The output format is inconsistent. A successful lookup returns a string that represents a single key-value pair, similar to a Python dictionary (`{'RoleAccount': '...'}`). An error or a case where the domain is not found returns a simple plain text string ('Not Found\\n'). The output is not serialized as a standard JSON object and is not nested or paginated."
    },
    "connected tools": [
      {
        "tool name": "fast Email verifier: disposable Domain and Suggest Domain",
        "connect params": [
          {
            "name": "domain",
            "description": "The domain classification can be used to check if it's disposable"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/recommendation-trend\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
    "tool description": "Get stock recommendations and trends based on real-time market data and SEC filings. This endpoint leverages the Mboum Finance Official API's comprehensive financial data sources, including stocks, options, ETFs, mutual funds, news, and screeners, to deliver actionable insights and personalized investment guidance.",
    "API name": "stock/recommendation-trend/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides analyst recommendation trends for a given stock. The output summarizes the number of 'strong buy', 'buy', 'hold', 'sell', and 'strong sell' ratings for the current month and up to three previous months. This information is intended to help users understand the recent sentiment and trends from financial analysts regarding a specific stock.",
      "output_format": "The output is a JSON object with a `body` key containing the main data. Inside `body`, the `trend` key holds an array of objects. Each object in this array corresponds to a specific time period (e.g., '0m' for the current month) and details the count for each recommendation category."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the recommendation trend can be used to get current price information"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the recommendation trend can be used to get historical price data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the recommendation trend can be used to get related news"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the recommendation trend can be used to get financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the recommendation trend can be used to get related news"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the recommendation trend can be used to get time series data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 14
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/aroonosc\"\nquerystring = {\"format\": \"json\", \"interval\": \"1min\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"time_period\": 14}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: AROONOSC",
    "tool description": "The Aroon Oscillator (AROONOSC) endpoint analyzes trend strength and persistence by calculating Aroon Up and Aroon Down metrics, providing insights into whether existing trends will continue. This tool is part of a comprehensive financial data platform that offers real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to integrate robust market analysis capabilities into their applications. By leveraging the Aroon indicators, it helps traders assess potential trend reversals and make informed decisions based on extensive market data.",
    "API name": "AROONOSC",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool provides time-series data for the Aroon Oscillator (AROONOSC) technical indicator. The output consists of metadata about the financial instrument (e.g., symbol, interval, currency, exchange) and the indicator's parameters, along with a list of historical data points. Each data point includes a datetime and the corresponding Aroon Oscillator value, which is used by traders to analyze trend strength and identify potential market reversals.",
      "output_format": "The tool returns a single JSON object with two top-level keys: `meta` and `values`. The `meta` key contains an object with metadata about the request. The `values` key contains a JSON array of objects, where each object represents a data point with a `datetime` (string) and an `aroonosc` value (a string-encoded number). The array of values is sorted in reverse chronological order. The specific fields within the `meta` object may vary depending on the asset type (e.g., stocks vs. forex)."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The AROONOSC output contains symbol information in the meta object that can be used"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from AROONOSC meta data can be used to fetch time series for the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from AROONOSC meta data can be used to fetch time series with matching interval"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from AROONOSC meta data can be used for RSI calculation on the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from AROONOSC meta data can be used for RSI calculation with matching interval"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from AROONOSC meta data can be used for MACD calculation on the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from AROONOSC meta data can be used for MACD calculation with matching interval"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from AROONOSC meta data can be used for Bollinger Bands calculation on the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from AROONOSC meta data can be used for Bollinger Bands calculation with matching interval"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from AROONOSC meta data can be used for SMA calculation on the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from AROONOSC meta data can be used for SMA calculation with matching interval"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from AROONOSC meta data can be used for EMA calculation on the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from AROONOSC meta data can be used for EMA calculation with matching interval"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCH",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from AROONOSC meta data can be used for Stochastic Oscillator calculation on the same instrument"
          },
          {
            "name": "interval",
            "description": "The interval from AROONOSC meta data can be used for Stochastic Oscillator calculation with matching interval"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Radical position",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, which can be combined as needed for more complex queries. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, allowing developers to build applications with comprehensive Japanese character information.",
    "required_parameters": [
      {
        "name": "rpos",
        "type": "STRING",
        "description": "Hiragana or romaji",
        "default": "hen"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"rpos\": rpos}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Radical position",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters. For each kanji, the output provides the character itself, its total stroke count, its primary radical character, the radical's stroke count, and a numerical identifier for the radical. This data is intended for applications that need to display or process detailed information about kanji and their components.",
      "output_format": "The output is a JSON array of objects. Each object in the array represents a single kanji and contains two nested objects: 'kanji' and 'radical'. The 'kanji' object holds the character and its stroke count. The 'radical' object contains the radical's character, stroke count, and an 'order' number. Some radical characters are represented using Unicode escape sequences (e.g., '\\ue759')."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "The source tool provides kanji stroke counts that can be used to search for kanji with specific stroke counts"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "The source tool provides radical stroke counts that can be used to search for kanji with radicals of specific stroke counts"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Flixbus",
    "parent tool description": "A service that provides flixbus travel search, available cities, stations, timetables and routes. Site: www.flixbus.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
    "tool name": "Flixbus: cities",
    "tool description": "Retrieves a comprehensive list of cities served by Flixbus transportation network. This endpoint connects to Flixbus's extensive travel service database (www.flixbus.com), allowing you to access all available departure and destination cities within their intercity bus and train network. The data provided forms the foundation for searching routes, timetables, and available stations across Flixbus's European and international transportation system.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://flixbus.p.rapidapi.com/v1/cities\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "cities",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a comprehensive list of all cities served by the Flixbus transportation network. Each entry in the list is a city object containing details like its name, unique ID, geographic coordinates, country, and a list of associated station and route pair IDs. This information serves as a foundational dataset for discovering available destinations and for use in subsequent route and timetable searches.",
      "output_format": "The output is a JSON array of objects, with each object corresponding to a city. The city object contains nested objects for 'coordinates' and 'country', and arrays of integers for 'stations' and 'pairs'. The examples do not show any pagination or cursoring mechanism, suggesting the entire list of cities is returned in a single response."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude coordinates from Flixbus: cities output"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude coordinates from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "param_name": "market",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Auto Suggest",
        "connect params": [
          {
            "param_name": "string",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "param_name": "name",
            "description": "Can use city names from Flixbus: cities output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/linearregintercept\"\nquerystring = {\"series_type\": \"close\", \"time_period\": 9, \"format\": \"json\", \"symbol\": \"AAPL\", \"outputsize\": 30, \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: LINEARREGINTERCEPT",
    "tool description": "Calculates the intercept for the linear regression trendline for each data point. This endpoint leverages statistical analysis on the parent tool's financial data, which provides real-time and historical data for stocks, forex, crypto, ETFs, and indices, enabling developers to calculate regression intercepts for trendline analysis and enhance their financial data modeling capabilities.",
    "API name": "LINEARREGINTERCEPT",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time-series data for the linear regression intercept, a technical analysis indicator. For a given financial instrument (like a stock, forex pair, or cryptocurrency), it returns a series of intercept values calculated over a specified time period and interval. This information is used for trendline analysis and financial modeling to understand potential price movements.",
      "output_format": "The output is a single JSON object containing two primary keys: 'meta' and 'values'. 'meta' is an object that contains metadata about the query, including the symbol, interval, and indicator parameters. 'values' is an array of objects, where each object represents a data point containing a 'datetime' and the corresponding 'linearregintercept' value. The intercept value is returned as a string."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LINEARREGINTERCEPT meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CORREL",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LINEARREGINTERCEPT meta data"
          },
          {
            "name": "series_type_1",
            "description": "Can correlate linearregintercept values with other price data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LINEARREGINTERCEPT meta data"
          },
          {
            "name": "series_type",
            "description": "Can apply moving average to the linearregintercept values"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LINEARREGINTERCEPT meta data"
          },
          {
            "name": "series_type",
            "description": "Can apply exponential moving average to linearregintercept values"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LINEARREGINTERCEPT meta data"
          },
          {
            "name": "series_type",
            "description": "Can calculate RSI based on linearregintercept values"
          }
        ]
      },
      {
        "tool name": "Twelve Data: LINEARREGSLOPE",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LINEARREGINTERCEPT meta data to analyze the slope alongside the intercept"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LINEARREGINTERCEPT meta data"
          },
          {
            "name": "series_type",
            "description": "Can calculate Bollinger Bands on the linearregintercept values"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from the LINEARREGINTERCEPT meta data for further technical analysis"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Yahoo Finance_v2",
    "parent tool description": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "string",
        "description": "A single stock symbol ",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/ne/news/AAPL\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "tool name": "Yahoo Finance_v2: market/news/{stock}",
    "tool description": "Retrieves recently published stock news from Yahoo Finance. This endpoint leverages the Yahoo Finance API, which provides comprehensive financial data including stocks, options, ETFs, mutual funds, and news, by accessing a curated database of market information to deliver timely updates that help investors stay informed about market trends and company developments.",
    "API name": "market/news/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a list of recent news articles for a specified stock ticker. Each article includes a title, a brief description, a link to the full story, and its publication date. This output is intended to help investors and analysts stay current on company-specific developments and market news that could impact a stock's performance.",
      "output_format": "The output is a JSON object containing two top-level keys: 'meta' and 'body'. The 'meta' key holds an object with metadata about the request, such as the ticker and status. The 'body' key contains a JSON array where each element is an object representing a single news article with a consistent set of fields: 'description', 'guid', 'link', 'pubDate', and 'title'."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get price quotes"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get weekly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get monthly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get intraday time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get technical indicators"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get historical data"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from news articles can be used to get sentiment analysis"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from news articles can be used to get negative news sentiment"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from news articles can be used to get market data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get key statistics"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get insider holder information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get insider transactions"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get index trend data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get stock profile information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get calendar events"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get recommendation trends"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get institution ownership data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get SEC filings"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from news articles can be used to get earnings information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Kanji English meaning",
    "tool description": "Provides individual endpoints for testing Advanced Search URL parameters, which can be combined as needed for customized queries. This API connects to the Kanji alive web application, offering free access to CC-BY licensed Japanese language data including kanji characters, radicals, and their associated media files, allowing developers to build applications with rich Japanese language content.",
    "required_parameters": [
      {
        "name": "kem",
        "type": "STRING",
        "description": "Simplified English kanji meaning",
        "default": "parent"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced/\"\nquerystring = {\"kem\": kem}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Kanji English meaning",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of objects, each detailing a Japanese Kanji character. The information for each entry includes the Kanji character and its stroke count, along with its associated radical character, the radical's stroke count, and its order number. This structured data is intended for use in applications that teach or display information about the components of Japanese Kanji.",
      "output_format": "The output is a JSON array of objects. Each object contains two nested objects: 'kanji' and 'radical'. The 'kanji' object contains 'character' (string) and 'stroke' (integer) keys. The 'radical' object contains 'character' (string), 'stroke' (integer), and 'order' (integer) keys. No null values are observed in the examples."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "param_name": "ks",
            "description": "Can use the stroke count from the Kanji information in the source output"
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "param_name": "rs",
            "description": "Can use the radical stroke count from the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapTiles",
    "parent tool description": "Map Tiles for interactive online maps based on data by OpenStreetMap contributors with labels in English, French or Spanish. ",
    "required_parameters": [
      {
        "name": "z",
        "type": "NUMBER",
        "description": "zoom (from 0 up to zoom 19)",
        "default": "3"
      },
      {
        "name": "x",
        "type": "NUMBER",
        "description": "X-number of tile (see documentation)",
        "default": "4"
      },
      {
        "name": "y",
        "type": "NUMBER",
        "description": "Y-number of tile (see documentation)",
        "default": "2"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://maptiles.p.rapidapi.com/es/map/v1/{z}/{x}/{y}.png\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"maptiles.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "tool name": "MapTiles: getMapTilewithSpanishLabels",
    "tool description": "Generates raster map tiles with Spanish labels using OpenStreetMap data. This endpoint provides interactive map tiles with localized labeling, enabling developers to create Spanish-language mapping solutions. It leverages OpenStreetMap contributors' data to deliver accurate, region-specific details, enhancing user experience for Spanish-speaking audiences.",
    "API name": "getMapTilewithSpanishLabels",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a single raster map tile as a PNG image. This image represents a small, specific geographic area with map features and labels rendered in Spanish. These tiles are intended to be used in combination to construct a complete, interactive map for Spanish-speaking audiences, using data from OpenStreetMap.",
      "output_format": "The output is not a structured text format like JSON, but raw binary data representing a single PNG image file. The data begins with the standard PNG file signature (e.g., `\ufffdPNG\\r\\n...`) and contains image headers (IHDR) and data chunks (IDAT)."
    },
    "connected tools": [
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "marker",
            "description": "The marker parameter can use icon URLs, and the PNG map tile could serve as a custom marker icon"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "icon",
            "description": "The map tile could potentially be used as a custom icon overlay on another map"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "SoundCloud Scraper",
    "parent tool description": "An all-in-one SoundCloud scraper/downloader. Scrapes albums, playlists, profiles. Downloads uncut high-quality audios and lyrics.",
    "tool name": "SoundCloud Scraper: Get Track Metadata (1-3 Quotas)",
    "tool description": "Fetches complete track details from SoundCloud and provides download links for uncut tracks in both high and standard quality formats. This all-in-one SoundCloud scraper utilizes comprehensive data extraction capabilities to access audio content across albums, playlists, and profiles, allowing you to obtain not just track information but also high-quality audio files and associated lyrics. For implementation guidance, refer to the 'How to Use Audio URLs' tutorial.",
    "required_parameters": [
      {
        "name": "track",
        "type": "STRING",
        "description": "Track URL or ID.",
        "default": "https://soundcloud.com/edsheeran/photograph"
      }
    ],
    "optional_parameters": [
      {
        "name": "download",
        "type": "ENUM",
        "description": "Download quality. Defaults to `sq`.\n* **`hq`**: High and standard quality - 3 quotas\n* **`sq`**: Standard quality - 2 quotas\n* **`none`**: No download - 1 quota\n\nThe final price depends on the existence of the file of the corresponding quality. For example, if `hq` is requested but the high-quality file does not exist, then the price will be 2 quotas if the standard one exists or 1 quota if there is no file available.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://soundcloud-scraper.p.rapidapi.com/v1/track/metadata\"\nquerystring = {\"track\": track}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"soundcloud-scraper.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get Track Metadata (1-3 Quotas)",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive JSON object containing metadata for a single SoundCloud track. This includes the track's title, artist, genre, release date, engagement statistics (plays, likes, comments), and publisher details. A key feature is the included array of audio download links, providing URLs for the track in various formats and qualities.",
      "output_format": "The output is a single JSON object. It contains several nested objects, such as 'publisher' and 'user', and a nested array of objects named 'audio', where each object provides a download URL and details for a specific audio format. Several fields can be null, including 'description', 'caption', and 'purchaseUrl'."
    },
    "connected tools": [
      {
        "tool name": "Miza: Song concatenation",
        "connect params": [
          {
            "name": "u1",
            "description": "Can use the audio download URLs from SoundCloud Scraper output"
          }
        ]
      },
      {
        "tool name": "Miza: Song trimming/extending",
        "connect params": [
          {
            "name": "url",
            "description": "Can use the audio download URLs from SoundCloud Scraper output"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use the track title and artist name from SoundCloud Scraper output"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query",
            "description": "Can use the track title and artist name from SoundCloud Scraper output"
          }
        ]
      },
      {
        "tool name": "SoundCloud Scraper: Download Lyrics on Spotify (2 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "Can use the track URL from SoundCloud Scraper output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Indonesia School List",
    "parent tool description": "This API provides School List in Indonesia by Province (Propinsi), City (Kabupaten), and District (Kecamatan).",
    "tool name": "Indonesia School List: List of School in Sub-Disctrict (Kecamatan)",
    "tool description": "Lists schools within a specific Sub-District (Kecamatan) in Indonesia, providing each school's NPSN and encrypted school ID (sekolah_id_enkrip) that can be used to look up detailed school information through other endpoints. This API offers comprehensive access to Indonesia's educational institutions organized hierarchically by Province (Propinsi), City (Kabupaten), and District (Kecamatan), allowing for systematic navigation through the country's school system.",
    "required_parameters": [
      {
        "name": "kode_wilayah_kecamatan_id",
        "type": "STRING",
        "description": "",
        "default": "056010"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://indonesia-school-list.p.rapidapi.com/sekolah_by_kode_kecamatan\"\nquerystring = {\"kode_wilayah_kecamatan_id\": kode_wilayah_kecamatan_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"indonesia-school-list.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "List of School in Sub-Disctrict (Kecamatan)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of schools within a specified Indonesian sub-district (Kecamatan). Each school entry provides identifying information such as its name, NPSN, education level, and location, as well as an encrypted school ID ('sekolah_id_enkrip'). This encrypted ID is intended to be used in other tools to retrieve more detailed school information.",
      "output_format": "The successful output is a JSON array of objects, where each object represents a school. Some string fields, like 'sekolah_id_enkrip', may contain significant trailing whitespace. In case of an API error, the tool returns a JSON object containing 'messages' and 'info' keys explaining the failure."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Spotify _v2",
    "parent tool description": "Get Spotify Tracks & Playlist Details",
    "tool name": "Spotify _v2: Related Artists",
    "tool description": "Retrieves a list of artists related to a specified artist, showing similar musical styles or influences. This endpoint leverages Spotify's extensive music database and recommendation algorithms to help users discover new artists based on their existing preferences. The service provides access to Spotify's rich ecosystem of music data, allowing users to explore musical connections and expand their listening horizons beyond tracks and playlists they already know.",
    "required_parameters": [
      {
        "name": "artist_id",
        "type": "STRING",
        "description": "",
        "default": "0EmeFodog0BfCgMzAIvKQp"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://spotify117.p.rapidapi.com/get_related_artists/\"\nquerystring = {\"artist_id\": \"0EmeFodog0BfCgMzAIvKQp\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify117.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Related Artists",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool provides a list of artists who are musically similar to a specified artist. For each related artist, the output includes their name, genres, popularity score, follower count, and links to their Spotify page and associated images. In the event of an API failure, a structured error message is returned instead.",
      "output_format": "The output is a JSON object. A successful response contains a top-level key, 'artists', which holds a JSON array of artist objects. Each artist object contains nested structures, such as an array of 'genres' (strings), an array of 'images' (objects with URL, height, and width), and an 'external_urls' object. Some fields within the artist object can be null. An error response has a different structure, containing keys like 'messages' and 'info'."
    },
    "connected tools": [
      {
        "tool name": "Spotify _v2: Artist Details (Single)",
        "connect params": [
          {
            "name": "artist_id",
            "description": "Can use artist IDs from related artists output"
          }
        ]
      },
      {
        "tool name": "Spotify: Get artists",
        "connect params": [
          {
            "name": "ids",
            "description": "Can use artist IDs from related artists output"
          }
        ]
      },
      {
        "tool name": "Spotify Web: Get artists",
        "connect params": [
          {
            "name": "ids",
            "description": "Can use artist IDs from related artists output"
          }
        ]
      },
      {
        "tool name": "Spotify: Get radio playlist",
        "connect params": [
          {
            "name": "uri",
            "description": "Can use artist URIs from related artists output"
          }
        ]
      },
      {
        "tool name": "Spotify Web: Get radio playlist",
        "connect params": [
          {
            "name": "uri",
            "description": "Can use artist URIs from related artists output"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Artist",
        "connect params": [
          {
            "name": "channel_id",
            "description": "Can search for related artists on YouTube Music"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Learn to read and write Japanese kanji",
    "parent tool description": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
    "tool name": "Learn to read and write Japanese kanji: Study list (Macquarie)",
    "tool description": "Provides access to individual Advanced Search URL parameters for testing purposes, allowing parameters to be combined as needed for customized queries. This endpoint is part of the free Kanji alive API, which offers comprehensive CC-BY licensed language data on Japanese kanji, radicals, and their associated media files through a web application interface.",
    "required_parameters": [
      {
        "name": "list",
        "type": "STRING",
        "description": "Kanji divided into chapters (12-22)",
        "default": "mac:c12"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/advanced\"\nquerystring = {\"list\": list}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Study list (Macquarie)",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a list of Japanese kanji characters from a specific study list (Macquarie). For each kanji in the list, the output provides the character itself, its total stroke count, its associated radical character, the radical's stroke count, and the radical's order number. This information is intended for users studying the Japanese language, particularly for learning to recognize and write kanji.",
      "output_format": "The output is a JSON array of objects. Each object represents a single kanji and contains two nested JSON objects: 'kanji' and 'radical'. The 'kanji' object contains the character and its stroke count. The 'radical' object contains the radical's character, stroke count, and order. All fields in the examples are non-null."
    },
    "connected tools": [
      {
        "tool name": "Learn to read and write Japanese kanji: Kanji stroke number",
        "connect params": [
          {
            "name": "ks",
            "description": "Positive integer",
            "connection_info": "The kanji stroke count from the source tool's output can be used as input for this parameter to find other kanji with the same stroke count."
          }
        ]
      },
      {
        "tool name": "Learn to read and write Japanese kanji: Radical stroke number",
        "connect params": [
          {
            "name": "rs",
            "description": "Positive integer",
            "connection_info": "The radical stroke count from the source tool's output can be used as input for this parameter to find other kanji with radicals of the same stroke count."
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Webull",
    "parent tool description": "Query public data for investment products including stocks, fractional shares, options, ETFs, and ADRs as on webull.com",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://webull.p.rapidapi.com/news/list-flash\"\nquerystring = {\"currentNewsId\": currentnewsid, \"pageSize\": pagesize}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"webull.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Webull: news/list-flash",
    "tool description": "Lists flash 27/4 news updates about investment products. This uses Webull's public data aggregation capabilities, drawing from real-time market reports and financial databases to deliver timely news insights, helping users stay informed about stock, ETF, options, and ADR market movements.",
    "API name": "news/list-flash",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides a list of recent financial news updates. Each news item includes a unique ID, title, summary, the name of the news source, and a precise publication timestamp. This data is intended to keep users informed about real-time market news and events that could impact stocks, ETFs, and other investment products.",
      "output_format": "The output is a JSON array of objects. Each object represents a single news flash and contains a consistent set of keys, including 'id' (integer), 'title' (string), 'sourceName' (string), 'newsTime' (ISO 8601 timestamp string), and 'summary' (string). The 'summary' often duplicates the 'title'. The purpose of the integer fields 'siteType' and 'timeFlag' is unclear from the examples."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Search Endpoint",
        "connect params": [
          {
            "name": "keywords",
            "description": "Can use company names or tickers mentioned in news titles/summaries"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols mentioned in news titles/summaries"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols mentioned in news titles/summaries"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "Can use stock symbols mentioned in news titles/summaries"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use stock symbols mentioned in news titles/summaries"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Billboard API_v2",
    "parent tool description": "Billboard charts API: Weekly Billboard Hot 100, Weekly Billboard 200, Weekly Artist 100, Weekly Billboard Weekly Global 200, Weekly Catalog Albums, Weekly Independent Albums, Weekly Billboard U.S. Afrobeats Songs. Year End Hot 100 Songs, Year End Billboard 200 Albums, Year End Billboard  Global 200, Year End Top Artists, Year End Top Artists \u2013 Duo/Group, Year End Top Labels, Year End Top New Artists, Year End Top Artists \u2013 Male, Year End Top Artists \u2013 Female. \nAll Greatest of All Time Charts....",
    "tool name": "Billboard API_v2: Independent Albums",
    "tool description": "Retrieves the weekly Independent Albums chart from Billboard, defaulting to last week's data if no specific week is provided. If a date that isn't a Saturday is supplied, the API automatically adjusts to the Saturday of that week. This endpoint is part of the comprehensive Billboard charts API, which offers access to numerous weekly rankings including Hot 100, Billboard 200, Artist 100, Global 200, and specialized charts like Catalog Albums and U.S. Afrobeats Songs, as well as year-end rankings and Greatest of All Time charts across various categories.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "week",
        "type": "DATE (YYYY-MM-DD)",
        "description": "",
        "default": "2022-10-08"
      }
    ],
    "code": "import requests\n\nurl = \"https://billboard-api5.p.rapidapi.com/api/charts/independent-albums\"\nquerystring = {\"week\": \"2022-10-08\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"billboard-api5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Independent Albums",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output provides the weekly Billboard Independent Albums chart. The data is structured as a ranked list of albums, where each entry includes the album's title, artist, current rank, and historical performance data such as its rank from the previous week, its peak position, and the total number of weeks it has been on the chart. Additionally, the output contains metadata about the chart itself, including the week's date and links to the previous and next week's charts.",
      "output_format": "The output is a single JSON object. The core data is nested under a 'chart' key, which contains an 'entries' key holding an array of objects. Each object in the array represents an album. The 'positionLastWeek' field within an album's position details can be null, indicating it's a new entry on the chart."
    },
    "connected tools": [
      {
        "tool name": "Billboard API_v2: Independent Albums",
        "connect params": [
          {
            "name": "week",
            "description": "Can use the date from the chart metadata to navigate to previous/next week's chart"
          }
        ]
      },
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use album title and artist from Independent Albums chart to search on Spotify"
          },
          {
            "name": "type",
            "description": "Can be set to 'albums' to search for albums from the chart"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "DEI",
    "parent tool description": "The Diversity, Equity, and Inclusion (DEI) API offers the learning resources, conferences, stories and other information.",
    "tool name": "DEI: GetLearningResources",
    "tool description": "Retrieves diversity, equity, and inclusion (DEI) learning resources for professional development and education. This endpoint connects to a comprehensive DEI API that provides access to curated educational materials, training content, conferences, personal stories, and other informational resources designed to enhance understanding and implementation of inclusive practices in organizations and communities.",
    "required_parameters": [
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://dei2.p.rapidapi.com/learning/page/{page}/\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"dei2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "GetLearningResources",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool returns a paginated list of Diversity, Equity, and Inclusion (DEI) learning resources. Each resource includes a title, excerpt, type (e.g., article, video), and links to the content. This information is designed to help users discover and access educational materials for professional development and understanding of DEI topics.",
      "output_format": "The output is a JSON object with a 'value' key, which contains an array of resource objects. The response is paginated, with a top-level 'page' key indicating the current page number. Individual resource objects contain nested objects for 'provider' and an array for 'images'. Some fields, such as 'originalUrl' or 'price', may be nullable or absent depending on the specific resource."
    },
    "connected tools": [
      {
        "tool name": "TED Talks API: getTalks",
        "connect params": [
          {
            "param_name": "topic",
            "description": "DEI topics from resources could be used to find related TED talks"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minmaxindex\"\nquerystring = {\"symbol\": \"AAPL\", \"time_period\": 9, \"interval\": \"1min\", \"format\": \"json\", \"series_type\": \"close\", \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MINMAXINDEX",
    "tool description": "Generates indexes of the lowest and highest values over a specified period (MINMAXINDEX). This endpoint leverages the parent tool's financial data API, which provides real-time and historical data for stocks, forex, crypto, ETFs, indices, and more, to deliver actionable insights into market trends. By analyzing the provided financial datasets, it helps developers and traders identify critical price movements and make informed decisions efficiently.",
    "API name": "MINMAXINDEX",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The output provides a time series of indices indicating the positions of the lowest and highest values for a financial instrument over a specified lookback period. For each datetime entry, the tool returns a `minidx` (index of the minimum value) and a `maxidx` (index of the maximum value) within the preceding window. This is primarily used for technical analysis to understand when recent price extremes occurred within a rolling period.",
      "output_format": "The tool returns a single JSON object containing a `meta` object and a `values` array. The `meta` object holds metadata about the request, such as the symbol, interval, and indicator parameters. The `values` array consists of objects, each with a `datetime` and the corresponding `minidx` and `maxidx` values, which are formatted as strings."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from MINMAXINDEX meta data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ICHIMOKU",
        "connect params": [
          {
            "name": "symbol",
            "description": "Can use the symbol from MINMAXINDEX meta data"
          },
          {
            "name": "interval",
            "description": "Can use the interval from MINMAXINDEX meta data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MusiclinkssApi",
    "parent tool description": "Music Links is an API that aims to find a given track, album or artist in many music platforms.",
    "tool name": "MusiclinkssApi: Get artist's albums",
    "tool description": "Returns basic details about an artist's albums when provided with a Spotify URL. This endpoint leverages the Music Links API, which specializes in finding and connecting music content across multiple streaming platforms, allowing you to access comprehensive album information from a specific artist on Spotify while potentially enabling cross-platform music discovery.",
    "required_parameters": [
      {
        "name": "spotify_url",
        "type": "STRING",
        "description": "",
        "default": "https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://musiclinkssapi.p.rapidapi.com/artist_albums\"\nquerystring = {\"spotify_url\": spotify_url}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"musiclinkssapi.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get artist's albums",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a list of albums associated with a specific artist. For each album, it provides the official name, a unique Spotify ID, a direct URL to the album on Spotify, a URL for the cover art image, and the release date. The list appears to be sorted by release date in descending order, showing the most recent albums first.",
      "output_format": "The output is a JSON array of objects. Each object in the array represents a single album and contains a consistent set of key-value pairs: 'name', 'id', 'url', 'image', and 'release_date'. There is no indication of pagination or cursoring in the examples."
    },
    "connected tools": [
      {
        "tool name": "Spotify Web: Get albums",
        "connect params": [
          {
            "name": "ids",
            "description": "Can use the album IDs from the source tool's output"
          }
        ]
      },
      {
        "tool name": "MusiclinkssApi: Search by url",
        "connect params": [
          {
            "name": "spotify_url",
            "description": "Can use the album URL from the source tool's output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/ht_dcperiod\"\nquerystring = {\"format\": \"json\", \"series_type\": \"close\", \"outputsize\": 30, \"symbol\": \"AAPL\", \"interval\": \"1min\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: HT_DCPERIOD",
    "tool description": "Calculates the dominant cycle period in financial data using the Hilbert Transform, enabling traders to identify cyclical patterns in assets like stocks, forex, and crypto. This endpoint leverages advanced mathematical algorithms from John F. Ehlers' 'Rocket Science for Traders' to analyze real-time and historical market data, providing insights into price behavior cycles. By processing numerical time-series data, it helps developers and traders make informed decisions through precise cycle detection, integrating seamlessly with the broader financial data platform's extensive market coverage.",
    "API name": "HT_DCPERIOD",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time-series data for the Hilbert Transform Dominant Cycle Period (HT_DCPERIOD) of a specified financial asset. The output includes metadata about the asset, such as its symbol, interval, and exchange. The core information is a list of data points, each containing a timestamp and the calculated dominant cycle period, which helps users identify cyclical patterns in market data.",
      "output_format": "The output is a single JSON object. This object contains a 'meta' object with descriptive data and a 'values' key, which holds a JSON array of time-series data points. Each element in the array is an object with a 'datetime' key and a 'ht_dcperiod' key. Notably, the numerical value for 'ht_dcperiod' is returned as a string, not a number."
    },
    "connected tools": [
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_DCPERIOD output can be used to query the same asset"
          },
          {
            "name": "interval",
            "description": "The interval from the HT_DCPERIOD output can be used to maintain consistency in time series analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_TRENDLINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_DCPERIOD output can be used to analyze the same asset"
          },
          {
            "name": "interval",
            "description": "The interval from the HT_DCPERIOD output ensures consistent time frames for related Hilbert Transform analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_SINE",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_DCPERIOD output can be used to analyze the same asset"
          },
          {
            "name": "interval",
            "description": "The interval from the HT_DCPERIOD output ensures consistent time frames for related Hilbert Transform analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_TRENDMODE",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_DCPERIOD output can be used to analyze the same asset"
          },
          {
            "name": "interval",
            "description": "The interval from the HT_DCPERIOD output ensures consistent time frames for related Hilbert Transform analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_PHASOR",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_DCPERIOD output can be used to analyze the same asset"
          },
          {
            "name": "interval",
            "description": "The interval from the HT_DCPERIOD output ensures consistent time frames for related Hilbert Transform analysis"
          }
        ]
      },
      {
        "tool name": "Twelve Data: HT_DCPHASE",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the HT_DCPERIOD output can be used to analyze the same asset"
          },
          {
            "name": "interval",
            "description": "The interval from the HT_DCPERIOD output ensures consistent time frames for related Hilbert Transform analysis"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Airbnb listings",
    "parent tool description": "Join the over 300 users/customers and access all Airbnb data updated daily.\nGet Airbnb listings details, future prices and availability, reviews, and more using listing IDs, geo coordinates or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nWe guarantee a 24-hour response time for all inquiries. If a feature you need is not there please contact us and we will evaluate if it is possible to fullfill your needs.\n\nWhile our data are not...",
    "required_parameters": [
      {
        "name": "year",
        "type": "NUMBER",
        "description": "the year",
        "default": "2024"
      },
      {
        "name": "lat",
        "type": "NUMBER",
        "description": "latitude",
        "default": "28.0852473"
      },
      {
        "name": "lng",
        "type": "NUMBER",
        "description": "longitude",
        "default": "-16.7349705"
      },
      {
        "name": "range",
        "type": "NUMBER",
        "description": "range in meters from latitude and longitude point",
        "default": "500"
      },
      {
        "name": "month",
        "type": "STRING",
        "description": "the month",
        "default": "1"
      }
    ],
    "optional_parameters": [
      {
        "name": "bedrooms",
        "type": "NUMBER",
        "description": "number of bedrooms",
        "default": "1"
      }
    ],
    "code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/avgPricesByLatLng\"\nquerystring = {\"year\": year, \"lat\": lat, \"lng\": lng, \"range\": range, \"month\": month, \"bedrooms\": bedrooms, \"maxGuestCapacity\": maxguestcapacity}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Airbnb listings: Prices and Availability by lat lng",
    "tool description": "Retrieves average prices, availability percentages, and processed property counts within a 20,000-meter radius of a geographical point, filterable by bedrooms and guest capacity. This analytics endpoint leverages the parent tool's access to daily-updated Airbnb data, providing insights into property availability and pricing trends to help users make informed decisions about accommodations.",
    "API name": "Prices and Availability by lat lng",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool provides a statistical summary of Airbnb listings within a specified geographical radius. A successful response returns aggregated data, including the total number of properties, median prices for all and for available properties, and the overall availability percentage. This information is intended to help users understand local accommodation market trends. The tool also returns a simple error message object in cases of failure, such as an authentication or subscription issue.",
      "output_format": "The output is a single, flat JSON object. The structure differs for successful and failed requests. A successful response contains a set of keys like `totalProperties`, `mediumPrice`, and `availability`. An error response typically contains a single `message` key with a string value. There is no indication of nesting, arrays, or pagination."
    },
    "connected tools": [
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "Can use the same latitude from the source tool's query"
          },
          {
            "name": "lng",
            "description": "Can use the same longitude from the source tool's query"
          },
          {
            "name": "range",
            "description": "Can use the same or adjusted range based on property density from source tool"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations by geolocation",
        "connect params": [
          {
            "name": "latitude",
            "description": "Can use the same latitude from the source tool's query"
          },
          {
            "name": "longitude",
            "description": "Can use the same longitude from the source tool's query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Stock Sentiment API",
    "parent tool description": "Real-time social sentiment API to track news activity related to a certain stock",
    "required_parameters": [
      {
        "name": "ticker",
        "type": "STRING",
        "description": "",
        "default": "TSLA"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://stock-sentiment-api.p.rapidapi.com/market_data/\"\nquerystring = {\"ticker\": ticker}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"stock-sentiment-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Stock Sentiment API: Market Data",
    "tool description": "Returns a list of daily stock metrics such as opening, closing, highest, and lowest prices. This endpoint is part of the Real-time social sentiment API, which tracks news activity related to a certain stock. It leverages financial data feeds to provide precise metrics, enabling users to analyze market trends and correlate price fluctuations with sentiment-driven news events.",
    "API name": "Market Data",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a list of historical daily stock metrics for a given stock. Each entry in the list corresponds to a specific day and includes the opening, high, low, and closing prices, as well as the adjusted close price and trading volume. This information is primarily used for analyzing historical market performance and identifying trends. In case of an error, the tool returns a JSON object with a descriptive message.",
      "output_format": "The successful output is a JSON object with a single key, \"daily_metrics\", which contains a JSON array of objects. Each object in the array represents the stock's metrics for a single day. The error response is a simple JSON object containing a \"message\" key."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from the daily metrics can be used here"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "resume_key",
        "type": "STRING",
        "description": "Resume results from given ID.",
        "default": ""
      },
      {
        "name": "limit",
        "type": "NUMBER",
        "description": "Limits the number of results from the response.",
        "default": 100
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/downloadCountries\"\nquerystring = {\"resume_key\": \"\", \"limit\": 100}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Download countries",
    "tool description": "Downloads a list of countries. This endpoint is part of Priceline.com's platform, which allows users to search for hotels, cars, and flights. It provides country data to support travel planning, integrating with Priceline's travel infrastructure to help users explore destinations and enhance trip coordination.",
    "API name": "Download countries",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool's output provides a list of countries, where each entry includes the full country name, a Priceline-specific two-letter country code (country_code_ppn), and a creation timestamp. This data is used to support travel planning on the Priceline platform, likely for populating destination lists for hotel, car, and flight searches.",
      "output_format": "The output is a deeply nested JSON object. The list of countries is not a standard JSON array, but rather an object where keys are indexed strings (e.g., \"country_0\", \"country_1\"). The actual data is located at the path `getSharedBOF2.Downloads.Hotel.Countries.results.countries`. The presence of a `resume_key` indicates that the API likely supports pagination or cursoring to retrieve a complete list."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The country name from the source tool's output can be used as part of the destination parameter"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count Listings by administrative divisions",
        "connect params": [
          {
            "name": "state",
            "description": "The country_code_ppn from the source tool can be used to specify the country for counting listings"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airlineSearch",
        "connect params": [
          {
            "name": "country",
            "description": "The country_code_ppn (if ISO 3166-1 alpha-2 compatible) can be used to search for airlines by country"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: aircraftSearch",
        "connect params": [
          {
            "name": "country",
            "description": "The country_code_ppn (if it's a two-letter country code) can be used to search for aircraft registrations by country"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Spotify Web",
    "parent tool description": "Spotify Data API for Millions of songs &amp; podcasts, artists, albums, playlists and more.",
    "tool name": "Spotify Web: Get radio playlist",
    "tool description": "Gets personalized radio recommendations based on a specific artist or song, delivering a curated stream of similar music. This endpoint leverages Spotify's vast database of millions of songs, artists, albums, and playlists to generate contextually relevant music suggestions that match the sonic qualities, genre characteristics, and listener preferences associated with your selected seed artist or track, helping users discover new music that aligns with their current listening preferences.",
    "required_parameters": [
      {
        "name": "uri",
        "type": "STRING",
        "description": "Artist or song URI",
        "default": "spotify:artist:2w9zwq3AktTeYYMuhMjju8"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://spotify-web2.p.rapidapi.com/seed_to_playlist/\"\nquerystring = {\"uri\": uri}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"spotify-web2.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get radio playlist",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool's output is a JSON object that provides the unique URI for a personalized Spotify radio playlist. This playlist is generated based on a seed artist or song. The primary piece of information is this URI, which can be used to access the curated music. The output can also indicate an error with a status and a descriptive message.",
      "output_format": "The output is a single JSON object. A successful response contains a 'total' count and a 'mediaItems' array. This array holds objects, each with a 'uri' string for the playlist. An error response contains a boolean 'status' and a string 'message'. The structure varies between success and failure cases."
    },
    "connected tools": [
      {
        "tool name": "SoundCloud Scraper: Download Lyrics on Spotify (2 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "The playlist URI can be used to access tracks for lyrics retrieval"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "required_parameters": [
      {
        "name": "string",
        "type": "STRING",
        "description": "Search string that will enable a list of selection to be listed to the traveller.",
        "default": "New York"
      }
    ],
    "optional_parameters": [
      {
        "name": "sort",
        "type": "STRING",
        "description": "Enum: rank, name. Method of sorting the results. Valid options: rank, name",
        "default": ""
      },
      {
        "name": "get_airports",
        "type": "BOOLEAN",
        "description": "Include airports in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "order",
        "type": "STRING",
        "description": "Method of ordering the results of the search. Valid options: asc or desc.",
        "default": ""
      },
      {
        "name": "combine_regions",
        "type": "BOOLEAN",
        "description": "Enables the spell check option for the search string using either true or false.",
        "default": true
      },
      {
        "name": "get_pois",
        "type": "BOOLEAN",
        "description": "Include Points of Interest in search results. Valid Options: True or False",
        "default": true
      },
      {
        "name": "get_regions",
        "type": "BOOLEAN",
        "description": "Include Regions in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "get_cities",
        "type": "BOOLEAN",
        "description": "Include cities in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "show_all_cities",
        "type": "BOOLEAN",
        "description": "Will filter out cities with no hotels. Valid Options: False = filter out cities without hotels, True = show cities with and without hotels.",
        "default": true
      },
      {
        "name": "max_results",
        "type": "NUMBER",
        "description": "Number passed is the maximum number of results returned.",
        "default": ""
      },
      {
        "name": "get_hotels",
        "type": "BOOLEAN",
        "description": "Include hotels in search results. Valid Options: True or False.",
        "default": true
      },
      {
        "name": "spellcheck",
        "type": "BOOLEAN",
        "description": "Enables the spell check option for the search string using either true or false.",
        "default": false
      }
    ],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v2/hotels/autoSuggest\"\nquerystring = {\"sort\": \"\", \"get_airports\": true, \"order\": \"\", \"string\": \"New York\", \"combine_regions\": true, \"get_pois\": true, \"get_regions\": true, \"get_cities\": true, \"show_all_cities\": true, \"max_results\": \"\", \"get_hotels\": true, \"spellcheck\": false}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Priceline com Provider: Auto Suggest",
    "tool description": "Returns a list of cities and hotels based on a search query. This is part of Priceline.com's travel service, which allows users to search for hotels, cars, and flights. It leverages Priceline's extensive database of travel options to provide relevant results, helping users find suitable accommodations and destinations efficiently.",
    "API name": "Auto Suggest",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of suggested cities based on a search query. Each city result includes its name, country, geographic coordinates, the number of available hotels, and a list of nearby airports. This information is designed to help users quickly identify and select a destination for their travel search.",
      "output_format": "The output is a deeply nested JSON object. The primary results are located under the path `getHotelAutoSuggestV2.results.result.cities`. The collection of cities is presented as a JSON object with indexed keys (e.g., \"city_0\", \"city_1\") rather than a JSON array. A notable feature is the `nearby_airports_json` field, which contains a stringified JSON array of airport objects, requiring a second parsing step."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "name": "destination",
            "description": "The city name from the auto-suggest results can be used as a destination for trip planning"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The city name from the auto-suggest results can be used as a market for Airbnb listings"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinates from the auto-suggest results can be used"
          },
          {
            "name": "lng",
            "description": "The longitude coordinates from the auto-suggest results can be used"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Count listings by market",
        "connect params": [
          {
            "name": "market",
            "description": "The city name from the auto-suggest results can be used as a market"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "name": "lat",
            "description": "The latitude coordinates from the auto-suggest results can be used"
          },
          {
            "name": "lng",
            "description": "The longitude coordinates from the auto-suggest results can be used"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search hotels locations",
        "connect params": [
          {
            "name": "name",
            "description": "The city name from the auto-suggest results can be used as a search term"
          }
        ]
      },
      {
        "tool name": "Priceline com Provider: Search cars locations",
        "connect params": [
          {
            "name": "name",
            "description": "The city name from the auto-suggest results can be used as a search term"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "MapToolkit",
    "parent tool description": "A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation",
    "required_parameters": [
      {
        "name": "points",
        "type": "STRING",
        "description": "JSON Array of [latitdue, longitude] Objects.",
        "default": "[[50,10],[46,16]]"
      }
    ],
    "optional_parameters": [
      {
        "name": "simplify",
        "type": "STRING",
        "description": "Simplifies the points before searching for elevation.",
        "default": ""
      }
    ],
    "code": "import requests\n\nurl = \"https://maptoolkit.p.rapidapi.com/elevation\"\nquerystring = {\"points\": points}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"maptoolkit.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "MapToolkit: Elevation",
    "tool description": "Provides elevation data for a given location, leveraging a global database of terrain features. This endpoint is part of a comprehensive mapping toolkit that includes map tiles, geocoding, routing, and static maps, using GIS technology to deliver precise altitude measurements for applications like terrain analysis, construction planning, and outdoor navigation.",
    "API name": "Elevation",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a list of elevation values for one or more geographical locations. Each number in the output array represents the altitude at a specific point, presumably in a standard unit like meters or feet. This data is intended for applications like terrain analysis, outdoor navigation, and construction planning.",
      "output_format": "The output is a JSON array of numbers. The examples show integers, but floating-point values for higher precision are possible. The structure is a simple, flat array with no nesting or pagination. The number of elements in the array likely corresponds to the number of locations provided in the input."
    },
    "connected tools": [
      {
        "tool name": "Heightmap from Latitude and Longitude: get heightmap from two geopoints",
        "connect params": [
          {
            "name": "lat0",
            "description": "Elevation data can be used to validate or enhance the heightmap generation"
          },
          {
            "name": "lat1",
            "description": "Elevation data can be used to validate or enhance the heightmap generation"
          },
          {
            "name": "lng0",
            "description": "Elevation data can be used to validate or enhance the heightmap generation"
          },
          {
            "name": "lng1",
            "description": "Elevation data can be used to validate or enhance the heightmap generation"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "center",
            "description": "Elevation data can be used to determine appropriate map centers based on terrain features"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Global Terrain Raster",
        "connect params": [
          {
            "name": "x",
            "description": "Elevation data can be used to validate or enhance terrain visualization"
          },
          {
            "name": "y",
            "description": "Elevation data can be used to validate or enhance terrain visualization"
          },
          {
            "name": "z",
            "description": "Elevation data can be used to determine appropriate zoom levels based on terrain features"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Global Terrain Winter",
        "connect params": [
          {
            "name": "x",
            "description": "Elevation data can be used to validate or enhance winter terrain visualization"
          },
          {
            "name": "y",
            "description": "Elevation data can be used to validate or enhance winter terrain visualization"
          },
          {
            "name": "z",
            "description": "Elevation data can be used to determine appropriate zoom levels based on terrain features"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Hillshading",
        "connect params": [
          {
            "name": "x",
            "description": "Elevation data can be used to validate or enhance hillshading visualization"
          },
          {
            "name": "y",
            "description": "Elevation data can be used to validate or enhance hillshading visualization"
          },
          {
            "name": "z",
            "description": "Elevation data can be used to determine appropriate zoom levels for hillshading"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Route Enhancement",
        "connect params": [
          {
            "name": "elevation",
            "description": "Elevation data can be used to enhance route planning with terrain information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "TED Talks API",
    "parent tool description": "Get TED talks based on multiple different parameters and filtering options, from the speaker, topic, talk duration, and more.",
    "tool name": "TED Talks API: getTalks",
    "tool description": "Gets detailed information about specific TED talks based on provided parameters such as speaker name, topic, or duration. This endpoint leverages a comprehensive database of TED talks, allowing you to filter and retrieve targeted content from the vast collection of presentations. The service enables precise searching across multiple dimensions including speakers, subject matter, talk length, and additional filtering options, making it easy to find exactly the inspirational or educational content you're looking for.",
    "required_parameters": [],
    "optional_parameters": [
      {
        "name": "audio_lang",
        "type": "STRING",
        "description": "Return talks which their audio language is the provided language, the provided value should be the language slug according to the /audio_languages endpoint",
        "default": "en"
      },
      {
        "name": "speaker",
        "type": "STRING",
        "description": "Return talks which at least on of their speakers is the provided speaker, the provided value should be the speaker slug according to the /speakers endpoint",
        "default": "yuval_noah_harari"
      },
      {
        "name": "publish_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were published on TED.com only on the exact provided date",
        "default": ""
      },
      {
        "name": "topic",
        "type": "STRING",
        "description": "Return talks which at least on of their topics is the provided topics, the provided value should be the speaker slug according to the /topics endpoint",
        "default": "politics"
      },
      {
        "name": "subtitle_lang",
        "type": "STRING",
        "description": "Return talks which have subtitles in the provided language, the provided value should be the language slug according to the /subtitle_languages endpoint",
        "default": "he"
      },
      {
        "name": "max_duration",
        "type": "NUMBER",
        "description": "Return talks which their duration in seconds is at most the provided value",
        "default": ""
      },
      {
        "name": "to_publish_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were published on TED.com only before the provided date",
        "default": ""
      },
      {
        "name": "from_publish_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were published on TED.com only after the provided date",
        "default": ""
      },
      {
        "name": "min_duration",
        "type": "NUMBER",
        "description": "Return talks which their duration in seconds is at least the provided value",
        "default": "300"
      },
      {
        "name": "record_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were recorded only in the exact provided date",
        "default": ""
      },
      {
        "name": "to_record_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were recorded only before the provided date",
        "default": ""
      },
      {
        "name": "from_record_date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Return talks which were recorded only after the provided date",
        "default": "2017-01-01"
      }
    ],
    "code": "import requests\n\nurl = \"https://ted-talks-api.p.rapidapi.com/talks\"\nquerystring = {\"audio_lang\": audio_lang, \"speaker\": speaker, \"topic\": topic, \"subtitle_lang\": subtitle_lang, \"min_duration\": min_duration, \"from_record_date\": from_record_date}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"ted-talks-api.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "getTalks",
    "domain name": "Education",
    "output_info": {
      "output_info_summary": "The tool output is a structured object containing the results of a search for TED talks. It includes a list of the talks that match the query, a count of the number of results, and a list of any errors that occurred. The output also echoes the parameters used for the search, providing a complete record of the request and its outcome.",
      "output_format": "The output is a string containing a JSON object. The primary data is located in a nested array at `result.results`. The schema for the individual talk objects within this array is not defined in the examples. The top-level object also includes a `num_results` integer and an `errors` array. In some cases, the output can be an empty string."
    },
    "connected tools": []
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "percent_rank_period",
        "type": "NUMBER",
        "description": "",
        "default": 100
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "rsi_period",
        "type": "NUMBER",
        "description": "",
        "default": 3
      },
      {
        "name": "up_down_length",
        "type": "NUMBER",
        "description": "",
        "default": 2
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/crsi\"\nquerystring = {\"percent_rank_period\": 100, \"outputsize\": 30, \"series_type\": \"close\", \"format\": \"json\", \"interval\": \"1min\", \"symbol\": \"AAPL\", \"rsi_period\": 3, \"up_down_length\": 2}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: CRSI",
    "tool description": "Generates overbought and oversold signals based on RSI values for financial assets. This endpoint is part of the Financial Data API, which provides real-time and historical data on stocks, forex, crypto, ETFs, and indices. It leverages technical analysis to help traders identify potential market entry and exit points.",
    "API name": "CRSI",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides time-series data for the ConnorsRSI (CRSI) technical indicator for a specified financial asset, such as a stock, forex pair, or cryptocurrency. The output consists of metadata describing the asset and indicator parameters, along with a list of historical CRSI values and their corresponding datetimes. This information is intended to help traders identify potentially overbought (high CRSI) or oversold (low CRSI) market conditions to inform trading strategies.",
      "output_format": "The top-level response is a JSON object containing two keys: `meta` (an object) and `values` (an array). The `values` array contains a list of JSON objects, each representing a data point in the time series. Each data point object includes a `datetime` (string) and a `crsi` value (string-encoded number). The format of the `datetime` string depends on the time interval specified (e.g., `YYYY-MM-DD` for daily, `YYYY-MM-DD HH:MM:SS` for hourly). The provided examples are truncated, suggesting the full list of values might be longer, although no pagination mechanism is shown."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The CRSI output contains asset symbol information that can be used to analyze the same asset with other technical indicators"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI metadata can be used to fetch time series data for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to compare with standard RSI values for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: STOCHRSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to analyze the same asset with Stochastic RSI for additional confirmation"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to analyze momentum with MACD for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to analyze volatility with Bollinger Bands for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SUPERTREND",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to identify trend direction with SuperTrend for the same asset"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to measure trend strength with ADX for the same asset"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from CRSI can be used to get detailed company profile information"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/medprice\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MEDPRICE",
    "tool description": "Retrieves the median price of a financial instrument. This endpoint is part of Twelve Data's financial data platform, which provides real-time and historical data on stocks, forex, crypto, ETFs, and indices. It leverages the platform's extensive database to calculate median prices, offering developers insights into market trends and facilitating informed trading decisions.",
    "API name": "MEDPRICE",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool returns a time-series of median price data for a given financial instrument (stock, forex, or crypto) over a specified interval. The output includes a list of data points, each with a timestamp and the corresponding median price. It also provides comprehensive metadata about the financial instrument, such as its symbol, type, currency, and exchange, which is useful for market analysis and developing trading strategies.",
      "output_format": "The output is a single JSON object containing two top-level keys: 'meta' and 'values'. The 'meta' key holds an object with metadata about the request. The 'values' key contains a JSON array of objects, with each object representing a data point containing a 'datetime' and a 'medprice'. The 'medprice' value is a string-encoded number. The data points in the 'values' array are sorted in reverse chronological order. Some fields within the 'meta' object may be absent depending on the type of financial instrument."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The equity of your choice."
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The name of the security of your choice."
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency"
          }
        ]
      },
      {
        "tool name": "Twelve Data: SMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency"
          }
        ]
      },
      {
        "tool name": "Twelve Data: EMA",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ATR",
        "connect params": [
          {
            "name": "symbol",
            "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single symbol"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "A single stock symbol"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Hotels com Provider",
    "parent tool description": "Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one",
    "tool name": "Hotels com Provider: Domains List",
    "tool description": "Retrieves a comprehensive list of available domains, domain codes, currencies, and locales for the Hotels.com platform. This endpoint provides essential reference data needed to properly configure and localize hotel searches through the Hotels.com service, which offers access to hotel listings, pricing information, property photos, and guest reviews. The data returned helps ensure that search queries are formatted correctly for specific regions and that results can be displayed with appropriate currency and language settings.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://hotels-com-provider.p.rapidapi.com/v2/domains\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hotels-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Domains List",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a comprehensive JSON object mapping two-letter domain codes to their specific configurations for the Hotels.com platform. Each domain's configuration includes its URL, three-letter country code, various site identifiers, default currency, and a list of supported locales. This reference data is crucial for localizing API requests, such as hotel searches, by ensuring the correct language and currency settings are used for a specific region.",
      "output_format": "The output is a single, non-paginated JSON object. The top-level keys of this object are two-letter domain codes (e.g., 'AE', 'AR'). The value for each key is another object containing the domain's properties, including a nested 'supported_locales' object. This nested object is also a dictionary, keyed by the locale code (e.g., 'en_GB'). Some fields within the nested structures, like 'language_code', can be null."
    },
    "connected tools": [
      {
        "tool name": "Hotels com Provider: Hotel Slug convert",
        "connect params": []
      },
      {
        "tool name": "Priceline com Provider: Hotel details",
        "connect params": [
          {
            "param_name": "currency",
            "description": "Can use currency codes from the source tool"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      },
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      }
    ],
    "optional_parameters": [
      {
        "name": "slow_k_period",
        "type": "NUMBER",
        "description": "",
        "default": 1
      },
      {
        "name": "slow_kma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "slow_dma_type",
        "type": "STRING",
        "description": "Supports: `SMA`, `EMA`, `WMA`, `DEMA`, `TEMA`, `TRIMA`, `KAMA`, `MAMA`, `T3MA`",
        "default": "SMA"
      },
      {
        "name": "fast_k_period",
        "type": "NUMBER",
        "description": "",
        "default": 14
      },
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "slow_d_period",
        "type": "NUMBER",
        "description": "",
        "default": 3
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/stoch\"\nquerystring = {\"slow_k_period\": 1, \"symbol\": \"AAPL\", \"interval\": \"1min\", \"slow_kma_type\": \"SMA\", \"slow_dma_type\": \"SMA\", \"fast_k_period\": 14, \"format\": \"json\", \"slow_d_period\": 3, \"outputsize\": 30}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: STOCH",
    "tool description": "Generates a stochastic oscillator analysis to assess price trend strength using real-time and historical financial data (stocks, forex, crypto, ETFs, indices) from the parent tool's API. This technical indicator leverages algorithmic calculations to identify overbought or oversold market conditions, helping traders make informed decisions. The parent tool provides developers with instant access to comprehensive market data, enabling integration of advanced financial analytics into applications.",
    "API name": "STOCH",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool output provides a time-series of Stochastic Oscillator data for a specified financial instrument (like a stock, forex, or cryptocurrency). The data includes metadata about the instrument and the indicator's parameters, followed by a list of values containing the datetime, slow %K line, and slow %D line. This output is used in technical analysis to identify overbought or oversold conditions and potential trend reversals.",
      "output_format": "The output is a single JSON object with two top-level keys: 'meta' and 'values'. The 'meta' key holds an object with metadata about the query, while the 'values' key holds a JSON array of data points. Each data point is an object containing a 'datetime' string and the corresponding 'slow_k' and 'slow_d' values, which are also represented as strings."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The STOCH output contains symbol information in the meta data that can be used to query the same symbol"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with RSI"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with MACD"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with Bollinger Bands"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to get price data for the same asset"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: CCI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with CCI"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      },
      {
        "tool name": "Twelve Data: ADX",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from STOCH output's meta data can be used to analyze the same asset with ADX"
          },
          {
            "name": "interval",
            "description": "The interval from STOCH output's meta data can be used to maintain consistent timeframes"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Twelve Data",
    "parent tool description": "Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).",
    "required_parameters": [
      {
        "name": "interval",
        "type": "STRING",
        "description": "Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`",
        "default": "1min"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [
      {
        "name": "format",
        "type": "STRING",
        "description": "Value can be `CSV` or `JSON`\nDefault `JSON`",
        "default": "json"
      },
      {
        "name": "outputsize",
        "type": "NUMBER",
        "description": "Default `30` when no date parameters are set, otherwise set to maximum",
        "default": 30
      },
      {
        "name": "series_type",
        "type": "STRING",
        "description": "Supports: `open`, `high`, `low`, `close`",
        "default": "close"
      },
      {
        "name": "time_period",
        "type": "NUMBER",
        "description": "",
        "default": 9
      }
    ],
    "code": "import requests\n\nurl = \"https://twelve-data1.p.rapidapi.com/minindex\"\nquerystring = {\"interval\": \"1min\", \"format\": \"json\", \"outputsize\": 30, \"series_type\": \"close\", \"symbol\": \"AAPL\", \"time_period\": 9}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twelve-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "tool name": "Twelve Data: MININDEX",
    "tool description": "Retrieves the minimum value of a financial index over a specified period. This endpoint leverages Twelvedata's API, which provides real-time and historical data across stocks, forex, crypto, ETFs, and indices, enabling developers to analyze market trends and make informed decisions about financial instruments.",
    "API name": "MININDEX",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool's output provides the calculated MININDEX (Index of Lowest Value) for a specific financial instrument over a series of time points. The response is structured into two main parts: a `meta` object containing details about the instrument (e.g., symbol, interval, type) and the indicator parameters, and a `values` array containing the time-series data. Each entry in the `values` array consists of a datetime and the corresponding `minidx` value, which is useful for technical analysis of market trends.",
      "output_format": "The output is a single JSON object. This object contains a `meta` object and a `values` array. The `values` array holds a list of objects, each with a `datetime` and a `minidx` key. Note that the numerical `minidx` value is returned as a string. The fields within the `meta` object can vary depending on the type of financial instrument (e.g., stocks use `currency`, while forex uses `currency_base` and `currency_quote`). The examples appear truncated, suggesting a limit on the number of returned data points."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          },
          {
            "name": "interval",
            "description": "The interval from the MININDEX output's meta object can be used to maintain consistent time granularity"
          }
        ]
      },
      {
        "tool name": "Twelve Data: RSI",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          },
          {
            "name": "interval",
            "description": "The interval from the MININDEX output's meta object can be used to maintain consistent time granularity"
          }
        ]
      },
      {
        "tool name": "Twelve Data: MACD",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          },
          {
            "name": "interval",
            "description": "The interval from the MININDEX output's meta object can be used to maintain consistent time granularity"
          }
        ]
      },
      {
        "tool name": "Twelve Data: BBANDS",
        "connect params": [
          {
            "name": "symbol",
            "description": "The symbol from the MININDEX output's meta object can be used to query the same financial instrument"
          },
          {
            "name": "interval",
            "description": "The interval from the MININDEX output's meta object can be used to maintain consistent time granularity"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mboum Finance",
    "parent tool description": "Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! ",
    "required_parameters": [
      {
        "name": "symbol",
        "type": "STRING",
        "description": "A single symbol",
        "default": "AAPL"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mboum-finance.p.rapidapi.com/qu/quote/earnings-history\"\nquerystring = {\"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mboum-finance.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Mboum Finance: stock/earnings-history/{stock}",
    "tool description": "Retrieves earnings history for a specific stock, providing detailed records of past financial performance. This endpoint leverages the Mboum Finance Official API's comprehensive financial data infrastructure, accessing structured datasets from sources like SEC filings and market databases to deliver accurate, granular earnings information. It enables users to analyze historical revenue, profit margins, and other key metrics, supporting informed investment decisions and financial research within a broader toolset that includes stocks, options, ETFs, and market news.",
    "API name": "stock/earnings-history/{stock}",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "This tool retrieves historical quarterly earnings data for a specific stock. It provides a list of the last four quarters' earnings reports, including the actual and estimated Earnings Per Share (EPS), the difference between them, and the surprise percentage. This information allows users to analyze a company's recent financial performance against market expectations, aiding in investment research.",
      "output_format": "The output is a single JSON object. The core information is located within an array at `body.history`. Each object in this array represents a single quarter's earnings and contains nested objects for financial figures (like `epsActual`), which provide both a raw numerical value (`raw`) and a formatted string (`fmt`). There is no evidence of pagination; the tool appears to consistently return the four most recent quarters."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: TIME_SERIES_DAILY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve daily time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_WEEKLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve weekly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Quote Endpoint",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to get current quote information"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_INTRADAY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve intraday time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: TIME_SERIES_MONTHLY",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve monthly time series data"
          }
        ]
      },
      {
        "tool name": "Alpha Vantage: Technical Indicators",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used for technical indicator calculations"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/history/{stock}/{interval}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve historical price data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/calendar-events/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve calendar events"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/income-statement/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve income statements"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/index-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-transactions/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/institution-ownership/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve institutional ownership data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/net-share-purchase-activity/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/upgrade-downgrade-history/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/recommendation-trend/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/sec-filings/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/insider-holders/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve insider holders information"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: stock/balance-sheet/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve balance sheet data"
          }
        ]
      },
      {
        "tool name": "Mboum Finance: options/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: News Sentiment Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from earnings history can be used to retrieve news sentiment data"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Most Negative News",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from earnings history can be used to retrieve most negative news"
          }
        ]
      },
      {
        "tool name": "Stock Sentiment API: Market Data",
        "connect params": [
          {
            "name": "ticker",
            "description": "The stock symbol from earnings history can be used to retrieve market data"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Logo",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve company logo"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Time Series",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve time series data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: options",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve options data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/financial-data",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve financial data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: market/news/{stock}",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve related news"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/key-statistics",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve key statistics"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-holders",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve insider holders information"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/upgrade-downgrade-history",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve upgrade/downgrade history"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/insider-transactions",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve insider transactions"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/index-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve index trend data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/profile",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve company profile"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/calendar-events",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve calendar events"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/recommendation-trend",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve recommendation trends"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/net-share-purchase-activity",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve net share purchase activity"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/institution-ownership",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve institutional ownership data"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/sec-filings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve SEC filings"
          }
        ]
      },
      {
        "tool name": "Yahoo Finance_v2: stock/earnings",
        "connect params": [
          {
            "name": "symbol",
            "description": "The stock symbol from earnings history can be used to retrieve earnings data"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Youtube Music API (Detailed)",
    "parent tool description": "Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.",
    "tool name": "Youtube Music API (Detailed): Get Song",
    "tool description": "Returns metadata and streaming information about a song or video, providing comprehensive details on the content's attributes and playback capabilities. This endpoint leverages the detailed YouTube Music API, which offers extensive access to music-related data including lyrics, trends, albums, artists, songs, users, and playlists across the YouTube Music platform. The returned information helps applications integrate with or analyze content from one of the world's largest music streaming services.",
    "required_parameters": [
      {
        "name": "video_id",
        "type": "STRING",
        "description": "",
        "default": "RS0FhoKAHvA"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://youtube-music-api-detailed.p.rapidapi.com/get_song\"\nquerystring = {\"video_id\": video_id}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "Get Song",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a single JSON object containing detailed metadata and streaming information for a song or video from YouTube Music. This includes data such as content description, a list of countries where it's available, deep-linking information for mobile applications, and content category. The information is designed to help applications integrate with or analyze content from the YouTube Music platform.",
      "output_format": "The output is a single, deeply nested JSON object. The root key is 'microformat', which contains a 'microformatDataRenderer' object with the song's metadata. Fields can be strings, booleans, or arrays of strings (like 'availableCountries'). The provided examples are truncated, so the full structure is not visible."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "Can use song title/artist information from YouTube Music API output"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "Can use song title/artist information from YouTube Music API output"
          }
        ]
      },
      {
        "tool name": "SoundCloud Scraper: Download Lyrics on Spotify (2 Quotas)",
        "connect params": [
          {
            "name": "track",
            "description": "Can use song information to find equivalent on SoundCloud"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Get Song Related",
        "connect params": [
          {
            "name": "browse_id",
            "description": "Can use browse_id if available in the source output"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Alpha Vantage",
    "parent tool description": "The simplest and most effective way to receive stock, ETF, forex, technical indicators, and cryptocurrency data.  Constantly ranked as a leading API provider for ease of use, accuracy, and price. [See the documentation](https://www.alphavantage.co/documentation/) and [read more](https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631) on the market data industry.  [Start now for free](https://www.alphavantage.co/support/#api-key).",
    "required_parameters": [
      {
        "name": "market",
        "type": "STRING",
        "description": "The exchange market of your choice. It can be any of the market in the market list. For example: market=CNY.",
        "default": "CNY"
      },
      {
        "name": "function",
        "type": "STRING",
        "description": "The time series of your choice.",
        "default": "DIGITAL_CURRENCY_WEEKLY"
      },
      {
        "name": "symbol",
        "type": "STRING",
        "description": "The digital/crypto currency of your choice. It can be any of the currencies in the digital currency list. For example: symbol=BTC.",
        "default": "BTC"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://alpha-vantage.p.rapidapi.com/query\"\nquerystring = {\"market\": market, \"function\": function, \"symbol\": symbol}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"alpha-vantage.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "tool name": "Alpha Vantage: DIGITAL_CURRENCY_WEEKLY",
    "tool description": "Returns weekly historical time series for a digital currency (e.g., BTC) traded on a specific market (e.g., CNY/Chinese Yuan), refreshed daily at midnight (UTC) with prices and volumes quoted in both the market-specific currency and USD. This endpoint is part of a comprehensive financial data platform that provides stock, ETF, forex, and cryptocurrency data, consistently ranked for ease of use, accuracy, and reliability, enabling users to access critical market insights through a single unified API service.",
    "API name": "DIGITAL_CURRENCY_WEEKLY",
    "domain name": "Finance",
    "output_info": {
      "output_info_summary": "The tool provides weekly historical time series data (open, high, low, close prices, and volume) for a specified digital currency traded in a specific market. If the requested market is not USD, the price data is provided in both the local currency and USD. The output also includes metadata about the data, such as the currency and market names, and the last refresh timestamp.",
      "output_format": "The primary output is a JSON object with two main keys: 'Meta Data' and 'Time Series (Digital Currency Weekly)'. The 'Time Series (Digital Currency Weekly)' key holds an object where each key is a date string ('YYYY-MM-DD') representing a week. The value for each date is an object containing the OHLCV data. The structure of this price data object changes based on the market: for USD markets, it's a simple set of keys; for other markets, it provides keys for both the local currency and USD. In case of an error, the output is a JSON object with a single 'Error Message' key."
    },
    "connected tools": [
      {
        "tool name": "Alpha Vantage: CURRENCY_EXCHANGE_RATE (Crypto)",
        "connect params": [
          {
            "name": "from_currency",
            "description": "The digital currency symbol from the weekly data can be used to get current exchange rate"
          },
          {
            "name": "to_currency",
            "description": "The market currency from the weekly data can be used as the target currency"
          }
        ]
      },
      {
        "tool name": "Twelve Data: Cryptocurrencies List",
        "connect params": [
          {
            "name": "currency_base",
            "description": "The digital currency symbol from the weekly data can be used to filter cryptocurrency pairs"
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Realtime Rates",
        "connect params": [
          {
            "name": "symbol",
            "description": "The digital currency symbol from the weekly data can be used to get real-time price"
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Realtime Volume",
        "connect params": [
          {
            "name": "symbol",
            "description": "The digital currency symbol from the weekly data can be used to get real-time volume"
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Market Capitalization",
        "connect params": [
          {
            "name": "symbol",
            "description": "The digital currency symbol from the weekly data can be used to get market capitalization"
          }
        ]
      },
      {
        "tool name": "Realtime Crypto Prices: Get Liquidity Value",
        "connect params": [
          {
            "name": "symbol",
            "description": "The digital currency symbol from the weekly data can be used to get liquidity value"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Billboard",
    "parent tool description": "Billboard charts: Hot 100, Billboard 200, Billboard 200 Global, Artist 100 and more",
    "tool name": "Billboard: Hot 100",
    "tool description": "Provides detailed information about Billboard's Hot 100 chart, displaying the current rankings of the most popular songs in the United States. This endpoint delivers access to Billboard's comprehensive music chart system, which includes not only the Hot 100 but also other major charts like Billboard 200, Billboard Global 200, and Artist 100. Billboard charts are the music industry's standard for measuring the popularity of artists, albums, and songs based on sales, radio airplay, streaming data, and other metrics, offering authoritative insights into current music trends and performance.",
    "required_parameters": [
      {
        "name": "date",
        "type": "DATE (YYYY-MM-DD)",
        "description": "Set the date for which you want to get a chart.",
        "default": "2020-03-18"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://billboard2.p.rapidapi.com/hot_100\"\nquerystring = {\"date\": \"2020-03-18\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"billboard2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Hot 100",
    "domain name": "Music",
    "output_info": {
      "output_info_summary": "The tool returns a ranked list of songs from the Billboard Hot 100 chart. For each song, it provides details such as the artist, title, current rank, last week's rank, peak position, and the number of weeks it has been on the chart. This data allows users to track the current popularity and historical performance of top songs in the United States.",
      "output_format": "The output is a string-serialized JSON array of objects. Each object corresponds to a song and its chart data. The 'artist' field contains HTML `<a>` tags linking to Billboard's website. The 'weeks_on_chart' field can be an empty string, likely for new entries. Some string values may contain HTML character entities (e.g., `&#039;`)."
    },
    "connected tools": [
      {
        "tool name": "Spotify: Search",
        "connect params": [
          {
            "name": "q",
            "description": "The song title and artist from Hot 100 can be used as search query"
          },
          {
            "name": "type",
            "description": "Can be set to 'tracks' to search for songs from the Hot 100 chart"
          }
        ]
      },
      {
        "tool name": "Shazam: search",
        "connect params": [
          {
            "name": "term",
            "description": "The song title and artist from Hot 100 can be used as search term"
          }
        ]
      },
      {
        "tool name": "Youtube Music API (Detailed): Search",
        "connect params": [
          {
            "name": "query",
            "description": "The song title and artist from Hot 100 can be used as search query"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "BestBuy Product Data",
    "parent tool description": "BestBuy Product Data API\nContact me at: muktheeswaran.m@gmail.com for builing custom spiders or custom requests.",
    "tool name": "BestBuy Product Data: BestBuyProductData",
    "tool description": "Searches for products on BestBuy using a keyword and page number parameter, allowing you to find specific items like 'iphone', 'ps5', or 'sony tv'. This BestBuy Product Data API retrieves organized product information from BestBuy's catalog, with pagination support where page numbers start at 1 (maximum page depends on available product quantity). The API provides structured access to BestBuy's extensive inventory, enabling efficient product discovery and comparison for applications, research, or shopping assistance.",
    "required_parameters": [
      {
        "name": "keyword",
        "type": "STRING",
        "description": "",
        "default": "iphone"
      },
      {
        "name": "page",
        "type": "NUMBER",
        "description": "",
        "default": "1"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://bestbuy-product-data.p.rapidapi.com/bestbuy/\"\nquerystring = {\"keyword\": keyword, \"page\": page}\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"bestbuy-product-data.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers, params=querystring)\n\nprint(response.json())\n",
    "API name": "BestBuyProductData",
    "domain name": "eCommerce",
    "output_info": {
      "output_info_summary": "The tool returns a list of product data from BestBuy based on a search keyword. Each product entry contains detailed information such as title, price, rating, model number, and URLs for the product and its image. In cases where no products are found, the tool returns an error object with an explanatory message.",
      "output_format": "The primary output is a JSON array where each object represents a single product. In an error state, the output is a JSON object with a single key, \"Error\", containing a descriptive string. Several fields within the product objects, such as 'color', 'offer_percent', and 'regular_price', can be null or contain placeholder text like 'Not Given'. The tool supports pagination as described in its documentation."
    },
    "connected tools": [
      {
        "tool name": "Amazon Pricing and Product Info: Main Endpoint",
        "connect params": [
          {
            "param_name": "asin",
            "description": "Could use model number from BestBuy product data to search for the same product on Amazon"
          }
        ]
      },
      {
        "tool name": "Zappos Realtime Data: Zappos search product",
        "connect params": [
          {
            "param_name": "keyword",
            "description": "Could use product title from BestBuy data to search for similar products on Zappos"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Rocket League",
    "parent tool description": "Ranks, stats, news & more, provided by the fastest and most powerful API for Rocket League.",
    "tool name": "Rocket League: Population",
    "tool description": "Checks the current player population across different Rocket League playlists using the `/population` endpoint. This leverages the fastest and most powerful Rocket League API to provide real-time data on how many players are active in various game modes, complementing the broader suite of features that deliver comprehensive ranks, player statistics, and news for the Rocket League community.",
    "required_parameters": [],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://rocket-league1.p.rapidapi.com/population\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rocket-league1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
    "API name": "Population",
    "domain name": "Gaming",
    "output_info": {
      "output_info_summary": "The tool's output provides real-time data on the Rocket League player population. It returns the total number of players currently online and provides a more detailed breakdown of player counts for each specific game mode or playlist. This information can be used to check server status or see which game modes are the most popular at a given moment.",
      "output_format": "The output is a single JSON object. It contains a top-level integer key 'online' for the total player count, and a key 'playlists' which holds an array of nested objects. Each object in this array represents a specific game mode and details its 'name' as a string and its current 'population' as an integer."
    },
    "connected tools": [
      {
        "tool name": "Rocket League: Tournaments",
        "connect params": [
          {
            "name": "region",
            "description": "The region parameter could be selected based on population data to target regions with higher player counts for better tournament experiences"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mapilion - Vector and Raster Map Tiles",
    "parent tool description": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
    "tool name": "Mapilion - Vector and Raster Map Tiles: Get Hillshading Tile",
    "tool description": "Returns special hillshading raster tiles as PNG images that create the visual effect of mountains when used as map overlays, with support for either v1 or v2 versions. This endpoint is part of Mapilion's comprehensive mapping service that delivers vector and raster map tiles at scale, built on OpenStreetMap and OpenMapTiles data, allowing you to enhance your maps with realistic topographical features.",
    "required_parameters": [
      {
        "name": "x",
        "type": "NUMBER",
        "description": "",
        "default": "756"
      },
      {
        "name": "version",
        "type": "string",
        "description": "",
        "default": "v2"
      },
      {
        "name": "z",
        "type": "NUMBER",
        "description": "",
        "default": "11"
      },
      {
        "name": "y",
        "type": "NUMBER",
        "description": "",
        "default": "805"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/hillshades/{version}/{z}/{x}/{y}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get Hillshading Tile",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns the binary data for a PNG image file. This image is a hillshading raster tile, designed to be used as an overlay on a digital map to add visual depth and represent topographical features like mountains and hills. In the case of an error, such as a tile not being found, the tool returns a plain text error message.",
      "output_format": "The successful output is raw binary data for a PNG image, not a structured format like JSON. Error responses appear to be simple plain text strings."
    },
    "connected tools": [
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "kml",
            "description": "Can use the hillshading PNG as a background overlay for static maps"
          }
        ]
      },
      {
        "tool name": "MapFanAPI - Map: mapimage",
        "connect params": [
          {
            "name": "format",
            "description": "Can use the hillshading PNG as a base layer for map visualization"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Route Enhancement",
        "connect params": [
          {
            "name": "elevation",
            "description": "Can use hillshading data to enhance route visualization with terrain information"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Hillshading",
        "connect params": [
          {
            "name": "ratio",
            "description": "Can combine with the hillshading PNG to create enhanced terrain visualization"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Priceline com Provider",
    "parent tool description": "priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one",
    "tool name": "Priceline com Provider: Search cars locations",
    "tool description": "Searches for travel locations by name, allowing you to find specific destinations for your travel planning. This endpoint is part of Priceline.com's comprehensive travel service that lets you search for hotels, rental cars, and flights across multiple destinations. The platform provides access to Priceline's extensive database of travel options, helping you identify locations that match your search criteria as the first step in planning your trip or booking accommodations and transportation.",
    "required_parameters": [
      {
        "name": "name",
        "type": "STRING",
        "description": "Name",
        "default": "London"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://priceline-com-provider.p.rapidapi.com/v1/cars-rentals/locations\"\nquerystring = {\"name\": \"London\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"priceline-com-provider.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
    "API name": "Search cars locations",
    "domain name": "Travel",
    "output_info": {
      "output_info_summary": "The tool returns a list of travel locations, such as airports and cities, that match a user's search query. Each location object in the list provides comprehensive details including its name, type, unique identifiers (like airport codes), and geographic information (latitude, longitude, timezone). The output also includes data relevant to travel planning, such as the number of car rental locations available and various flags indicating booking options, helping users select a precise location for their travel arrangements.",
      "output_format": "The output is a JSON-formatted string representing an array of location objects. Each object has a flat structure. Some fields appear to be conditional based on the location's type or country; for example, `airportName` is present for airports, and `stateCode` may be an empty string for non-US locations. Some numerical values, like `score`, are returned as strings."
    },
    "connected tools": [
      {
        "tool name": "AI Trip Planner: Get Trip Plan",
        "connect params": [
          {
            "param_name": "destination",
            "description": "Can use location names from the source tool output"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Listings by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's geographic information"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool's geographic information"
          }
        ]
      },
      {
        "tool name": "Airbnb listings: Prices and Availability by lat lng",
        "connect params": [
          {
            "param_name": "lat",
            "description": "Can use latitude from the source tool's geographic information"
          },
          {
            "param_name": "lng",
            "description": "Can use longitude from the source tool's geographic information"
          }
        ]
      },
      {
        "tool name": "Flightera Flight Data: airportInfo",
        "connect params": [
          {
            "param_name": "iata",
            "description": "Can use IATA airport codes from the source tool output"
          },
          {
            "param_name": "icao",
            "description": "Can use ICAO airport codes from the source tool output if available"
          }
        ]
      }
    ]
  },
  {
    "parent tool name": "Mapilion - Vector and Raster Map Tiles",
    "parent tool description": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
    "tool name": "Mapilion - Vector and Raster Map Tiles: Get Vector Tile",
    "tool description": "Returns vector tiles following the OpenMapTiles schema, allowing access to standardized map data in vector format. This endpoint is part of Mapilion's comprehensive mapping service that delivers both vector and raster map tiles at scale, built on OpenStreetMap and OpenMapTiles technologies. The vector tiles provide efficient, detailed geographic data that can be styled and rendered dynamically for interactive mapping applications.",
    "required_parameters": [
      {
        "name": "x",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      },
      {
        "name": "y",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      },
      {
        "name": "z",
        "type": "NUMBER",
        "description": "",
        "default": "0"
      }
    ],
    "optional_parameters": [],
    "code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/{z}/{x}/{y}\"\n\nheaders = {\n    \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n    \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n}\n\nresponse = requests.get(url, headers=headers)\n\nprint(response.json())\n",
    "API name": "Get Vector Tile",
    "domain name": "Mapping",
    "output_info": {
      "output_info_summary": "The tool returns a single map tile in a binary format. This tile contains geographic data features, such as boundaries, water bodies, and labels, organized into distinct layers (e.g., 'boundary', 'water', 'aerodrome_label'). The data follows the OpenMapTiles schema and is intended to be consumed by a mapping client to dynamically render a segment of an interactive map.",
      "output_format": "The output is a raw binary data stream, not a structured text format like JSON or XML. It represents a single vector tile encoded using the Mapbox Vector Tile (MVT) specification, which is based on Protocol Buffers. The data is not human-readable and requires a specialized parser to interpret its contents."
    },
    "connected tools": [
      {
        "tool name": "MapToolkit: Staticmaps",
        "connect params": [
          {
            "name": "geojson",
            "description": "Can use vector tile data converted to GeoJSON for rendering geographic features on static maps"
          }
        ]
      },
      {
        "tool name": "MapToolkit: Planet Vector Tiles",
        "connect params": [
          {
            "name": "x",
            "description": "Can use vector tile coordinates to request complementary vector tile data"
          },
          {
            "name": "y",
            "description": "Can use vector tile coordinates to request complementary vector tile data"
          },
          {
            "name": "z",
            "description": "Can use vector tile coordinates to request complementary vector tile data"
          }
        ]
      },
      {
        "tool name": "Mapilion - Vector and Raster Map Tiles: Get Hillshading Tile",
        "connect params": [
          {
            "name": "x",
            "description": "Can overlay hillshading on the same tile coordinates as the vector tile"
          },
          {
            "name": "y",
            "description": "Can overlay hillshading on the same tile coordinates as the vector tile"
          },
          {
            "name": "z",
            "description": "Can overlay hillshading on the same tile coordinates as the vector tile"
          }
        ]
      }
    ]
  }
]